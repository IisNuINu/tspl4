#
# NuINu <don't@send.my>, 2018.
#
#. extracted from start.html
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-07-24 12:28+0300\n"
"PO-Revision-Date: 2018-10-18 14:32+0300\n"
"Last-Translator: NuINu <don't@send.my>\n"
"Language-Team: Russian <don't@send.my>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Gtranslator 2.91.7\n"
"Plural-Forms: nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : "
"4;\n"

#: start.html:10
msgid ""
"<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://"
"www.w3.org/TR/html4/loose.dtd\">\n"
"<!-- saved from url=(0046)start.html#./start:h0 -->\n"
"<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; "
"charset=windows-1252\">\n"
"<title>Getting Started</title>\n"
"<link href=\"./start_files/tspl.css\" rel=\"stylesheet\" type=\"text/css\">\n"
"</head>\n"
"<body>\n"
"<a name=\"g4\"></a>\n"
"<a name=\"./start:h0\"></a>"
msgstr ""
"<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://"
"www.w3.org/TR/html4/loose.dtd\">\n"
"<!-- saved from url=(0046)start.html#./start:h0 -->\n"
"<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; "
"charset=utf8\">\n"
"<title>Начало</title>\n"
"<link href=\"./start_files/tspl.css\" rel=\"stylesheet\" type=\"text/css\">\n"
"</head>\n"
"<body>\n"
"<a name=\"g4\"></a>\n"
"<a name=\"./start:h0\"></a>"

#: start.html:15
msgid ""
"<div style=\"font-size: 12px; width: 500px; height: 500px; border: solid thin"
"\">\n"
"<img style=\"padding: 20px 10px 20px 20px\" src=\"./start_files/ch2.png"
"\"><img src=\"./start_files/jph.png\">\n"
"</div>\n"
"<h1>Chapter 2. Getting Started<a name=\"CHPTGETTINGSTARTED\"></a></h1>"
msgstr ""
"<div>\n"
"<img  src=\"./start_files/ch2.png\">\n"
"</div>\n"
"<h1>Chapter 2. Начало<a name=\"CHPTGETTINGSTARTED\"></a></h1>"

#: start.html:25
msgid ""
"<p>\n"
"This chapter is an introduction to Scheme for programmers who are new\n"
"to the language.\n"
"You will get more from this chapter if you are sitting in front of an\n"
"interactive Scheme system, trying out the examples as you go."
msgstr ""
"<p>\n"
"Эта глава представляет собой введение в Scheme для программистов, которые\n"
"не знакомы с языком.\n"
"Вы получите больше от прочтения этой главы, если сидите перед интерактивной\n"
"системой Scheme, пробуя примеры по мере чтения."

#: start.html:32
msgid ""
"</p><p>\n"
"After reading this chapter and working the exercises, you should be\n"
"able to start using Scheme.\n"
"You will have learned the syntax of Scheme programs and how they are\n"
"executed, along with how to use simple data structures and control\n"
"mechanisms."
msgstr ""
"</p><p>\n"
"После прочтения этой главы и работы над упражнениями, вы сможете начать\n"
"использовать Scheme.\n"
"Вы узнаете синтаксис программ Scheme и их выполнение, а также как "
"использовать\n"
"простые структуры данных и механизмы управления."

#: start.html:35
msgctxt "start.html:35"
msgid "</p><p>"
msgstr ""

#: start.html:37
msgid ""
"</p><h3><a name=\"g5\"></a><a name=\"./start:h1\"></a>Section 2.1. "
"Interacting with Scheme<a name=\"SECTGSINTERACTING\"></a></h3>"
msgstr ""
"</p><h3><a name=\"g5\"></a><a name=\"./start:h1\"></a>Section 2.1. "
"Взаимодействие со Scheme<a name=\"SECTGSINTERACTING\"></a></h3>"

#: start.html:48
msgid ""
"<p>\n"
"Most Scheme systems provide an interactive programming environment\n"
"that simplifies program development and experimentation.\n"
"The simplest interaction with Scheme follows a \"read-evaluate-print\"\n"
"cycle.\n"
"A program (often called a <i>read-evaluate-print loop</i>, or REPL)\n"
"reads each expression you type at the keyboard,\n"
"evaluates it, and prints its value."
msgstr ""
"<p>\n"
"Большинство систем Scheme обеспечивают интерактивную среду "
"программирования,\n"
"которая упрощает разработку программ и постановку программных "
"экспериментов.\n"
"Простейшее взаимодействие с Scheme цикл последовательных операций \"ввод-"
"выполнение-печать\"\n"
"(\"read-evaluate-print\").\n"
"Программа (часто называемая <i>read-evaluate-print loop</i>, или REPL)\n"
"читает каждое выражение вводимое с клавиатуры и выполняет его, и печатает "
"его значение."

#: start.html:66
msgid ""
"</p><p>\n"
"With an interactive Scheme system, you can type an expression at \n"
"the keyboard and see its value immediately.\n"
"You can define a procedure and apply it to arguments to see how it works. \n"
"You can even type in an entire program consisting of a set of procedure \n"
"definitions and test it without leaving the system.\n"
"When your program starts getting longer, it will be more convenient to \n"
"type it into a file (using a text editor), load the file\n"
"and test it interactively.\n"
"In most Scheme systems, a file may be loaded with the nonstandard\n"
"procedure <a name=\"./start:s0\"></a><tt>load</tt>, which takes a string\n"
"argument naming the file.\n"
"Preparing your program in a file has several advantages: you have a \n"
"chance to compose your program more carefully, you can correct errors \n"
"without retyping the program, and you can retain a copy for later use.\n"
"Most Scheme implementations treat expressions loaded from a file the same as "
"expressions \n"
"typed at the keyboard."
msgstr ""
"</p><p>\n"
"С помощью интерактивной системы Scheme, вы можете ввести выражение на\n"
"клавиатуре и сразу увидеть его значение.\n"
"Вы можете определить процедуру и применить ее к аргументам, чтобы увидеть\n"
"как она работает.\n"
"Вы можете ввести всю программу, состоящую из набора процедур и "
"протестировать\n"
"ее не покидая систему.\n"
"Когда ваша программа начнет увеличиваться, удобнее будет ввести ее в файл\n"
"(используя текстовый редактор), загрузить файл и протестировать его\n"
"в интерактивном режиме.\n"
"В большинстве систем Scheme, файл может быть загружен не стандартной\n"
"процедурой <a name=\"./start:s0\"></a><tt>load</tt>,  которая принимает\n"
"строковый аргумент, именующий файл.\n"
"Подготовка вашей программы в файле имеет несколько преимуществ: вы можете\n"
"исправить ошибки без повторного ввода программы, и вы можете сохранить "
"копию\n"
"для последующего использования.\n"
"Большинство реализаций Scheme обрабатывают выражения, загруженные из файла, "
"также\n"
"как если бы эти выражения были введены на клавиатуре."

#: start.html:72
msgid ""
"</p><p>\n"
"While Scheme provides various input and output procedures, the REPL\n"
"takes care of reading expressions and printing their values.\n"
"This frees you to concentrate on writing your program without worrying \n"
"about how its results will be displayed."
msgstr ""
"</p><p>\n"
"Хотя Scheme предоставляет различные процедуры ввода и вывода, REPL\n"
"заботиться о чтении выражений и печати их значений. Это позволяет\n"
"вам сосредоточиться на написании вашей программы, не беспокоясь о том, \n"
"как ее результаты будут отображаться."

#: start.html:82
msgid ""
"</p><p>\n"
"The examples in this chapter and in the rest of the book follow a\n"
"regular format.\n"
"An expression you might type from your keyboard is given first,\n"
"possibly spanning several lines.\n"
"The value of the expression is given\n"
"after the <img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">, to be "
"read as \"evaluates to.\"\n"
"The <img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\"> is omitted for "
"definitions and when the value of\n"
"an expression is unspecified."
msgstr ""
"</p><p>\n"
"Примеры в этой главе и в остальной части книги соотвествуют регулярному "
"формату.\n"
"Вы можете ввести выражение, которое вы можете ввести с клавиатуры, стоит "
"вначале,\n"
"возможно, в нескольких строках.\n"
"Значение выражения указывается после символа <img src=\"./start_files/0.gif"
"\" alt=\"&lt;graphic&gt;\">,\n"
"который можно прочитать как \"вычисляется в.\"\n"
"Для определений <img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\"> "
"параметр опущен и когда значение\n"
"выражения не указано."

#: start.html:93
msgid ""
"</p><p>\n"
"The example programs are formatted in a style that \"looks nice\"\n"
"and conveys the structure of the program.\n"
"The code is easy to read because the relationship between each\n"
"expression and its subexpressions is clearly shown.\n"
"Scheme ignores indentation and line breaks, however, so there is no\n"
"need to follow a particular style.\n"
"The important thing is to establish one style and keep to it.\n"
"Scheme sees each program as if it were on a single line, with its\n"
"subexpressions ordered from left to right."
msgstr ""
"</p><p>\n"
"Примеры программ отформатированы в стиле который  \"выглядит хорошо\"\n"
"и передает структуру программы.\n"
"Код легко читается, потому что явно видно соотношение между каждым "
"выражением\n"
"и его подвыражениями.\n"
"Однако Scheme игнорирует отсупы и переносы строк, поэтому нет необходимости\n"
"следовать определенному стилю.\n"
"Важно установить один стиль и сохранить его.\n"
"Scheme видит каждую программу, как если бы она была на одной строке, а ее\n"
"подвыражения упорядочены слева на право."

#: start.html:102
msgid ""
"</p><p>\n"
"</p><p>If you have access to an interactive Scheme system, it might be a "
"good idea to\n"
"start it up now and type in the examples as you read.\n"
"One of the simplest Scheme expressions is a <a name=\"./start:s1\"></"
"a>string constant.\n"
"Try typing <tt>\"Hi&nbsp;Mom!\"</tt> (including the double quotes) in "
"response\n"
"to the prompt.\n"
"The system should respond with <tt>\"Hi&nbsp;Mom!\"</tt>; the value of any\n"
"constant is the constant itself."
msgstr ""
"</p><p>\n"
"</p><p>Если у вас есть доступ к интеркативной среде Scheme, может быть "
"неплохо начать\n"
"ее сейчас использовать и набирать примеры по мере чтения.\n"
"Одним из простейших выражений Scheme является <a name=\"./start:s1\"></"
"a>строковая константа.\n"
"Попробуйте ввести <tt>\"Hi&nbsp;Mom!\"</tt> (включая двойные кавычки) в "
"ответ на приглашение.\n"
"Система должна ответить <tt>\"Hi&nbsp;Mom!\"</tt>; значение любой констаны "
"является\n"
"самой константой."

#: start.html:104
msgctxt "start.html:104"
msgid "</p><p>"
msgstr ""

#: start.html:109
msgid ""
"</p><p><tt>\"Hi&nbsp;Mom!\"&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;\"Hi&nbsp;Mom!\"</tt>\n"
"</p><p>Here is a set of expressions, each with Scheme's response.\n"
"They are explained in later sections of this chapter, but for now\n"
"use them to practice interacting with Scheme."
msgstr ""
"</p><p><tt>\"Hi&nbsp;Mom!\"&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;\"Hi&nbsp;Mom!\"</tt>\n"
"</p><p>Вот набор выражений, с ответом Scheme на каждый из них.\n"
"Они объясняются в последующих разделах этой главы, но теперь используйте их "
"для взаимодействия со Scheme."

#: start.html:111
msgctxt "start.html:111"
msgid "</p><p>"
msgstr ""

#: start.html:113
msgid ""
"</p><p><tt>\"hello\"&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;\"hello\"<br>"
msgstr ""

#: start.html:115
msgid ""
"42&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;42<br>"
msgstr ""

#: start.html:117
msgid ""
"22/7&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;22/7<br>"
msgstr ""

#: start.html:119
msgid ""
"3.141592653&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;3.141592653<br>"
msgstr ""

#: start.html:121
msgid ""
"+&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;#&lt;"
"procedure&gt;<br>"
msgstr ""

#: start.html:123
msgid ""
"(+&nbsp;76&nbsp;31)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;107<br>"
msgstr ""

#: start.html:125
msgid ""
"(*&nbsp;-12&nbsp;10)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;-120<br>"
msgstr ""

#: start.html:135
msgid ""
"'(a&nbsp;b&nbsp;c&nbsp;d)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;c&nbsp;d)</tt>\n"
"</p><p>Be careful not to miss any single quotes (&nbsp;<tt>'</tt>&nbsp;), "
"double quotes, or\n"
"parentheses.\n"
"If you left off a single quote in the last\n"
"expression, you probably received a message indicating that an exception\n"
"has occurred.\n"
"Just try again.\n"
"If you left off a closing parenthesis or double quote, the system might\n"
"still be waiting for it."
msgstr ""
"'(a&nbsp;b&nbsp;c&nbsp;d)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;c&nbsp;d)</tt>\n"
"</p><p>Будьте осторожны, чтобы не пропустить ни одной кавычки (&nbsp;<tt>'</"
"tt>&nbsp;), двойной кавычки, или\n"
"скобки. Если в последнем выражении вы пропустите одиночную кавычку, вы "
"вероятно получите сообщение о том,\n"
"что произошло исключение. Попробуйте еще раз.\n"
"Ели вы пропустите закрытие круглой скобки или двойной кавычки, система будет "
"ее ожидать."

#: start.html:139
msgid ""
"</p><p>\n"
"Here are a few more expressions to try.  You can try to figure out on\n"
"your own what they mean or wait to find out later in the chapter."
msgstr ""
"</p><p>\n"
"Вот еще несколько выражений, которые нужно попробовать.  Вы можете "
"попытаться самостоятельно\n"
"выяснить, что они означают или подождать, чтобы узнать о них позже в этой "
"главе."

#: start.html:141
msgctxt "start.html:141"
msgid "</p><p>"
msgstr ""

#: start.html:143
msgctxt "start.html:143"
msgid ""
"</p><p><tt>(car&nbsp;'(a&nbsp;b&nbsp;c))&nbsp;<img src=\"./start_files/0.gif"
"\" alt=\"&lt;graphic&gt;\">&nbsp;a<br>"
msgstr ""

#: start.html:145
msgctxt "start.html:145"
msgid ""
"(cdr&nbsp;'(a&nbsp;b&nbsp;c))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(b&nbsp;c)<br>"
msgstr ""

#: start.html:147
msgctxt "start.html:147"
msgid ""
"(cons&nbsp;'a&nbsp;'(b&nbsp;c))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;c)<br>"
msgstr ""

#: start.html:149
msgctxt "start.html:149"
msgid "(cons&nbsp;(car&nbsp;'(a&nbsp;b&nbsp;c))<br>"
msgstr ""

#: start.html:154
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cdr&nbsp;'(d&nbsp;e&nbsp;f)))&nbsp;<img "
"src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;e&nbsp;f)</"
"tt>\n"
"</p><p>As you can see, Scheme expressions may span more than one line.\n"
"The Scheme system knows when it has an entire expression by matching\n"
"double quotes and parentheses."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cdr&nbsp;'(d&nbsp;e&nbsp;f)))&nbsp;<img "
"src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;e&nbsp;f)</"
"tt>\n"
"</p><p>Как вы можете видеть, выражения Scheme могут охватывать более одной "
"строки.\n"
"Система Scheme знает когда у нее есть введенное выражение , сопоставляя "
"двойные кавычки\n"
"и круглые скобки."

#: start.html:157
msgid ""
"</p><p>\n"
"Next, let's try defining a procedure<a name=\"./start:s2\"></a>."
msgstr ""
"</p><p>\n"
"Далее, давайте попробуем определить процедуру<a name=\"./start:s2\"></a>."

#: start.html:159
msgctxt "start.html:159"
msgid "</p><p>"
msgstr ""

#: start.html:161
msgid "</p><p><tt>(define&nbsp;square<br>"
msgstr ""

#: start.html:163
msgctxt "start.html:163"
msgid "&nbsp;&nbsp;(lambda&nbsp;(n)<br>"
msgstr ""

#: start.html:176
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(*&nbsp;n&nbsp;n)))</tt>\n"
"</p><p>The procedure <tt>square</tt> computes the square <i>n</i><sup>2</"
"sup> of any number <i>n</i>.\n"
"We say more about the expressions that make up this definition later in\n"
"this chapter.\n"
"For now it suffices to say that <tt>define</tt> establishes variable "
"bindings,\n"
"<tt>lambda</tt> creates procedures, and <tt>*</tt> names the multiplication\n"
"procedure.\n"
"Note the form of these expressions.\n"
"All structured forms are enclosed in parentheses and written in\n"
"<a name=\"./start:s3\"></a><i>prefix notation</i>, i.e., the operator "
"precedes the arguments.\n"
"As you can see, this is true even for simple arithmetic operations such\n"
"as <tt>*</tt>."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;(*&nbsp;n&nbsp;n)))</tt>\n"
"</p><p>Процедура <tt>square</tt> вычисляет квадрат <i>n</i><sup>2</sup> "
"любого числа <i>n</i>.\n"
"Мы больше поговорим о выражениях, которые составляют это определение позже в "
"этой главе.\n"
"На данный момент достаточно сказать, что <tt>define</tt> устанавливает "
"привязку переменной(связывает переменную и, в данном случае,\n"
"значение), создаваемое процедурой <tt>lambda</tt>, и <tt>*</tt> именует "
"процедуру умножения.\n"
"Обратите внимание на форму этих выражений.\n"
"Все структурированные формы заключены в круглые скобки и записаны в \n"
"<a name=\"./start:s3\"></a><i>префиксной нотации</i>, т.е., оператор "
"предшествует\n"
"аргументам.\n"
"Как вы можете видеть, это справедливо даже для простых арифметических "
"операций, таких\n"
"как <tt>*</tt>."

#: start.html:179
msgid ""
"</p><p>\n"
"Try using <tt>square</tt>."
msgstr ""
"</p><p>\n"
"Попробуйте использовать <tt>square</tt>."

#: start.html:181
msgctxt "start.html:181"
msgid "</p><p>"
msgstr ""

#: start.html:183
msgid ""
"</p><p><tt>(square&nbsp;5)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;25<br>"
msgstr ""

#: start.html:185
msgid ""
"(square&nbsp;-200)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;40000<br>"
msgstr ""

#: start.html:187
msgid ""
"(square&nbsp;0.5)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;0.25<br>"
msgstr ""

#: start.html:191
msgid ""
"(square&nbsp;-1/2)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;1/4</tt>\n"
"</p><p>Even though the next definition is short, you might enter it into a "
"file.\n"
"Let's assume you call the file \"reciprocal.ss.\""
msgstr ""
"(square&nbsp;-1/2)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;1/4</tt>\n"
"</p><p>Даже если следующее определение короткое, вы можете ввести его в "
"файл.\n"
"Предположим, вы назовете файл \"reciprocal.ss.\""

#: start.html:193
msgctxt "start.html:193"
msgid "</p><p>"
msgstr ""

#: start.html:195
msgctxt "start.html:195"
msgid "</p><p><tt>(define&nbsp;reciprocal<br>"
msgstr ""

#: start.html:197
msgctxt "start.html:197"
msgid "&nbsp;&nbsp;(lambda&nbsp;(n)<br>"
msgstr ""

#: start.html:199
msgctxt "start.html:199"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(=&nbsp;n&nbsp;0)<br>"
msgstr ""

#: start.html:201
msgctxt "start.html:201"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"oops!\"<br>"
msgstr ""

#: start.html:207
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(/&nbsp;1&nbsp;n))))</tt>\n"
"</p><p>This procedure, <a name=\"./start:s4\"></a><tt>reciprocal</tt>, "
"computes the quantity 1/<i>n</i> for any\n"
"number <i>n</i> &#8800; 0.\n"
"For <i>n</i> = 0, <tt>reciprocal</tt> returns the string <tt>\"oops!\"</"
"tt>.\n"
"Return to Scheme and try loading your file with the procedure <tt>load</tt>."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(/&nbsp;1&nbsp;n))))</tt>\n"
"</p><p>процедура(обратное), <a name=\"./start:s4\"></a><tt>reciprocal</tt>, "
"вычисляет величину 1/<i>n</i> для\n"
"любого числа <i>n</i> &#8800; 0.\n"
"Для <i>n</i> = 0, <tt>reciprocal</tt> возвращает строку <tt>\"oops!\"</tt>.\n"
"Вернитесь к Scheme и попробуйте загрузить файл процедурой <tt>load</tt>."

#: start.html:209
msgctxt "start.html:209"
msgid "</p><p>"
msgstr ""

#: start.html:212
msgid ""
"</p><p><tt>(load&nbsp;\"reciprocal.ss\")</tt>\n"
"</p><p>Finally, try using the procedure we have just defined."
msgstr ""

#: start.html:214
msgctxt "start.html:214"
msgid "</p><p>"
msgstr ""

#: start.html:216
msgid ""
"</p><p><tt>(reciprocal&nbsp;10)&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;1/10<br>"
msgstr ""

#: start.html:218
msgid ""
"(reciprocal&nbsp;1/10)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;10<br>"
msgstr ""

#: start.html:220
msgid ""
"(reciprocal&nbsp;0)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;\"oops!\"<br>"
msgstr ""

#: start.html:229
msgid ""
"(reciprocal&nbsp;(reciprocal&nbsp;1/10))&nbsp;<img src=\"./start_files/0.gif"
"\" alt=\"&lt;graphic&gt;\">&nbsp;1/10</tt>\n"
"</p><p>In the next section we will discuss Scheme expressions in more "
"detail.\n"
"Throughout this chapter, keep in mind that your Scheme system is one\n"
"of the most useful tools for learning Scheme.\n"
"Whenever you try one of the examples in the text, follow it up with\n"
"your own examples.\n"
"In an interactive Scheme system, the cost of trying something out\n"
"is relatively small---usually just the time to type it in."
msgstr ""
"(reciprocal&nbsp;(reciprocal&nbsp;1/10))&nbsp;<img src=\"./start_files/0.gif"
"\" alt=\"&lt;graphic&gt;\">&nbsp;1/10</tt>\n"
"</p><p>В следующем разделе мы более подробно обсудим выражения Scheme.\n"
"В этой главе запомните, что ваша система Scheme является одним из\n"
"самых полезных инструментов для обучения Scheme.\n"
"Всякий раз, как вы пытаетесь использовать один из примеров в тексте,\n"
"проверяйте ваши собственные примеры.\n"
"В интерактивной системе Scheme, затраты на то чтобы что то попробовать,\n"
"невелики---обычно это просто время чтобы его ввести."

#: start.html:232
msgctxt "start.html:232"
msgid "</p><p>"
msgstr ""

#: start.html:234
msgid ""
"</p><h3><a name=\"g6\"></a><a name=\"./start:h2\"></a>Section 2.2. Simple "
"Expressions<a name=\"SECTGSSIMPLE\"></a></h3>"
msgstr ""
"</p><h3><a name=\"g6\"></a><a name=\"./start:h2\"></a>Section 2.2. Простые "
"Выражения<a name=\"SECTGSSIMPLE\"></a></h3>"

#: start.html:244
msgid ""
"<p>\n"
"The simplest Scheme expressions are constant data objects, such as strings,\n"
"numbers, symbols, and lists.\n"
"Scheme supports other object types, but these four are enough for\n"
"many programs.\n"
"We saw some examples of strings and numbers in the preceding\n"
"section."
msgstr ""
"<p>\n"
"Простейшим выражением Scheme являются постоянные объекты данных, такие как "
"строки,\n"
"числа, символы и списки.\n"
"Scheme поддерживает другие типы объектов, но этих четырех достаточно для "
"многих программ.\n"
"Мы видели несколько примеров строк и чисел в предыдущем разделе."

#: start.html:251
msgid ""
"</p><p>\n"
"Let's discuss <a name=\"./start:s5\"></a>numbers in a little more detail.\n"
"Numbers are constants.\n"
"If you enter a number, Scheme echoes it back to you.\n"
"The following examples show that Scheme supports several types of\n"
"numbers."
msgstr ""
"</p><p>\n"
"Давайте обсудим <a name=\"./start:s5\"></a>числа немного подробнее.\n"
"Числа - это константы.\n"
"Если вы вводите число, Scheme передает его обратно вам.\n"
"Следующие примеры показывают, что Scheme поддерживает несколько типов\n"
"чисел."

#: start.html:253
msgctxt "start.html:253"
msgid "</p><p>"
msgstr ""

#: start.html:255
msgid ""
"</p><p><tt>123456789987654321&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;123456789987654321<br>"
msgstr ""

#: start.html:257
msgid ""
"3/4&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;3/4<br>"
msgstr ""

#: start.html:259
msgid ""
"2.718281828&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;2.718281828<br>"
msgstr ""

#: start.html:267
msgid ""
"2.2+1.1i&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;2.2+1.1i</tt>\n"
"</p><p>Scheme numbers include exact and inexact integer, rational, real, "
"and\n"
"complex numbers.\n"
"Exact integers and rational numbers have arbitrary precision, i.e., they\n"
"can be of arbitrary size.\n"
"Inexact numbers are usually represented internally using\n"
"IEEE standard floating-point representations."
msgstr ""
"2.2+1.1i&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;2.2+1.1i</tt>\n"
"</p><p>Числа Scheme включают точные и не точные целые, рациональные, "
"действительные и\n"
"комплексные числа.\n"
"Точные целые и рациональные числа имеют произвольную точность, т.е они могут "
"быть\n"
"произвольного размера. Неточные числа обычно представляются внутренне с "
"использованием\n"
"стандартных представлений с плавающей точкой IEEE."

#: start.html:276
msgid ""
"</p><p>\n"
"Scheme provides the names <a name=\"./start:s6\"></a><tt>+</tt>, <a name=\"./"
"start:s7\"></a><tt>-</tt>, <a name=\"./start:s8\"></a><tt>*</tt>, and <a "
"name=\"./start:s9\"></a><tt>/</tt> for\n"
"the corresponding arithmetic procedures.\n"
"Each procedure accepts two numeric arguments.\n"
"The expressions below are called\n"
"<a name=\"./start:s10\"></a><i>procedure applications</i>,\n"
"because they specify the application of a procedure to\n"
"a set of arguments."
msgstr ""
"</p><p>\n"
"Scheme предоставляет имена <a name=\"./start:s6\"></a><tt>+</tt>, <a name="
"\"./start:s7\"></a><tt>-</tt>, <a name=\"./start:s8\"></a><tt>*</tt>, и <a "
"name=\"./start:s9\"></a><tt>/</tt> для соответствующих\n"
"арифметических процедур.\n"
"Каждая процедура принимает два числовых аргумента.\n"
"Выражения, приведенные ниже, называются <a name=\"./start:s10\"></"
"a><i>применением процедур</i>,\n"
"потому что они определяют применение процедуры к набору аргументов."

#: start.html:278
msgctxt "start.html:278"
msgid "</p><p>"
msgstr ""

#: start.html:280
msgid ""
"</p><p><tt>(+&nbsp;1/2&nbsp;1/2)&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;1<br>"
msgstr ""

#: start.html:285
msgid ""
"(-&nbsp;1.5&nbsp;1/2)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;1.0\n"
"<br>\n"
"<br>\n"
"(*&nbsp;3&nbsp;1/2)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;3/2<br>"
msgstr ""

#: start.html:295
msgid ""
"(/&nbsp;1.5&nbsp;3/4)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;2.0</tt>\n"
"</p><p>Scheme employs <a name=\"./start:s11\"></a>prefix notation even for "
"common arithmetic operations.\n"
"Any procedure application, whether the procedure\n"
"takes zero, one, two, or more arguments, is written as\n"
"<tt>(<i>procedure</i>&nbsp;<i>arg</i>&nbsp;...)</tt>.\n"
"This regularity simplifies the syntax of expressions; one notation is\n"
"employed regardless of the operation, and there are no complicated rules\n"
"regarding the <a name=\"./start:s12\"></a>precedence\n"
"or associativity of operators."
msgstr ""
"(/&nbsp;1.5&nbsp;3/4)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;2.0</tt>\n"
"</p><p>В Scheme используется <a name=\"./start:s11\"></a>префиксная нотация "
"даже для обычных арифметических операций.\n"
"Любое применение процедуры, независимо от того, принимает ли она\n"
"ноль, один, два или несколько аргументов, записывается как\n"
"<tt>(<i>procedure</i>&nbsp;<i>arg</i>&nbsp;...)</tt>.\n"
"Эта регулярность упрощает синтаксис выражений; одна нотация используется\n"
"независимо от операции, и нет сложных правил относительно <a name=\"./start:"
"s12\"></a> приоритета или\n"
"ассоциативности операторов."

#: start.html:301
msgid ""
"</p><p>\n"
"Procedure applications may be nested, in which case the innermost\n"
"values are computed first.\n"
"We can thus nest applications of the arithmetic procedures given above\n"
"to evaluate more complicated formulas. "
msgstr ""
"</p><p>\n"
"Применения процедур могут быть вложенными, и в этом случае сначала "
"вычисляются\n"
"внутренние значения.\n"
"Таким образом, мы можем применить описанные выше арифметические процедуры\n"
"для вычисления более сложных формл."

#: start.html:303
msgctxt "start.html:303"
msgid "</p><p>"
msgstr ""

#: start.html:305
msgid ""
"</p><p><tt>(+&nbsp;(+&nbsp;2&nbsp;2)&nbsp;(+&nbsp;2&nbsp;2))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;8<br>"
msgstr ""

#: start.html:307
msgid ""
"(-&nbsp;2&nbsp;(*&nbsp;4&nbsp;1/3))&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;2/3<br>"
msgstr ""

#: start.html:309
msgid ""
"(*&nbsp;2&nbsp;(*&nbsp;2&nbsp;(*&nbsp;2&nbsp;(*&nbsp;2&nbsp;2))))&nbsp;<img "
"src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;32<br>"
msgstr ""

#: start.html:317
msgid ""
"(/&nbsp;(*&nbsp;6/7&nbsp;7/2)&nbsp;(-&nbsp;4.5&nbsp;1.5))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;1.0</tt>\n"
"</p><p>These examples demonstrate everything you need to use Scheme as a\n"
"four-function desk calculator.\n"
"While we will not discuss them in this chapter, Scheme supports\n"
"many other arithmetic procedures.\n"
"Now might be a good time to turn to Section&nbsp;<a href=\"objects."
"html#g110\">6.4</a> and experiment\n"
"with some of them."
msgstr ""
"(/&nbsp;(*&nbsp;6/7&nbsp;7/2)&nbsp;(-&nbsp;4.5&nbsp;1.5))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;1.0</tt>\n"
"</p><p>Эти примеры демонстрируют все, что вам нужно, чтобы использовать "
"Scheme как\n"
"четырех-функциональный настольный калькулятор.\n"
"Хотя мы не будем обсуждать их в этой главе, Scheme поддерживает многие\n"
"друге арифметические процедуры.\n"
"Теперь, возможно, подходящее время чтобы перейти к разделу &nbsp;<a href="
"\"objects.html#g110\">6.4</a> \n"
"и поэксперементировать с некоторыми из них."

#: start.html:332
msgid ""
"</p><p>\n"
"</p><p><a name=\"./start:s13\"></a>Simple numeric objects are sufficient for "
"many tasks, but\n"
"sometimes aggregate data structures containing two or more values\n"
"are needed.\n"
"In many languages, the basic aggregate data structure is the array.\n"
"In Scheme, it is the <i>list</i>.\n"
"Lists are written as sequences of objects surrounded by parentheses.\n"
"For instance, <tt>(1&nbsp;2&nbsp;3&nbsp;4&nbsp;5)</tt> is a list of numbers, "
"and\n"
"<tt>(\"this\"&nbsp;\"is\"&nbsp;\"a\"&nbsp;\"list\")</tt> is a list of "
"strings.\n"
"Lists need not contain only one type of object, so\n"
"<tt>(4.2&nbsp;\"hi\")</tt> is a valid list containing a number and a "
"string.\n"
"Lists may be nested (may contain other lists), so <tt>((1&nbsp;2)&nbsp;"
"(3&nbsp;4))</tt> is a\n"
"valid list with two\n"
"elements, each of which is a list of two elements."
msgstr ""
"</p><p>\n"
"</p><p><a name=\"./start:s13\"></a>Для многих задач достаточно простых "
"числовых объектов, но\n"
"иногда необходимы агрегированные структуры данных, содержащие два или более "
"значений.\n"
"На многих языках основной агрегированной структурой данных является массив.\n"
"В Scheme, это список(<i>list</i>).\n"
"Списки записываются как последовательности объектов, окруженные скобками.\n"
"Например, <tt>(1&nbsp;2&nbsp;3&nbsp;4&nbsp;5)</tt> представляет собой список "
"чисел, и\n"
"<tt>(\"this\"&nbsp;\"is\"&nbsp;\"a\"&nbsp;\"list\")</tt> представляет собой "
"список строк.\n"
"Списки не обязаны содержать только один тип объекта, поэтому\n"
"<tt>(4.2&nbsp;\"hi\")</tt> является допустимым списком, содержащим число и "
"строку.\n"
"Списки могут быть вложенными (могут содержать другие списки), поэтому "
"<tt>((1&nbsp;2)&nbsp;(3&nbsp;4))</tt>\n"
"является допустимым списком с двумя элементами, каждый из которых\n"
"представляет собой список из двух элементов."

#: start.html:340
msgid ""
"</p><p>\n"
"You might notice that lists look just like procedure applications\n"
"and wonder how Scheme tells them apart.\n"
"That is, how does Scheme distinguish between a list of objects,\n"
"<tt>(<i>obj<sub>1</sub></i>&nbsp;<i>obj<sub>2</sub></i>&nbsp;...)</tt>,\n"
"and a <a name=\"./start:s14\"></a>procedure application,\n"
"<tt>(<i>procedure</i>&nbsp;<i>arg</i>&nbsp;...)</tt>?"
msgstr ""
"</p><p>\n"
"Вы можете заметить что спики выглядят также как и применение процедур,\n"
"и задасться вопросом, как Scheme различает их.\n"
"Т.е как Scheme отличает список объектов,\n"
"<tt>(<i>obj<sub>1</sub></i>&nbsp;<i>obj<sub>2</sub></i>&nbsp;...)</tt>,\n"
"от  <a name=\"./start:s14\"></a>применения процедуры,\n"
"<tt>(<i>procedure</i>&nbsp;<i>arg</i>&nbsp;...)</tt>?"

#: start.html:353
msgid ""
"</p><p>\n"
"In some cases, the distinction might seem obvious.\n"
"The list of numbers <tt>(1&nbsp;2&nbsp;3&nbsp;4&nbsp;5)</tt> could hardly be "
"confused with a\n"
"procedure application, since 1 is a number, not a procedure.\n"
"So, the answer might be that Scheme looks at the first element of the\n"
"list or procedure application and makes its decision based on whether\n"
"that first element is a procedure or not.\n"
"This answer is not good enough, since we might even want to treat a valid\n"
"procedure application such as <tt>(+&nbsp;3&nbsp;4)</tt> as a list.\n"
"The answer is that we must tell Scheme explicitly to treat a list as\n"
"data rather than as a procedure application.\n"
"We do this with <a name=\"./start:s15\"></a><a name=\"./start:s16\"></"
"a><tt>quote</tt>."
msgstr ""
"</p><p>\n"
"В некоторых случаях различие может быть очевидным.\n"
"Список чисел <tt>(1&nbsp;2&nbsp;3&nbsp;4&nbsp;5)</tt> вряд ли можно спутать "
"с\n"
"применением процедуры, поскольку 1 это число, а не процедура.\n"
"Таким образом, ответ может заключаться в том, что Scheme смотрит на первых "
"элемент\n"
"списка или применения процедуры и  принимает решение на основании того, "
"является ли\n"
"этот первый элемент процедурой или нет.\n"
"Этот ответ недостаточно хорош, так как мы можем даже хотеть рассматривать "
"действительное\n"
"применение процедуры такое как <tt>(+&nbsp;3&nbsp;4)</tt> как список.\n"
"Ответ заключается в том, что мы явно должны сказать Scheme о том, чтобы "
"рассматривать\n"
"список как данные, а не как применение процедуры. Мы делае это с помощью\n"
"<a name=\"./start:s15\"></a><a name=\"./start:s16\"></a><tt>quote(кавычки/"
"выражения цитирования, являющегося синтаксической формой)</tt>."

#: start.html:355
msgctxt "start.html:355"
msgid "</p><p>"
msgstr ""

#: start.html:357
msgid ""
"</p><p><tt>(quote&nbsp;(1&nbsp;2&nbsp;3&nbsp;4&nbsp;5))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"(1&nbsp;2&nbsp;3&nbsp;4&nbsp;5)<br>"
msgstr ""

#: start.html:359
msgid ""
"(quote&nbsp;(\"this\"&nbsp;\"is\"&nbsp;\"a\"&nbsp;\"list\"))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(\"this\"&nbsp;\"is"
"\"&nbsp;\"a\"&nbsp;\"list\")<br>"
msgstr ""

#: start.html:365
msgid ""
"(quote&nbsp;(+&nbsp;3&nbsp;4))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(+&nbsp;3&nbsp;4)</tt>\n"
"</p><p>The <tt>quote</tt> forces the list to be treated as data.\n"
"Try entering the above expressions without the quote; you will likely\n"
"receive a message indicating that an exception has occurred for the first\n"
"two and an incorrect answer (<tt>7</tt>) for the third."
msgstr ""
"(quote&nbsp;(+&nbsp;3&nbsp;4))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(+&nbsp;3&nbsp;4)</tt>\n"
"</p><p><tt>quote</tt> заставляет обрабатывать список как данные.\n"
"Попробуйте ввести приведенные выше выражения без quote; скорее всего, вы "
"получите\n"
"сообщение  о том, что произошло исключение для первых двух и неверный ответ\n"
"(<tt>7</tt>) для третьего."

#: start.html:370
msgid ""
"</p><p>\n"
"Because <tt>quote</tt> is required fairly frequently in Scheme code, Scheme\n"
"recognizes a single quotation mark (&nbsp;<tt>'</tt>&nbsp;) preceding\n"
"an expression as an abbreviation for <tt>quote</tt>."
msgstr ""
"</p><p>\n"
"Поскольку<tt>quote</tt> требуется довольно часто в коде Scheme, Scheme\n"
"распознает знак кавычки (&nbsp;<tt>'</tt>&nbsp;) предшестующий выражению\n"
"как сокращение для выражения <tt>quote</tt>."

#: start.html:372
msgctxt "start.html:372"
msgid "</p><p>"
msgstr ""

#: start.html:374
msgid ""
"</p><p><tt>'(1&nbsp;2&nbsp;3&nbsp;4)&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;(1&nbsp;2&nbsp;3&nbsp;4)<br>"
msgstr ""

#: start.html:376
msgid ""
"'((1&nbsp;2)&nbsp;(3&nbsp;4))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;((1&nbsp;2)&nbsp;(3&nbsp;4))<br>"
msgstr ""

#: start.html:381
msgid ""
"'(/&nbsp;(*&nbsp;2&nbsp;-1)&nbsp;3)&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;(/&nbsp;(*&nbsp;2&nbsp;-1)&nbsp;3)</tt>\n"
"</p><p>Both forms are referred to as <tt>quote</tt> expressions.\n"
"We often say an object is <i>quoted</i> when it is enclosed in\n"
"a <tt>quote</tt> expression."
msgstr ""
"'(/&nbsp;(*&nbsp;2&nbsp;-1)&nbsp;3)&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;(/&nbsp;(*&nbsp;2&nbsp;-1)&nbsp;3)</tt>\n"
"</p><p>Обе формы называются выражениями <tt>quote(цитирования)</tt>.\n"
"Мы часто говорим, что объект <i>quoted</i> когда он заключен в \n"
"выражении <tt>quote</tt>."

#: start.html:391
msgid ""
"</p><p>\n"
"A <tt>quote</tt> expression is <i>not</i> a procedure application, since\n"
"it inhibits the evaluation of its subexpression.\n"
"It is an entirely different syntactic form.\n"
"Scheme supports several other <a name=\"./start:s17\"></a>syntactic forms in "
"addition to\n"
"procedure applications and <tt>quote</tt> expressions.\n"
"Each syntactic form is evaluated differently.\n"
"Fortunately, the number of different syntactic forms is small.\n"
"We will see more of them later in this chapter."
msgstr ""
"</p><p>\n"
"Выражение <tt>quote</tt> <i>не</i> является применением процедуры, "
"поскольку\n"
"оно препятствует оценке его подвыражений.\n"
"Это совершенно другая синтаксическая форма.\n"
"Scheme поддерживает несколько других <a name=\"./start:s17\"></"
"a>синтаксических форм\n"
"в дополнение к применению процедур и выражениям <tt>quote(цитирования)</"
"tt>.\n"
"Каждая синтаксическая форма вычисляется по разному. К счастью, количество\n"
"различных синтаксических форм невелико. Мы познакомимся с ними позже в этой "
"главе."

#: start.html:396
msgid ""
"</p><p>\n"
"Not all <tt>quote</tt> expressions involve lists.\n"
"Try the following expression with and without the <tt>quote</tt>\n"
"wrapper."
msgstr ""
"</p><p>\n"
"Не все выражения <tt>quote</tt> содержат списки.\n"
"Попробуйте следующие выражение с и без обертывания <tt>quote</tt>."

#: start.html:398
msgctxt "start.html:398"
msgid "</p><p>"
msgstr ""

#: start.html:418
msgid ""
"</p><p><tt>(quote&nbsp;hello)&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;hello</tt>\n"
"</p><p>The symbol <tt>hello</tt> must be quoted in order to prevent Scheme "
"from\n"
"treating <tt>hello</tt> as a <i>variable</i>.\n"
"Symbols and <a name=\"./start:s18\"></a>variables in Scheme are similar to "
"<a name=\"./start:s19\"></a>symbols and\n"
"variables in mathematical expressions and equations.\n"
"When we evaluate the mathematical expression 1 - <i>x</i> for some value of\n"
"<i>x</i>, we think of <i>x</i> as a variable.\n"
"On the other hand, when we consider the algebraic equation \n"
"<i>x</i><sup>2</sup> - 1 = (<i>x</i> - 1)(<i>x</i> + 1), we think of <i>x</"
"i> as a symbol (in fact, we\n"
"think of the whole equation symbolically).\n"
"Just as quoting a list tells Scheme to treat a parenthesized form as\n"
"a list rather than as a procedure application,\n"
"quoting an identifier tells Scheme to treat the identifier\n"
"as a symbol rather than as a variable.\n"
"While symbols are commonly used to represent variables in symbolic\n"
"representations of equations or programs,\n"
"symbols may\n"
"also be used, for example, as words in the representation of natural\n"
"language sentences."
msgstr ""
"</p><p><tt>(quote&nbsp;hello)&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;hello</tt>\n"
"</p><p>Символ <tt>hello</tt> должен быть квотирован, чтобы предотвратить "
"обращение Scheme к\n"
"<tt>hello</tt> как <i>переменной</i>.\n"
"Символы и <a name=\"./start:s18\"></a>переменные в Scheme аналогичны <a name="
"\"./start:s19\"></a>символам и\n"
"переменным в математических выражениях и уравнениях.\n"
"Когда мы вычисляем математическое выражение 1 - <i>x</i> для некотрого "
"значения\n"
"<i>x</i>, мы рассматриваем <i>x</i> как переменную.\n"
"С другой стороны, когда мы рассматриваем алгебраическое уравнение \n"
"<i>x</i><sup>2</sup> - 1 = (<i>x</i> - 1)(<i>x</i> + 1), мы считаем <i>x</i> "
"символом (на самом деле\n"
"мы рассматриваем все уравнение символически).\n"
"Так же как квотирование списка говорит Scheme рассматривать форму в скобках "
"как список,\n"
"а не как выполнение процедуры, квотирование идентификатора говорит Scheme "
"рассматривать\n"
"идентификатор как символ, а не как переменную.\n"
"Хотя символы обычно используются для представления переменных в "
"символических\n"
"представлениях уравнений или программ, символы могут также использоваться, "
"например\n"
"как слова в представлении предложений естественного языка."

#: start.html:430
msgid ""
"</p><p>\n"
"You might wonder why applications and variables share notations with\n"
"lists and symbols.\n"
"The shared notation allows Scheme programs to be represented as Scheme\n"
"data, simplifying the writing\n"
"of interpreters, compilers, editors, and other tools in Scheme.\n"
"This is demonstrated by the Scheme interpreter given in\n"
"Section&nbsp;<a href=\"examples.html#g187\">12.7</a>,\n"
"which is itself written in Scheme.\n"
"Many people believe this to be one of the most important features of\n"
"Scheme."
msgstr ""
"</p><p>\n"
"Вы можете удиваться, почему применение процедур и переменных имеют сходное "
"обозначение\n"
"вместе со списками и символами.\n"
"Сходное обозначение позволяет программам Scheme быть представленными в виде\n"
"данных Scheme, упрощая написание интерпретаторов, компиляторов, редакторов "
"и\n"
"других инструментов на Scheme.\n"
"Здесь демонстрируется интерпретатор Scheme приведенный в разделе\n"
"&nbsp;<a href=\"examples.html#g187\">12.7</a>,\n"
"который сам написан на Scheme.\n"
"Многие считают, что это одна из самых важных особенностей\n"
"Scheme."

#: start.html:433
msgid ""
"</p><p>\n"
"Numbers and strings may be quoted, too."
msgstr ""
"</p><p>\n"
"Числа и строки могут быть также цитированы."

#: start.html:435
msgctxt "start.html:435"
msgid "</p><p>"
msgstr ""

#: start.html:437
msgid ""
"</p><p><tt>'2&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;2<br>"
msgstr ""

#: start.html:439
msgid ""
"'2/3&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;2/3<br>"
msgstr ""

#: start.html:443
msgid ""
"(quote&nbsp;\"Hi&nbsp;Mom!\")&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;\"Hi&nbsp;Mom!\"</tt>\n"
"</p><p>Numbers and strings are treated as constants in any case, however,\n"
"so quoting them is unnecessary."
msgstr ""
"(quote&nbsp;\"Hi&nbsp;Mom!\")&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;\"Hi&nbsp;Mom!\"</tt>\n"
"</p><p>Однако числа и строки рассматриваются как константы в любом случае, "
"поэтому их\n"
"квотирование не является необходимым."

#: start.html:454
msgid ""
"</p><p>\n"
"</p><p>Now let's discuss some Scheme procedures for manipulating <a name=\"./"
"start:s20\"></a>lists.\n"
"There are two basic procedures for taking lists apart: <a name=\"./start:"
"s21\"></a><tt>car</tt> and\n"
"<a name=\"./start:s22\"></a><tt>cdr</tt> (pronounced <i>could-er</i>).\n"
"<tt>car</tt> returns the first element of a list, and <tt>cdr</tt> returns\n"
"the remainder of the list.\n"
"(The names \"car\" and \"cdr\" are derived from operations\n"
"supported by the first computer\n"
"on which a Lisp language was implemented, the IBM&nbsp;704.)\n"
"Each requires a nonempty list as its argument."
msgstr ""
"</p><p>\n"
"</p><p>Теперь давайте обсудим некоторые процедуры Scheme для "
"манипулирования \n"
"<a name=\"./start:s20\"></a>списками.\n"
"Существуют две основные процедуры для получения частей списков: <a name=\"./"
"start:s21\"></a><tt>car</tt> и\n"
"<a name=\"./start:s22\"></a><tt>cdr</tt> (произносится как <i>could-er</"
"i>).\n"
"<tt>car</tt> возвращает первый элемент списка, и <tt>cdr</tt> возвращает\n"
"оставшуюся часть списка.\n"
"(Имена \"car\" и \"cdr\" происходят из операций поддерживаемых первым\n"
"компьютером, на котором был реализован язык Lisp - IBM&nbsp;704.)\n"
"Каждый из них требует непустой список в качестве аргумента."

#: start.html:456
msgctxt "start.html:456"
msgid "</p><p>"
msgstr ""

#: start.html:458
msgctxt "start.html:458"
msgid ""
"</p><p><tt>(car&nbsp;'(a&nbsp;b&nbsp;c))&nbsp;<img src=\"./start_files/0.gif"
"\" alt=\"&lt;graphic&gt;\">&nbsp;a<br>"
msgstr ""

#: start.html:460
msgctxt "start.html:460"
msgid ""
"(cdr&nbsp;'(a&nbsp;b&nbsp;c))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(b&nbsp;c)<br>"
msgstr ""

#: start.html:465
msgid ""
"(cdr&nbsp;'(a))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;()\n"
"<br>\n"
"<br>\n"
"(car&nbsp;(cdr&nbsp;'(a&nbsp;b&nbsp;c)))&nbsp;<img src=\"./start_files/0.gif"
"\" alt=\"&lt;graphic&gt;\">&nbsp;b<br>"
msgstr ""

#: start.html:470
msgid ""
"(cdr&nbsp;(cdr&nbsp;'(a&nbsp;b&nbsp;c)))&nbsp;<img src=\"./start_files/0.gif"
"\" alt=\"&lt;graphic&gt;\">&nbsp;(c)\n"
"<br>\n"
"<br>\n"
"(car&nbsp;'((a&nbsp;b)&nbsp;(c&nbsp;d)))&nbsp;<img src=\"./start_files/0.gif"
"\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b)<br>"
msgstr ""

#: start.html:476
msgid ""
"(cdr&nbsp;'((a&nbsp;b)&nbsp;(c&nbsp;d)))&nbsp;<img src=\"./start_files/0.gif"
"\" alt=\"&lt;graphic&gt;\">&nbsp;((c&nbsp;d))</tt>\n"
"</p><p>The first element of a list is often called the \"car\" of the\n"
"list, and the rest of the list is often called the \"cdr\" of\n"
"the list.\n"
"The cdr of a list with one element is <a name=\"./start:s23\"></a><tt>()</"
"tt>, the <a name=\"./start:s24\"></a><i>empty list</i>."
msgstr ""
"(cdr&nbsp;'((a&nbsp;b)&nbsp;(c&nbsp;d)))&nbsp;<img src=\"./start_files/0.gif"
"\" alt=\"&lt;graphic&gt;\">&nbsp;((c&nbsp;d))</tt>\n"
"</p><p>Первый элемент списка часто называют \"car\" списка, а оставшуюся\n"
"часть списка называют \"cdr\" списка.\n"
"cdr списка с одним элементом это <a name=\"./start:s23\"></a><tt>()</tt>, <a "
"name=\"./start:s24\"></a><i>пустой список</i>."

#: start.html:482
msgid ""
"</p><p>\n"
"The procedure <a name=\"./start:s25\"></a><tt>cons</tt> constructs lists.\n"
"It takes two arguments.\n"
"The second argument is usually a list, and in that case <tt>cons</tt>\n"
"returns a list."
msgstr ""
"</p><p>\n"
"Процедура <a name=\"./start:s25\"></a><tt>cons</tt> строит списки.\n"
"Она принимает два аргумента. Второй аргумент обычно представляет собой "
"список,\n"
"и в этом случае <tt>cons</tt> возвращает список."

#: start.html:484
msgctxt "start.html:484"
msgid "</p><p>"
msgstr ""

#: start.html:486
msgid ""
"</p><p><tt>(cons&nbsp;'a&nbsp;'())&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(a)<br>"
msgstr ""

#: start.html:488
msgctxt "start.html:488"
msgid ""
"(cons&nbsp;'a&nbsp;'(b&nbsp;c))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;c)<br>"
msgstr ""

#: start.html:490
msgid ""
"(cons&nbsp;'a&nbsp;(cons&nbsp;'b&nbsp;(cons&nbsp;'c&nbsp;'())))&nbsp;<img "
"src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;"
"c)<br>"
msgstr ""

#: start.html:495
msgid ""
"(cons&nbsp;'(a&nbsp;b)&nbsp;'(c&nbsp;d))&nbsp;<img src=\"./start_files/0.gif"
"\" alt=\"&lt;graphic&gt;\">&nbsp;((a&nbsp;b)&nbsp;c&nbsp;d)\n"
"<br>\n"
"<br>\n"
"(car&nbsp;(cons&nbsp;'a&nbsp;'(b&nbsp;c)))&nbsp;<img src=\"./start_files/0."
"gif\" alt=\"&lt;graphic&gt;\">&nbsp;a<br>"
msgstr ""

#: start.html:497
msgid ""
"(cdr&nbsp;(cons&nbsp;'a&nbsp;'(b&nbsp;c)))&nbsp;<img src=\"./start_files/0."
"gif\" alt=\"&lt;graphic&gt;\">&nbsp;(b&nbsp;c)<br>"
msgstr ""

#: start.html:499
msgctxt "start.html:499"
msgid "(cons&nbsp;(car&nbsp;'(a&nbsp;b&nbsp;c))<br>"
msgstr ""

#: start.html:501
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cdr&nbsp;'(d&nbsp;e&nbsp;f)))&nbsp;<img "
"src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;e&nbsp;"
"f)<br>"
msgstr ""

#: start.html:503
msgctxt "start.html:503"
msgid "(cons&nbsp;(car&nbsp;'(a&nbsp;b&nbsp;c))<br>"
msgstr ""

#: start.html:509
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cdr&nbsp;'(a&nbsp;b&nbsp;c)))&nbsp;<img "
"src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;c)</"
"tt>\n"
"</p><p>Just as \"car\" and \"cdr\" are often used as nouns, \"cons\" is\n"
"often used as a verb.\n"
"Creating a new list by adding an element to the beginning of a list\n"
"is referred to as <a name=\"./start:s26\"></a><i>consing</i> the element "
"onto the list."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cdr&nbsp;'(a&nbsp;b&nbsp;c)))&nbsp;<img "
"src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;c)</"
"tt>\n"
"</p><p>Так же как \"car\" и \"cdr\" часто используются в качестве "
"существительных, \"cons\" \n"
"часто используется в качестве глагола.\n"
"Создание нового списка путем добавления элемента в начало списка "
"называется \n"
"<a name=\"./start:s26\"></a><i>consing</i> элемента в список."

#: start.html:519
msgid ""
"</p><p>\n"
"Notice the word \"usually\" in the description of <tt>cons</tt>'s second\n"
"argument.\n"
"The procedure <tt>cons</tt> actually builds <a name=\"./start:s27\"></"
"a><i>pairs</i>, and there is no\n"
"reason that the cdr of a pair must be a list.\n"
"A list is a sequence of pairs; each pair's cdr is the next pair in\n"
"the sequence.\n"
"</p><p>\n"
"<img src=\"./start_files/1.gif\" alt=\"&lt;graphic&gt;\"></p><p>"
msgstr ""
"</p><p>\n"
"Обратите внимание на слово \"обычно\" в описании второго аргумента  "
"<tt>cons</tt>.\n"
"Процедура <tt>cons</tt> фактически создает <a name=\"./start:s27\"></"
"a><i>пары</i>, и нет никакой\n"
"причины чтобы cdr в паре был списком.\n"
"Список это последовательность пар; в каждаой паре cdr это следующая пара в "
"последовательности.\n"
"</p><p>\n"
"<img src=\"./start_files/1.gif\" alt=\"&lt;graphic&gt;\"></p><p>"

#: start.html:524
msgid ""
"The cdr of the last pair in a <a name=\"./start:s28\"></a><i>proper list</i> "
"is the empty list.\n"
"Otherwise, the sequence of pairs forms an <a name=\"./start:s29\"></"
"a><i>improper list</i>.\n"
"More formally, the empty list is a proper list, and any pair whose cdr\n"
"is a proper list is a proper list."
msgstr ""
"cdr последней пары в <a name=\"./start:s28\"></a><i>правильном списке</i> "
"это пустой список.\n"
"Иначе, последовательность пар образует <a name=\"./start:s29\"></"
"a><i>неправильные список</i>.\n"
"Более формально: пустой список в правильном списке, и любая пара, чей cdr\n"
"является правильным списком, является правильным списком."

#: start.html:529
msgid ""
"</p><p>\n"
"An improper list is printed in <i>dotted-pair notation</i>, with a\n"
"period, or <a name=\"./start:s30\"></a><a name=\"./start:s31\"></a><i>dot</"
"i>,\n"
"preceding the final element of the list."
msgstr ""
"</p><p>\n"
"Неправильный список печатается в виде <i>пары с точкой</i>, с периодом, или\n"
" <a name=\"./start:s30\"></a><a name=\"./start:s31\"></a><i>точкой</i>,\n"
"предшествующей последнему элементу списка."

#: start.html:531
msgctxt "start.html:531"
msgid "</p><p>"
msgstr ""

#: start.html:533
msgid ""
"</p><p><tt>(cons&nbsp;'a&nbsp;'b)&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(a&nbsp;.&nbsp;b)<br>"
msgstr ""

#: start.html:535
msgid ""
"(cdr&nbsp;'(a&nbsp;.&nbsp;b))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;b<br>"
msgstr ""

#: start.html:542
msgid ""
"(cons&nbsp;'a&nbsp;'(b&nbsp;.&nbsp;c))&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;.&nbsp;c)</tt>\n"
"</p><p>Because of its printed notation, a pair whose cdr is not a list is\n"
"often called a <a name=\"./start:s32\"></a><i>dotted pair</i>.\n"
"Even pairs whose cdrs are lists can be written in dotted-pair\n"
"notation, however, although the printer always chooses to write\n"
"proper lists without dots."
msgstr ""
"(cons&nbsp;'a&nbsp;'(b&nbsp;.&nbsp;c))&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;.&nbsp;c)</tt>\n"
"</p><p>Из за своей печатной нотации, пару чей cdr не является списком часто\n"
"называю <a name=\"./start:s32\"></a><i>парой с точкой</i>.\n"
"Даже пары, чьи списки правильные могут быть записаны в виде пары с точкой, "
"однако,\n"
"процедура вывода всегда предпочитает писать правильные списки без точек."

#: start.html:544
msgctxt "start.html:544"
msgid "</p><p>"
msgstr ""

#: start.html:548
msgid ""
"</p><p><tt>'(a&nbsp;.&nbsp;(b&nbsp;.&nbsp;(c&nbsp;.&nbsp;())))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;c)</"
"tt>\n"
"</p><p>The procedure <a name=\"./start:s33\"></a><tt>list</tt> is similar to "
"<tt>cons</tt>, except that it takes\n"
"an arbitrary number of arguments and always builds a proper list."
msgstr ""
"</p><p><tt>'(a&nbsp;.&nbsp;(b&nbsp;.&nbsp;(c&nbsp;.&nbsp;())))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;c)</"
"tt>\n"
"</p><p>Процедура <a name=\"./start:s33\"></a><tt>list</tt> похожа на "
"<tt>cons</tt>, за исключением того,\n"
"что она принимает произвольное количество аргументов и всегда строит "
"правильный список."

#: start.html:550
msgctxt "start.html:550"
msgid "</p><p>"
msgstr ""

#: start.html:552
msgid ""
"</p><p><tt>(list&nbsp;'a&nbsp;'b&nbsp;'c)&nbsp;<img src=\"./start_files/0.gif"
"\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;c)<br>"
msgstr ""

#: start.html:554
msgid ""
"(list&nbsp;'a)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;(a)<br>"
msgstr ""

#: start.html:560
msgid ""
"(list)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"()</tt>\n"
"</p><p>Section&nbsp;<a href=\"objects.html#g109\">6.3</a> provides more "
"information on lists and the Scheme\n"
"procedures for manipulating them.\n"
"This might be a good time to turn to that section and familiarize\n"
"yourself with the other procedures given there."
msgstr ""
"(list)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"()</tt>\n"
"</p><p>Раздел&nbsp;<a href=\"objects.html#g109\">6.3</a> содержит "
"дополнительную информацию о списках\n"
"и процедурах Scheme для манипуляции ими. \n"
"Это может быть подходящее время, чтобы обратиться к этому разделу и "
"ознакомиться с\n"
"другими процедурами."

#: start.html:562
msgctxt "start.html:562"
msgid "</p><p>"
msgstr ""

#: start.html:566
msgid ""
"</p><h4>Exercise <a name=\"g7\"></a>2.2.1</h4>\n"
"<a name=\"./start:s34\"></a>Convert the following arithmetic expressions "
"into Scheme expressions\n"
"and evaluate them."
msgstr ""
"</p><h4>Упражнение <a name=\"g7\"></a>2.2.1</h4>\n"
"<a name=\"./start:s34\"></a>Преобразуйте последующие арифметические "
"выражения в выражения Scheme и\n"
"вычислите их."

#: start.html:568
msgctxt "start.html:568"
msgid "<p>"
msgstr ""

#: start.html:576
msgid ""
" </p><table>\n"
"<tbody><tr valign=\"top\"><td><i>&nbsp;&nbsp;a</i>.</td><td>1.2 × (2 - 1/3) "
"+ -8.7\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;b</i>.</td><td>(2/3 + 4/9) ÷ "
"(5/11 - 4/3)\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;c</i>.</td><td>1 + 1 ÷ (2 + "
"1 ÷ (1 + 1/2))\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;d</i>.</td><td>1 × -2 × 3 × "
"-4 × 5 × -6 × 7\n"
"</td></tr></tbody></table>"
msgstr ""

#: start.html:578
msgctxt "start.html:578"
msgid "<p>"
msgstr ""

#: start.html:581
msgctxt "start.html:581"
msgid "</p><p>"
msgstr ""

#: start.html:586
msgid ""
"</p><h4>Exercise <a name=\"g8\"></a>2.2.2</h4>\n"
"<a name=\"./start:s35\"></a>Experiment with the procedures <tt>+</tt>, <tt>-"
"</tt>, <tt>*</tt>, and <tt>/</tt>\n"
"to determine Scheme's rules for the type of value returned by\n"
"each when given different types of numeric arguments."
msgstr ""
"</p><h4>Упражнение <a name=\"g8\"></a>2.2.2</h4>\n"
"<a name=\"./start:s35\"></a>Поэксперементируйте с процедурами <tt>+</tt>, "
"<tt>-</tt>, <tt>*</tt>, и <tt>/</tt>\n"
"чтобы определить правила Scheme для типа значения, возвращаемого каждым при "
"задании разных типов числовых\n"
"аргументов."

#: start.html:588
msgctxt "start.html:588"
msgid "<p>"
msgstr ""

#: start.html:591
msgctxt "start.html:591"
msgid "</p><p>"
msgstr ""

#: start.html:595
msgid ""
"</p><h4>Exercise <a name=\"g9\"></a>2.2.3</h4>\n"
"<a name=\"./start:s36\"></a><a name=\"EXEXPRVALUE\"></a>Determine the values "
"of the following expressions.\n"
"Use your Scheme system to verify your answers."
msgstr ""
"</p><h4>Упражнение <a name=\"g9\"></a>2.2.3</h4>\n"
"<a name=\"./start:s36\"></a><a name=\"EXEXPRVALUE\"></a>Определите значения "
"следующих выражений.\n"
"Используйте вашу систему Scheme для проверки своих ответов."

#: start.html:597
msgctxt "start.html:597"
msgid "<p>"
msgstr ""

#: start.html:616
msgid ""
" </p><table>\n"
"<tbody><tr valign=\"top\"><td><i>&nbsp;&nbsp;a</i>.</"
"td><td><tt>(cons&nbsp;'car&nbsp;'cdr)</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;b</i>.</"
"td><td><tt>(list&nbsp;'this&nbsp;'(is&nbsp;silly))</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;c</i>.</"
"td><td><tt>(cons&nbsp;'is&nbsp;'(this&nbsp;silly?))</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;d</i>.</"
"td><td><tt>(quote&nbsp;(+&nbsp;2&nbsp;3))</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;e</i>.</"
"td><td><tt>(cons&nbsp;'+&nbsp;'(2&nbsp;3))</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;f</i>.</"
"td><td><tt>(car&nbsp;'(+&nbsp;2&nbsp;3))</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;g</i>.</"
"td><td><tt>(cdr&nbsp;'(+&nbsp;2&nbsp;3))</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;h</i>.</td><td><tt>cons</"
"tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;i</i>.</"
"td><td><tt>(quote&nbsp;cons)</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;j</i>.</"
"td><td><tt>(quote&nbsp;(quote&nbsp;cons))</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;k</i>.</td><td><tt>(car&nbsp;"
"(quote&nbsp;(quote&nbsp;cons)))</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;l</i>.</"
"td><td><tt>(+&nbsp;2&nbsp;3)</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;m</i>.</"
"td><td><tt>(+&nbsp;'2&nbsp;'3)</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;n</i>.</td><td><tt>(+&nbsp;"
"(car&nbsp;'(2&nbsp;3))&nbsp;(car&nbsp;(cdr&nbsp;'(2&nbsp;3))))</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;o</i>.</"
"td><td><tt>((car&nbsp;(list&nbsp;+&nbsp;-&nbsp;*&nbsp;/))&nbsp;2&nbsp;3)</"
"tt>\n"
"</td></tr></tbody></table>"
msgstr ""

#: start.html:618
msgctxt "start.html:618"
msgid "<p>"
msgstr ""

#: start.html:621
msgctxt "start.html:621"
msgid "</p><p>"
msgstr ""

#: start.html:627
msgid ""
"</p><h4>Exercise <a name=\"g10\"></a>2.2.4</h4>\n"
"<a name=\"./start:s37\"></a><tt>(car&nbsp;(car&nbsp;'((a&nbsp;b)&nbsp;"
"(c&nbsp;d))))</tt> yields <tt>a</tt>.\n"
"Determine which compositions of <tt>car</tt> and <tt>cdr</tt> applied\n"
"to <tt>((a&nbsp;b)&nbsp;(c&nbsp;d))</tt> yield <tt>b</tt>, <tt>c</tt>, and\n"
"<tt>d</tt>."
msgstr ""
"</p><h4>Упражнение <a name=\"g10\"></a>2.2.4</h4>\n"
"<a name=\"./start:s37\"></a><tt>(car&nbsp;(car&nbsp;'((a&nbsp;b)&nbsp;"
"(c&nbsp;d))))</tt> дает <tt>a</tt>.\n"
"Определите какие комбинации <tt>car</tt> и <tt>cdr</tt> примененные к\n"
"<tt>((a&nbsp;b)&nbsp;(c&nbsp;d))</tt> дадут <tt>b</tt>, <tt>c</tt>, и\n"
"<tt>d</tt>."

#: start.html:629
msgctxt "start.html:629"
msgid "<p>"
msgstr ""

#: start.html:632
msgctxt "start.html:632"
msgid "</p><p>"
msgstr ""

#: start.html:636
msgid ""
"</p><h4>Exercise <a name=\"g11\"></a>2.2.5</h4>\n"
"<a name=\"./start:s38\"></a>Write a Scheme expression that evaluates to the "
"following internal\n"
"list structure."
msgstr ""
"</p><h4>Упражнение <a name=\"g11\"></a>2.2.5</h4>\n"
"<a name=\"./start:s38\"></a>Напишите на Scheme выражение которое вычисляет "
"следующую внутреннюю\n"
"структуру списка."

#: start.html:640
msgid ""
"<p>\n"
"</p><p>\n"
"<img src=\"./start_files/2.gif\" alt=\"&lt;graphic&gt;\"></p><p>"
msgstr ""

#: start.html:643
msgctxt "start.html:643"
msgid "</p><p>"
msgstr ""

#: start.html:646
msgctxt "start.html:646"
msgid "</p><p>"
msgstr ""

#: start.html:649
msgid ""
"</p><h4>Exercise <a name=\"g12\"></a>2.2.6</h4>\n"
"<a name=\"./start:s39\"></a>Draw the internal list structure produced by the "
"expression below."
msgstr ""
"</p><h4>Exercise <a name=\"g12\"></a>2.2.6</h4>\n"
"<a name=\"./start:s39\"></a>Нарисуйте внутренню структуру списка получаемого "
"выражением ниже."

#: start.html:651
msgctxt "start.html:651"
msgid "<p>"
msgstr ""

#: start.html:654
msgid ""
"</p><p><tt>(cons&nbsp;1&nbsp;(cons&nbsp;'(2&nbsp;.&nbsp;((3)&nbsp;.&nbsp;"
"()))&nbsp;(cons&nbsp;'(())&nbsp;(cons&nbsp;4&nbsp;5))))</tt>\n"
"</p><p>"
msgstr ""

#: start.html:657
msgctxt "start.html:657"
msgid "</p><p>"
msgstr ""

#: start.html:666
msgid ""
"</p><h4>Exercise <a name=\"g13\"></a>2.2.7</h4>\n"
"<a name=\"./start:s40\"></a>The behavior of\n"
"<tt>(car&nbsp;(car&nbsp;(car&nbsp;'((a&nbsp;b)&nbsp;(c&nbsp;d)))))</tt> is "
"undefined because\n"
"<tt>(car&nbsp;'((a&nbsp;b)&nbsp;(c&nbsp;d)))</tt> is <tt>(a&nbsp;b)</tt>,\n"
"<tt>(car&nbsp;'(a&nbsp;b))</tt> is <tt>a</tt>,\n"
"and <tt>(car&nbsp;'a)</tt> is undefined.\n"
"Determine all legal compositions of <tt>car</tt> and <tt>cdr</tt> applied\n"
"to <tt>((a&nbsp;b)&nbsp;(c&nbsp;d))</tt>."
msgstr ""
"</p><h4>Упражнение <a name=\"g13\"></a>2.2.7</h4>\n"
"<a name=\"./start:s40\"></a>Поведение\n"
"<tt>(car&nbsp;(car&nbsp;(car&nbsp;'((a&nbsp;b)&nbsp;(c&nbsp;d)))))</tt> не "
"определено, поскольку\n"
"<tt>(car&nbsp;'((a&nbsp;b)&nbsp;(c&nbsp;d)))</tt> это <tt>(a&nbsp;b)</tt>,\n"
"<tt>(car&nbsp;'(a&nbsp;b))</tt> это <tt>a</tt>,\n"
"и <tt>(car&nbsp;'a)</tt> не определено.\n"
"Определите все правильные сочетания <tt>car</tt> и <tt>cdr</tt> применяемые "
"к\n"
"<tt>((a&nbsp;b)&nbsp;(c&nbsp;d))</tt>."

#: start.html:669
msgctxt "start.html:669"
msgid "<p>"
msgstr ""

#: start.html:672
msgctxt "start.html:672"
msgid "</p><p>"
msgstr ""

#: start.html:676
msgid ""
"</p><h4>Exercise <a name=\"g14\"></a>2.2.8</h4>\n"
"<a name=\"./start:s41\"></a>Try to explain how Scheme expressions are "
"evaluated.\n"
"Does your explanation cover the last example in Exercise&nbsp;<a href="
"\"start.html#g9\">2.2.3</a>?"
msgstr ""
"</p><h4> Упражнение <a name=\"g14\"></a>2.2.8</h4>\n"
"<a name=\"./start:s41\"></a>Попробуйте объяснить, как вычисляются выражения "
"Scheme.\n"
"Обобщает ли ваше объяснение последний пример упражнения&nbsp;<a href=\"start."
"html#g9\">2.2.3</a>?"

#: start.html:678
msgctxt "start.html:678"
msgid "<p>"
msgstr ""

#: start.html:681
msgctxt "start.html:681"
msgid "</p><p>"
msgstr ""

#: start.html:683
msgid ""
"</p><h3><a name=\"g15\"></a><a name=\"./start:h3\"></a>Section 2.3. "
"Evaluating Scheme Expressions<a name=\"SECTGSEVALUATING\"></a></h3>"
msgstr ""
"</p><h3><a name=\"g15\"></a><a name=\"./start:h3\"></a>Section 2.3. "
"Вычисление выражений Scheme<a name=\"SECTGSEVALUATING\"></a></h3>"

#: start.html:698
msgid ""
"<p>\n"
"Let's turn to a discussion of how Scheme evaluates the expressions\n"
"you type.\n"
"We have already established the rules for <a name=\"./start:s42\"></"
"a>constant objects\n"
"such as strings and numbers: the object itself is the value.\n"
"You have probably also worked out in your mind a rule for evaluating\n"
"<a name=\"./start:s43\"></a>procedure applications of the form\n"
"<tt>(<i>procedure</i>&nbsp;<i>arg<sub>1</sub></i>&nbsp;...&nbsp;"
"<i>arg<sub>n</sub></i>)</tt>.\n"
"Here, <tt><i>procedure</i></tt> is an expression representing a Scheme "
"procedure,\n"
"and <tt><i>arg<sub>1</sub></i>&nbsp;...&nbsp;<i>arg<sub>n</sub></i></tt> are "
"expressions representing its\n"
"arguments.\n"
"One possibility is the following."
msgstr ""
"<p>\n"
"Перейдем к обсуждению того как  Scheme вычисляет введенные выражения.\n"
"Мы уже установили правила для <a name=\"./start:s42\"></a>константных "
"объектов,\n"
"таких как строки и числа: объект сам является значением.\n"
"Вероятно, вы также разработали в своем уме правило для вычисления \n"
"<a name=\"./start:s43\"></a>применения процедуры procedure формы\n"
"<tt>(<i>procedure</i>&nbsp;<i>arg<sub>1</sub></i>&nbsp;...&nbsp;"
"<i>arg<sub>n</sub></i>)</tt>.\n"
"Здесь, <tt><i>procedure</i></tt> это выражение представляющее процедуру "
"Scheme,\n"
"и <tt><i>arg<sub>1</sub></i>&nbsp;...&nbsp;<i>arg<sub>n</sub></i></tt> "
"выражения, представляющие\n"
"ее аргументы.\n"
"Одна из возможностей заключается в следующем."

#: start.html:702
msgid ""
"</p><p>\n"
"</p><ul>\n"
"<li>Find the value of <tt><i>procedure</i></tt>."
msgstr ""
"</p><p>\n"
"</p><ul>\n"
"<li>Найти значение <tt><i>procedure</i></tt>."

#: start.html:705
msgid ""
"<p>\n"
"</p></li><li>Find the value of <tt><i>arg<sub>1</sub></i></tt>."
msgstr ""
"<p>\n"
"</p></li><li>Найти значение <tt><i>arg<sub>1</sub></i></tt>."

#: start.html:708
msgid ""
"<p>\n"
"<img src=\"./start_files/3.gif\" alt=\"&lt;graphic&gt;\">"
msgstr ""

#: start.html:711
msgid ""
"</p><p>\n"
"</p></li><li>Find the value of <tt><i>arg<sub>n</sub></i></tt>."
msgstr ""
"</p><p>\n"
"</p></li><li>Найти значение <tt><i>arg<sub>n</sub></i></tt>."

#: start.html:717
msgid ""
"<p>\n"
"</p></li><li>Apply the value of <tt><i>procedure</i></tt> to the values\n"
"of <tt><i>arg<sub>1</sub></i>&nbsp;...&nbsp;<i>arg<sub>n</sub></i></tt>.\n"
"</li></ul>\n"
"<p>"
msgstr ""
"<p>\n"
"</p></li><li>Применить значение <tt><i>procedure</i></tt> к значениями\n"
"<tt><i>arg<sub>1</sub></i>&nbsp;...&nbsp;<i>arg<sub>n</sub></i></tt>.\n"
"</li></ul>\n"
"<p>"

#: start.html:724
msgid ""
"</p><p>\n"
"For example, consider the simple procedure application "
"<tt>(+&nbsp;3&nbsp;4)</tt>.\n"
"The value of <tt>+</tt> is the addition procedure, the value of 3\n"
"is the number 3, and the value of 4 is the number 4.\n"
"Applying the addition procedure to 3 and 4 yields 7, so our value\n"
"is the object 7."
msgstr ""
"</p><p>\n"
"Например, рассмотрите применение процедуры <tt>(+&nbsp;3&nbsp;4)</tt>.\n"
"Значением <tt>+</tt> является процедура сложения, значение 3\n"
"это число 3, и значение 4 это число 4.\n"
"Применение процедуры сложения 3 и 4 дает 7, поэтому наше значение\n"
"является объектом 7."

#: start.html:732
msgid ""
"</p><p>\n"
"By applying this process at each level, we can find the value of the\n"
"nested expression <tt>(*&nbsp;(+&nbsp;3&nbsp;4)&nbsp;2)</tt>.\n"
"The value of <tt>*</tt> is the multiplication procedure, the value of\n"
"<tt>(+&nbsp;3&nbsp;4)</tt> we can determine to be the number 7, and the\n"
"value of 2 is the number 2.\n"
"Multiplying 7 by 2 we get 14, so our answer is 14."
msgstr ""
"</p><p>\n"
"Применяя это процесс на каждом уровне, мы можем найти значение вложенного\n"
"выражения <tt>(*&nbsp;(+&nbsp;3&nbsp;4)&nbsp;2)</tt>.\n"
"Значение <tt>*</tt> это процедура умножения, значение\n"
"<tt>(+&nbsp;3&nbsp;4)</tt> мы можем определить как число 7, и\n"
"значение 2 это число 2.\n"
"Умножение 7 на 2 дает нам 14, поэтому наш ответ 14."

#: start.html:745
msgid ""
"</p><p>\n"
"This rule works for procedure applications but not\n"
"for\n"
"<a name=\"./start:s44\"></a><a name=\"./start:s45\"></a><tt>quote</tt> "
"expressions\n"
"because the subexpressions of a procedure application are\n"
"evaluated, whereas the subexpression of a <tt>quote</tt> expression is\n"
"not.\n"
"The evaluation of a <tt>quote</tt> expression is more similar to the\n"
"evaluation of constant objects.\n"
"The value of a <tt>quote</tt> expression of the form\n"
"<tt>(quote&nbsp;<i>object</i>)</tt>\n"
"is simply <tt><i>object</i></tt>."
msgstr ""
"</p><p>\n"
"Это правило работает для применения процедур, но не для выражений\n"
"<a name=\"./start:s44\"></a><a name=\"./start:s45\"></a><tt>quote</tt> \n"
"потому что подвыражения при применении процедуры вычисляются,\n"
"тогда как подвыражения выражения <tt>quote</tt> нет.\n"
"Вычисление выражения <tt>quote</tt> похоже на вычисление константных\n"
"объектов.\n"
"Значением выражения <tt>quote</tt> формы\n"
"<tt>(quote&nbsp;<i>object</i>)</tt>\n"
"будет просто <tt><i>object</i></tt>."

#: start.html:758
msgid ""
"</p><p>\n"
"Constant objects, procedure applications, and <tt>quote</tt> expressions\n"
"are only three of the many syntactic forms provided by Scheme.\n"
"Fortunately, only a few of the other syntactic forms need to be\n"
"understood directly by a Scheme programmer; these are referred to as\n"
"<i>core</i> syntactic forms.\n"
"The remaining syntactic forms are <a name=\"./start:s46\"></a><i>syntactic "
"extensions</i>\n"
"defined, ultimately, in terms of the <a name=\"./start:s47\"></a>core "
"syntactic forms.\n"
"We will discuss the remaining core syntactic forms and a few\n"
"syntactic extensions in the remaining sections of this chapter.\n"
"Section&nbsp;<a href=\"further.html#g50\">3.1</a> summarizes the core "
"syntactic forms and introduces\n"
"the syntactic extension mechanism."
msgstr ""
"</p><p>\n"
"Константные объекты, применение процедур, и выражения <tt>quote</tt>\n"
"являются только тремя из множества синтаксических форм, предоставляемых\n"
"Scheme.\n"
"К счастью, только некоторые из других синтаксических форм должны быть\n"
"поняты непосредственно программистом Scheme; они называются\n"
"<i>основные</i> синтаксические формы.\n"
"Остальные  синтаксические формы являются <a name=\"./start:s46\"></"
"a><i>синтаксическими расширениями</i>\n"
"определяемыми, в конечном счете, в терминах <a name=\"./start:s47\"></"
"a>основных синтаксических форм.\n"
"Мы обсудим оставшиеся основные синтаксические формы и несколько "
"синтаксических расширений в остальных\n"
"разделах этой главы.\n"
"Раздел&nbsp;<a href=\"further.html#g50\">3.1</a> обобщает основные "
"синтаксические формы и вводит механизм\n"
"синтаксического расширения."

#: start.html:774
msgid ""
"</p><p>\n"
"</p><p>Before we go on to more syntactic forms and procedures,\n"
"two points related to the evaluation of procedure applications\n"
"are worthy of note.\n"
"<a name=\"./start:s48\"></a>First, the process given above is\n"
"overspecified, in that it requires the subexpressions to be evaluated\n"
"from left to right.\n"
"That is, <tt><i>procedure</i></tt> is evaluated before <tt><i>arg<sub>1</"
"sub></i></tt>,\n"
"<tt><i>arg<sub>1</sub></i></tt> is evaluated before <tt><i>arg<sub>2</sub></"
"i></tt>, and so on.\n"
"This need not be the case.\n"
"A Scheme evaluator is free to evaluate the expressions in\n"
"any order---left to right, right to left, or any other sequential\n"
"order.\n"
"In fact, the subexpressions may be evaluated in different orders\n"
"for different applications, even in the same implementation."
msgstr ""
"</p><p>\n"
"</p><p>До того как мы перейдем к другим синтаксическим формам и процедурам,\n"
"обратим внимание на два момента, связанных с вычислением применения "
"процедур.\n"
"<a name=\"./start:s48\"></a>Первое, описанный выше процесс слишком "
"заспецифирован,\n"
"поскольку он требует вычисления слева на право.\n"
"То есть, <tt><i>procedure</i></tt> вычисляется перед <tt><i>arg<sub>1</sub></"
"i></tt>,\n"
"<tt><i>arg<sub>1</sub></i></tt> вычисляется перед <tt><i>arg<sub>2</sub></"
"i></tt>, и т.д.\n"
"Этого не должно быть.\n"
"Вычислитель Scheme может свободно вычислять выражения в любом порядке; слева "
"на право, \n"
"справа на лево или в любой другой последовательности.\n"
"Фактически, подвыражения могут вычислятся в различных порядках для разных\n"
"приложений, даже в одной и той же реализации."

#: start.html:786
msgid ""
"</p><p>\n"
"The second point is that <tt><i>procedure</i></tt> is evaluated in the\n"
"same way as <tt><i>arg<sub>1</sub></i>&nbsp;...&nbsp;<i>arg<sub>n</sub></i></"
"tt>.\n"
"While <tt><i>procedure</i></tt> is often a variable\n"
"that names a particular procedure, this need not be the case.\n"
"Exercise&nbsp;<a href=\"start.html#g9\">2.2.3</a> had you determine\n"
"the value of the expression <tt>((car&nbsp;(list&nbsp;+&nbsp;-&nbsp;"
"*&nbsp;/))&nbsp;2&nbsp;3)</tt>.\n"
"Here, <tt><i>procedure</i></tt> is <tt>(car&nbsp;(list&nbsp;+&nbsp;-&nbsp;"
"*&nbsp;/))</tt>.\n"
"The value of <tt>(car&nbsp;(list&nbsp;+&nbsp;-&nbsp;*&nbsp;/))</tt> is the "
"addition procedure,\n"
"just as if <tt><i>procedure</i></tt> were simply the variable\n"
"<tt>+</tt>."
msgstr ""
"</p><p>\n"
"Второй момент заключается в том, что <tt><i>procedure</i></tt> вычисляется "
"так же, как\n"
"<tt><i>arg<sub>1</sub></i>&nbsp;...&nbsp;<i>arg<sub>n</sub></i></tt>.\n"
"Хотя <tt><i>procedure</i></tt> часто является переменной, которая именует\n"
"конкретную процедуру, это не обязательно.\n"
"Упражнение&nbsp;<a href=\"start.html#g9\">2.2.3</a> вы определяли значение "
"выражения\n"
" <tt>((car&nbsp;(list&nbsp;+&nbsp;-&nbsp;*&nbsp;/))&nbsp;2&nbsp;3)</tt>.\n"
"Здесь, <tt><i>procedure</i></tt> это <tt>(car&nbsp;(list&nbsp;+&nbsp;-&nbsp;"
"*&nbsp;/))</tt>.\n"
"Значение <tt>(car&nbsp;(list&nbsp;+&nbsp;-&nbsp;*&nbsp;/))</tt> это "
"процедура сложения,\n"
"как если бы <tt><i>procedure</i></tt> была бы просто переменной\n"
"<tt>+</tt>."

#: start.html:788
msgctxt "start.html:788"
msgid "</p><p>"
msgstr ""

#: start.html:791
msgid ""
"</p><h4>Exercise <a name=\"g16\"></a>2.3.1</h4>\n"
"<a name=\"./start:s49\"></a>Write down the steps necessary to evaluate the "
"expression below."
msgstr ""
"</p><h4>Упражнение <a name=\"g16\"></a>2.3.1</h4>\n"
"<a name=\"./start:s49\"></a>Запишите шаги, необходимые для вычисления "
"выражения ниже."

#: start.html:793
msgctxt "start.html:793"
msgid "<p>"
msgstr ""

#: start.html:796
msgid ""
"</p><p><tt>((car&nbsp;(cdr&nbsp;(list&nbsp;+&nbsp;-&nbsp;"
"*&nbsp;/)))&nbsp;17&nbsp;5)</tt>\n"
"</p><p>"
msgstr ""

#: start.html:798
msgctxt "start.html:798"
msgid "</p><p>"
msgstr ""

#: start.html:800
msgid ""
"</p><h3><a name=\"g17\"></a><a name=\"./start:h4\"></a>Section 2.4. "
"Variables and Let Expressions<a name=\"SECTGSIDENTIFIERS\"></a></h3>"
msgstr ""
"</p><h3><a name=\"g17\"></a><a name=\"./start:h4\"></a>Section 2.4. "
"Переменные и Выражения Let<a name=\"SECTGSIDENTIFIERS\"></a></h3>"

#: start.html:814
msgid ""
"<p>\n"
"<a name=\"./start:s50\"></a>Suppose <tt><i>expr</i></tt> is a Scheme "
"expression that contains\n"
"a variable <tt><i>var</i></tt>.\n"
"Suppose, additionally, that we would like <tt><i>var</i></tt> to have the "
"value \n"
"<tt><i>val</i></tt> when we evaluate <tt><i>expr</i></tt>.\n"
"For example, we might like <tt>x</tt> to have the value 2 when we \n"
"evaluate <tt>(+&nbsp;x&nbsp;3)</tt>.\n"
"Or, we might want <tt>y</tt> to have the value 3 when we evaluate \n"
"<tt>(+&nbsp;2&nbsp;y)</tt>.\n"
"The following examples demonstrate how to do this using Scheme's\n"
"<a name=\"./start:s51\"></a><tt>let</tt> syntactic form."
msgstr ""
"<p>\n"
"<a name=\"./start:s50\"></a>Предположим, что <tt><i>expr</i></tt> является "
"выражением Scheme, которое\n"
"содержит переменну <tt><i>var</i></tt>.\n"
"Предположим, кроме того, что мы хотели бы, чтобы <tt><i>var</i></tt> имел "
"значение \n"
"<tt><i>val</i></tt> когда мы вычисляем <tt><i>expr</i></tt>.\n"
"Например, нам может потребоваться, чтобы <tt>x</tt> получило значение 2 при\n"
"вычислении <tt>(+&nbsp;x&nbsp;3)</tt>.\n"
"или, мы можем захотеть, чтобы <tt>y</tt> имело значение 3 при вычислении\n"
"<tt>(+&nbsp;2&nbsp;y)</tt>.\n"
"Следующие примеры демонстрируют, как это сделать, используя синтаксическую "
"форму Scheme\n"
"<a name=\"./start:s51\"></a><tt>let</tt>."

#: start.html:816
msgctxt "start.html:816"
msgid "</p><p>"
msgstr ""

#: start.html:818
msgid "</p><p><tt>(let&nbsp;((x&nbsp;2))<br>"
msgstr ""

#: start.html:823
msgid ""
"&nbsp;&nbsp;(+&nbsp;x&nbsp;3))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;5\n"
"<br>\n"
"<br>\n"
"(let&nbsp;((y&nbsp;3))<br>"
msgstr ""

#: start.html:828
msgid ""
"&nbsp;&nbsp;(+&nbsp;2&nbsp;y))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;5\n"
"<br>\n"
"<br>\n"
"(let&nbsp;((x&nbsp;2)&nbsp;(y&nbsp;3))<br>"
msgstr ""

#: start.html:834
msgid ""
"&nbsp;&nbsp;(+&nbsp;x&nbsp;y))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;5</tt>\n"
"</p><p>The <tt>let</tt> syntactic form includes a list of variable-"
"expression pairs, \n"
"along with a sequence of expressions referred to as the <i>body</i> of the\n"
"<tt>let</tt>. \n"
"The general form of a <tt>let</tt> expression is"
msgstr ""
"&nbsp;&nbsp;(+&nbsp;x&nbsp;y))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;5</tt>\n"
"</p><p>Синтаксическая форма <tt>let</tt> включает список пар переменная - "
"выражение, \n"
"а также последовательность выражений, называемую <i>тело</i> \n"
"<tt>let</tt>. \n"
"Общая форма выражения <tt>let</tt>"

#: start.html:836
msgctxt "start.html:836"
msgid "</p><p>"
msgstr ""

#: start.html:842
msgid ""
"</p><p><tt>(let&nbsp;((<i>var</i>&nbsp;<i>expr</i>)&nbsp;...)&nbsp;"
"<i>body<sub>1</sub></i>&nbsp;<i>body<sub>2</sub></i>&nbsp;...)</tt>\n"
"</p><p><a name=\"./start:s52\"></a>We say the variables are <i>bound</i> to "
"the\n"
"values by the <tt>let</tt>.\n"
"We refer to variables bound by <tt>let</tt> as\n"
"<a name=\"./start:s53\"></a><tt>let</tt>-<i>bound</i> variables."
msgstr ""
"</p><p><tt>(let&nbsp;((<i>var</i>&nbsp;<i>expr</i>)&nbsp;...)&nbsp;"
"<i>body<sub>1</sub></i>&nbsp;<i>body<sub>2</sub></i>&nbsp;...)</tt>\n"
"</p><p><a name=\"./start:s52\"></a>Мы говорим, что переменные <i>связанны</"
"i> со значениями в форме\n"
" <tt>let</tt>.\n"
"Мы будем называть переменные связанными <tt>let</tt> как\n"
"<a name=\"./start:s53\"></a><tt>let</tt>-<i>связанные</i> переменные."

#: start.html:848
msgid ""
"</p><p>\n"
"A <tt>let</tt> expression is often used to simplify an expression that\n"
"would contain two identical subexpressions.\n"
"Doing so also ensures that the\n"
"value of the common subexpression is computed only once."
msgstr ""
"</p><p>\n"
"Выражение <tt>let</tt> часто использутся для упрощения выражения, которое "
"будет\n"
"содержать два идентичных подвыражения.\n"
"Это также гарантирует, что значение общего подвыражения вычисляется\n"
"только один раз."

#: start.html:850
msgctxt "start.html:850"
msgid "</p><p>"
msgstr ""

#: start.html:857
msgid ""
"</p><p><tt>(+&nbsp;(*&nbsp;4&nbsp;4)&nbsp;(*&nbsp;4&nbsp;4))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;32\n"
"<br>\n"
"<br>\n"
"(let&nbsp;((a&nbsp;(*&nbsp;4&nbsp;4)))&nbsp;(+&nbsp;a&nbsp;a))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;32</tt>\n"
"</p><p>Brackets are often used in place of parentheses to delimit the "
"bindings of\n"
"a <tt>let</tt> expression."
msgstr ""
"</p><p><tt>(+&nbsp;(*&nbsp;4&nbsp;4)&nbsp;(*&nbsp;4&nbsp;4))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;32\n"
"<br>\n"
"<br>\n"
"(let&nbsp;((a&nbsp;(*&nbsp;4&nbsp;4)))&nbsp;(+&nbsp;a&nbsp;a))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;32</tt>\n"
"</p><p>Квадратные скобки часто используются вместо круглых скобок, чтобы "
"разграничить привязки\n"
"выражения <tt>let</tt>."

#: start.html:859
msgctxt "start.html:859"
msgid "</p><p>"
msgstr ""

#: start.html:861
msgid ""
"</p><p><tt>(let&nbsp;([list1&nbsp;'(a&nbsp;b&nbsp;c)]&nbsp;"
"[list2&nbsp;'(d&nbsp;e&nbsp;f)])<br>"
msgstr ""

#: start.html:863
msgid "&nbsp;&nbsp;(cons&nbsp;(cons&nbsp;(car&nbsp;list1)<br>"
msgstr ""

#: start.html:865
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;(car&nbsp;list2))<br>"
msgstr ""

#: start.html:867
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons&nbsp;(car&nbsp;"
"(cdr&nbsp;list1))<br>"
msgstr ""

#: start.html:876
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;(car&nbsp;(cdr&nbsp;list2)))))&nbsp;<img src=\"./start_files/0."
"gif\" alt=\"&lt;graphic&gt;\">&nbsp;((a&nbsp;.&nbsp;d)&nbsp;b&nbsp;.&nbsp;"
"e)</tt>\n"
"</p><p>Scheme treats forms enclosed in brackets just like forms enclosed in\n"
"parentheses.\n"
"An open bracket must be matched by a close bracket, and an open\n"
"parenthesis must be matched by a close parenthesis.\n"
"We use brackets for <tt>let</tt> (and, as we'll see, several other\n"
"standard syntactic forms) to improve readability, especially when we might\n"
"otherwise have two or more consecutive open parentheses."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;(car&nbsp;(cdr&nbsp;list2)))))&nbsp;<img src=\"./start_files/0."
"gif\" alt=\"&lt;graphic&gt;\">&nbsp;((a&nbsp;.&nbsp;d)&nbsp;b&nbsp;.&nbsp;"
"e)</tt>\n"
"</p><p>Scheme рассматривает формы, заключенные в квадратные скобки, также "
"как формы, заключенные\n"
"в круглые скобки.\n"
"Открытой квадратной скобке должна быть сопоставлена закрытая квадратная "
"скобка, и открытой\n"
"круглой скобке должна соответствовать закрытая круглая скобка.\n"
"Мы используем квадратные скобки для <tt>let</tt> (и, как мы увидим, "
"несколько других\n"
"стандартных синтаксических форм) для улучшения удобочитаемости, особенно\n"
"когда мы могли бы иметь две или более последовательно открытые круглые "
"скобки."

#: start.html:881
msgid ""
"</p><p>\n"
"Since expressions in the first position of a procedure application\n"
"are evaluated no differently from other expressions, a <tt>let</tt>-bound\n"
"variable may be used there as well."
msgstr ""
"</p><p>\n"
"Поскольку выражение в первой позиции применения процедуры вычисляются так "
"же,\n"
"как и другие выражения,  <tt>let</tt>-связывание переменной может\n"
"использоваться также и для них."

#: start.html:883
msgctxt "start.html:883"
msgid "</p><p>"
msgstr ""

#: start.html:885
msgid "</p><p><tt>(let&nbsp;([f&nbsp;+])<br>"
msgstr ""

#: start.html:890
msgid ""
"&nbsp;&nbsp;(f&nbsp;2&nbsp;3))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;5\n"
"<br>\n"
"<br>\n"
"(let&nbsp;([f&nbsp;+]&nbsp;[x&nbsp;2])<br>"
msgstr ""

#: start.html:895
msgid ""
"&nbsp;&nbsp;(f&nbsp;x&nbsp;3))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;5\n"
"<br>\n"
"<br>\n"
"(let&nbsp;([f&nbsp;+]&nbsp;[x&nbsp;2]&nbsp;[y&nbsp;3])<br>"
msgstr ""

#: start.html:899
msgid ""
"&nbsp;&nbsp;(f&nbsp;x&nbsp;y))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;5</tt>\n"
"</p><p>The variables bound by <tt>let</tt> are visible only within the body "
"of \n"
"the <tt>let</tt>."
msgstr ""
"&nbsp;&nbsp;(f&nbsp;x&nbsp;y))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;5</tt>\n"
"</p><p>Переменные связанные  <tt>let</tt> видны только внутри тела <tt>let</"
"tt>."

#: start.html:901
msgctxt "start.html:901"
msgid "</p><p>"
msgstr ""

#: start.html:903
msgid "</p><p><tt>(let&nbsp;([+&nbsp;*])<br>"
msgstr ""

#: start.html:910
msgid ""
"&nbsp;&nbsp;(+&nbsp;2&nbsp;3))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;6\n"
"<br>\n"
"<br>\n"
"(+&nbsp;2&nbsp;3)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;5</tt>\n"
"</p><p>This is fortunate, because we would not want the\n"
"value of <tt>+</tt> to be the multiplication procedure everywhere."
msgstr ""
"&nbsp;&nbsp;(+&nbsp;2&nbsp;3))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;6\n"
"<br>\n"
"<br>\n"
"(+&nbsp;2&nbsp;3)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;5</tt>\n"
"</p><p>Это удачное локальное присваивание, поскольку мы не хотели бы, чтобы  "
"значение<tt>+</tt> было бы\n"
"методом умножения повсюду."

#: start.html:913
msgid ""
"</p><p>\n"
"It is possible to nest <tt>let</tt> expressions."
msgstr ""
"</p><p>\n"
"Можно вкладывать выражения <tt>let</tt>."

#: start.html:915
msgctxt "start.html:915"
msgid "</p><p>"
msgstr ""

#: start.html:917
msgid "</p><p><tt>(let&nbsp;([a&nbsp;4]&nbsp;[b&nbsp;-3])<br>"
msgstr ""

#: start.html:919
msgid "&nbsp;&nbsp;(let&nbsp;([a-squared&nbsp;(*&nbsp;a&nbsp;a)]<br>"
msgstr ""

#: start.html:921
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[b-squared&nbsp;(*&nbsp;"
"b&nbsp;b)])<br>"
msgstr ""

#: start.html:925
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(+&nbsp;a-squared&nbsp;b-squared)))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;25</tt>\n"
"</p><p>When nested <tt>let</tt> expressions bind the same variable, only "
"the \n"
"binding created by the inner <tt>let</tt> is visible within its body."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;(+&nbsp;a-squared&nbsp;b-squared)))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;25</tt>\n"
"</p><p>Когда вложенные выражения <tt>let</tt> связывают одну и туже "
"переменную, внутри своего тела\n"
"видимым является только связывание, созданное внутренним <tt>let</tt>."

#: start.html:927
msgctxt "start.html:927"
msgid "</p><p>"
msgstr ""

#: start.html:929
msgctxt "start.html:929"
msgid "</p><p><tt>(let&nbsp;([x&nbsp;1])<br>"
msgstr ""

#: start.html:931
msgid "&nbsp;&nbsp;(let&nbsp;([x&nbsp;(+&nbsp;x&nbsp;1)])<br>"
msgstr ""

#: start.html:945
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(+&nbsp;x&nbsp;x)))&nbsp;<img src=\"./start_files/0."
"gif\" alt=\"&lt;graphic&gt;\">&nbsp;4</tt>\n"
"</p><p>The outer <tt>let</tt> expression binds <tt>x</tt> to 1 within its\n"
"body, which is the second <tt>let</tt> expression.\n"
"The inner <tt>let</tt> expression binds <tt>x</tt> to <tt>(+&nbsp;x&nbsp;1)</"
"tt> within\n"
"its body, which is the expression <tt>(+&nbsp;x&nbsp;x)</tt>.\n"
"What is the value of <tt>(+&nbsp;x&nbsp;1)</tt>?\n"
"Since <tt>(+&nbsp;x&nbsp;1)</tt> appears within the body of the outer "
"<tt>let</tt>\n"
"but not within the body of the inner <tt>let</tt>, the value of <tt>x</tt>\n"
"must be 1 and hence the value of <tt>(+&nbsp;x&nbsp;1)</tt> is 2.\n"
"What about <tt>(+&nbsp;x&nbsp;x)</tt>?\n"
"It appears within the body of both <tt>let</tt> expressions.\n"
"Only the inner binding for <tt>x</tt> is visible, so <tt>x</tt> is 2\n"
"and <tt>(+&nbsp;x&nbsp;x)</tt> is 4."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;(+&nbsp;x&nbsp;x)))&nbsp;<img src=\"./start_files/0."
"gif\" alt=\"&lt;graphic&gt;\">&nbsp;4</tt>\n"
"</p><p>Внешнее выражение <tt>let</tt> связывает <tt>x</tt> с 1 внутри своего "
"тела,\n"
"которым является  второе выражение <tt>let</tt>.\n"
"Внутренне выражение <tt>let</tt> связывает <tt>x</tt> с <tt>(+&nbsp;"
"x&nbsp;1)</tt> внутри\n"
"своего тело, которым является выражение <tt>(+&nbsp;x&nbsp;x)</tt>.\n"
"Каково значение  <tt>(+&nbsp;x&nbsp;1)</tt>?\n"
"Так как <tt>(+&nbsp;x&nbsp;1)</tt> появляется внутри тела внешнего <tt>let</"
"tt>,\n"
"но не внутри тела внутреннего <tt>let</tt>, значение <tt>x</tt>\n"
"должно быть равным 1 и следовательно значение <tt>(+&nbsp;x&nbsp;1)</tt> "
"равно 2.\n"
"Что относительно <tt>(+&nbsp;x&nbsp;x)</tt>?\n"
"Он появляется внутри тела обоих выражений <tt>let</tt>.\n"
"Но только внутренняя привязка для <tt>x</tt> видна, внутри второго <tt>let</"
"tt>, тогда <tt>x</tt> это 2\n"
"и <tt>(+&nbsp;x&nbsp;x)</tt> равно 4."

#: start.html:960
msgid ""
"</p><p>\n"
"<a name=\"./start:s54\"></a>The inner binding for <tt>x</tt> is said to "
"<i>shadow</i> the\n"
"outer binding.\n"
"A <tt>let</tt>-bound variable is visible everywhere within the body of its\n"
"<tt>let</tt> expression except where it is shadowed.\n"
"The region where a variable binding is visible is called its\n"
"<a name=\"./start:s55\"></a><i>scope</i>.\n"
"The scope of the first <tt>x</tt> in the example above is the body of\n"
"the outer <tt>let</tt> expression minus the body of the inner <tt>let</tt>\n"
"expression, where it is shadowed by the second <tt>x</tt>.\n"
"This form of scoping is referred to as <a name=\"./start:s56\"></"
"a><i>lexical scoping</i>,\n"
"since the scope of each binding can be determined by a straightforward\n"
"textual analysis of the program."
msgstr ""
"</p><p>\n"
"<a name=\"./start:s54\"></a>Про внутреннюю привязку <tt>x</tt> говорят что "
"она <i>скрывает(затеняет)</i> \n"
"внешнюю привязку.\n"
"<tt>let</tt>-связывание переменной видно везде внутри тела выражения "
"<tt>let</tt> исключая выражения,\n"
"где она скрывается. Область где привязка переменной видима называется\n"
"<a name=\"./start:s55\"></a><i>охватом(scope)</i>.\n"
"Охват первого <tt>x</tt> в примере выше это тело внешнего выражения <tt>let</"
"tt> исключая\n"
"тело внутреннего выражения <tt>let</tt>, где он затеняется вторым <tt>x</"
"tt>.\n"
"Эта форма охвата называется <a name=\"./start:s56\"></a><i>лексическим "
"охватом(lexical scoping)</i>,\n"
"поскольку область каждой связи может быть определена простым анализом "
"текста\n"
"программы."

#: start.html:967
msgid ""
"</p><p>\n"
"Shadowing may be avoided by choosing different names\n"
"for variables.\n"
"The expression above could be rewritten so that the variable bound\n"
"by the inner <tt>let</tt> is <tt>new-x</tt>."
msgstr ""
"</p><p>\n"
"Сокрытия связанной переменной можно избежать, выбирая разные имена для\n"
"переменных.\n"
"Вышеприведенное выражение можно переписать так, чтобы переменная "
"связываемая\n"
"во внутреннем <tt>let</tt> называлась <tt>new-x</tt>."

#: start.html:969
msgctxt "start.html:969"
msgid "</p><p>"
msgstr ""

#: start.html:971
msgctxt "start.html:971"
msgid "</p><p><tt>(let&nbsp;([x&nbsp;1])<br>"
msgstr ""

#: start.html:973
msgid "&nbsp;&nbsp;(let&nbsp;([new-x&nbsp;(+&nbsp;x&nbsp;1)])<br>"
msgstr ""

#: start.html:981
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(+&nbsp;new-x&nbsp;new-x)))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;4</tt>\n"
"</p><p>Although choosing different names can sometimes prevent confusion,\n"
"shadowing can help prevent the accidental use of an\n"
"\"old\" value.\n"
"For example, with the original version of the preceding example,\n"
"it would be impossible for us to mistakenly refer to the outer <tt>x</tt>\n"
"within the body of the inner <tt>let</tt>."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;(+&nbsp;new-x&nbsp;new-x)))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;4</tt>\n"
"</p><p>Хотя выбор разных имен иногда может препятствовать путанице,\n"
"затенение может помочь предотвратить случайное использование\n"
"\"старого\" значения.\n"
"Например, с исходной версией предыдущего примера нам было бы невозможно\n"
"ошибочно обратиться к внешнему  <tt>x</tt>\n"
"внутри тела внутреннего <tt>let</tt>."

#: start.html:983
msgctxt "start.html:983"
msgid "</p><p>"
msgstr ""

#: start.html:988
msgid ""
"</p><h4>Exercise <a name=\"g18\"></a>2.4.1</h4>\n"
"<a name=\"./start:s57\"></a>Rewrite the following expressions, using "
"<tt>let</tt> to remove common\n"
"subexpressions and to improve the structure of the code.\n"
"Do not perform any algebraic simplifications."
msgstr ""
"</p><h4>Упражнение <a name=\"g18\"></a>2.4.1</h4>\n"
"<a name=\"./start:s57\"></a>Перепишите следующие выражения, используя "
"возможность удаления общих\n"
"подвыражений и улучшения структуры кода.\n"
"Не выполняйте алгебраических упрощений."

#: start.html:990
msgctxt "start.html:990"
msgid "<p>"
msgstr ""

#: start.html:996
msgid ""
" </p><table>\n"
"<tbody><tr valign=\"top\"><td><i>&nbsp;&nbsp;a</i>.</td><td><tt>(+&nbsp;(-"
"&nbsp;(*&nbsp;3&nbsp;a)&nbsp;b)&nbsp;(+&nbsp;(*&nbsp;3&nbsp;a)&nbsp;b))</"
"tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;b</i>.</"
"td><td><tt>(cons&nbsp;(car&nbsp;(list&nbsp;a&nbsp;b&nbsp;c))&nbsp;(cdr&nbsp;"
"(list&nbsp;a&nbsp;b&nbsp;c)))</tt>\n"
"</td></tr></tbody></table>"
msgstr ""

#: start.html:998
msgctxt "start.html:998"
msgid "<p>"
msgstr ""

#: start.html:1001
msgctxt "start.html:1001"
msgid "</p><p>"
msgstr ""

#: start.html:1005
msgid ""
"</p><h4>Exercise <a name=\"g19\"></a>2.4.2</h4>\n"
"<a name=\"./start:s58\"></a>Determine the value of the following "
"expression.\n"
"Explain how you derived this value."
msgstr ""
"</p><h4>Упражнение <a name=\"g19\"></a>2.4.2</h4>\n"
"<a name=\"./start:s58\"></a>Определите значение следующего выражения. "
"Объясните,\n"
"как вы получили это значение."

#: start.html:1007
msgctxt "start.html:1007"
msgid "<p>"
msgstr ""

#: start.html:1009
msgid "</p><p><tt>(let&nbsp;([x&nbsp;9])<br>"
msgstr ""

#: start.html:1011
msgid "&nbsp;&nbsp;(*&nbsp;x<br>"
msgstr ""

#: start.html:1013
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;([x&nbsp;(/&nbsp;x&nbsp;3)])<br>"
msgstr ""

#: start.html:1016
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(+&nbsp;x&nbsp;x))))</tt>\n"
"</p><p>"
msgstr ""

#: start.html:1018
msgctxt "start.html:1018"
msgid "</p><p>"
msgstr ""

#: start.html:1024
msgid ""
"</p><h4>Exercise <a name=\"g20\"></a>2.4.3</h4>\n"
"<a name=\"./start:s59\"></a>Rewrite the following expressions to give unique "
"names to each different\n"
"<tt>let</tt>-bound variable so that none of the variables is shadowed.\n"
"Verify that the value of your expression is the same as that of the\n"
"original expression."
msgstr ""
"</p><h4>Упражнение <a name=\"g20\"></a>2.4.3</h4>\n"
"<a name=\"./start:s59\"></a>Перепишите следующие выражения, чтобы дать "
"уникальные\n"
"имена каждой <tt>let</tt>-связанной переменной, чтобы ни одна из "
"переменных,\n"
"не была затенена. Убедитесь, что значение вашего выражения совпадает с "
"значением\n"
"исходного выражения."

#: start.html:1026
msgctxt "start.html:1026"
msgid "<p>"
msgstr ""

#: start.html:1031
msgid ""
" </p><table>\n"
"<tbody><tr valign=\"top\"><td><i>&nbsp;&nbsp;a</i>.</td><td>\n"
"<p><tt>(let&nbsp;([x&nbsp;'a]&nbsp;[y&nbsp;'b])<br>"
msgstr ""

#: start.html:1033
msgid ""
"&nbsp;&nbsp;(list&nbsp;(let&nbsp;([x&nbsp;'c])&nbsp;(cons&nbsp;x&nbsp;y))<br>"
msgstr ""

#: start.html:1037
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;([y&nbsp;'d])&nbsp;"
"(cons&nbsp;x&nbsp;y))))</tt>\n"
"</p><p></p></td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;b</i>.</td><td>\n"
"<p><tt>(let&nbsp;([x&nbsp;'((a&nbsp;b)&nbsp;c)])<br>"
msgstr ""

#: start.html:1039
msgid "&nbsp;&nbsp;(cons&nbsp;(let&nbsp;([x&nbsp;(cdr&nbsp;x)])<br>"
msgstr ""

#: start.html:1041
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(car&nbsp;x))<br>"
msgstr ""

#: start.html:1043
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;([x&nbsp;(car&nbsp;"
"x)])<br>"
msgstr ""

#: start.html:1045
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons&nbsp;"
"(let&nbsp;([x&nbsp;(cdr&nbsp;x)])<br>"
msgstr ""

#: start.html:1047
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(car&nbsp;x))<br>"
msgstr ""

#: start.html:1049
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;(cons&nbsp;(let&nbsp;([x&nbsp;(car&nbsp;x)])<br>"
msgstr ""

#: start.html:1051
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"x)<br>"
msgstr ""

#: start.html:1054
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cdr&nbsp;"
"x))))))</tt>\n"
"</p><p></p></td></tr></tbody></table>"
msgstr ""

#: start.html:1056
msgctxt "start.html:1056"
msgid "<p>"
msgstr ""

#: start.html:1060
msgctxt "start.html:1060"
msgid "</p><p>"
msgstr ""

#: start.html:1062
msgid ""
"</p><h3><a name=\"g21\"></a><a name=\"./start:h5\"></a>Section 2.5. Lambda "
"Expressions<a name=\"SECTGSLAMBDA\"></a></h3>"
msgstr ""
"</p><h3><a name=\"g21\"></a><a name=\"./start:h5\"></a>Section 2.5. Lambda "
"выражения<a name=\"SECTGSLAMBDA\"></a></h3>"

#: start.html:1074
msgid ""
"<p>\n"
"In the expression <tt>(let&nbsp;([x&nbsp;(*&nbsp;3&nbsp;4)])&nbsp;(+&nbsp;"
"x&nbsp;x))</tt>, the variable\n"
"<tt>x</tt> is bound to the value of <tt>(*&nbsp;3&nbsp;4)</tt>.\n"
"What if we would like the value of <tt>(+&nbsp;x&nbsp;x)</tt> where <tt>x</"
"tt> is\n"
"bound to the value of <tt>(/&nbsp;99&nbsp;11)</tt>?\n"
"Where <tt>x</tt> is bound to the value of <tt>(-&nbsp;2&nbsp;7)</tt>?\n"
"In each case we need a different <tt>let</tt> expression.\n"
"When the body of the <tt>let</tt> is complicated, however, having to\n"
"repeat it can be inconvenient."
msgstr ""
"<p>\n"
"В выражении <tt>(let&nbsp;([x&nbsp;(*&nbsp;3&nbsp;4)])&nbsp;(+&nbsp;x&nbsp;"
"x))</tt>, переменная\n"
"<tt>x</tt> связана со значением <tt>(*&nbsp;3&nbsp;4)</tt>.\n"
"Что, если мы хотим получить значение <tt>(+&nbsp;x&nbsp;x)</tt> где <tt>x</"
"tt> связано\n"
"со значением <tt>(/&nbsp;99&nbsp;11)</tt>?\n"
"Где <tt>x</tt> связано со значением <tt>(-&nbsp;2&nbsp;7)</tt>?\n"
"В каждом случае нам нужно другое выражение <tt>let</tt>.\n"
"Однако, когда тело <tt>let</tt> сложное, повторять его ввод очень неудобно."

#: start.html:1079
msgid ""
"</p><p>\n"
"Instead, we can use the syntactic form <a name=\"./start:s60\"></"
"a><tt>lambda</tt> to create a new\n"
"<a name=\"./start:s61\"></a>procedure that has <tt>x</tt> as a parameter and "
"has the same\n"
"body as the <tt>let</tt> expression."
msgstr ""
"</p><p>\n"
"Вместо этого мы можем использовать синтаксическую форму <a name=\"./start:"
"s60\"></a><tt>lambda</tt> для\n"
"создания новой <a name=\"./start:s61\"></a>процедуры, которая имеет параметр "
"<tt>x</tt> и имеет тело такое\n"
"же как выражение <tt>let</tt>."

#: start.html:1081
msgctxt "start.html:1081"
msgid "</p><p>"
msgstr ""

#: start.html:1084
msgid ""
"</p><p><tt>(lambda&nbsp;(x)&nbsp;(+&nbsp;x&nbsp;x))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;#&lt;procedure&gt;</tt>\n"
"</p><p>The general form of a <tt>lambda</tt> expression is"
msgstr ""
"</p><p><tt>(lambda&nbsp;(x)&nbsp;(+&nbsp;x&nbsp;x))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;#&lt;procedure&gt;</tt>\n"
"</p><p>Общий вид <tt>lambda</tt> выражения"

#: start.html:1086
msgctxt "start.html:1086"
msgid "</p><p>"
msgstr ""

#: start.html:1093
msgid ""
"</p><p><tt>(lambda&nbsp;(<i>var</i>&nbsp;...)&nbsp;<i>body<sub>1</sub></"
"i>&nbsp;<i>body<sub>2</sub></i>&nbsp;...)</tt>\n"
"</p><p>The variables <tt><i>var</i>&nbsp;...</tt> are the <a name=\"./start:"
"s62\"></a><i>formal parameters</i>\n"
"of the procedure, and the sequence of expressions\n"
"<tt><i>body<sub>1</sub></i>&nbsp;<i>body<sub>2</sub></i>&nbsp;...</tt> is "
"its body.\n"
"(Actually, the true general form is somewhat more general than this,\n"
"as you will see later.)"
msgstr ""
"</p><p><tt>(lambda&nbsp;(<i>var</i>&nbsp;...)&nbsp;<i>body<sub>1</sub></"
"i>&nbsp;<i>body<sub>2</sub></i>&nbsp;...)</tt>\n"
"</p><p>Переменные <tt><i>var</i>&nbsp;...</tt> являются <a name=\"./start:"
"s62\"></a><i>формальными параметрами</i>\n"
"процедуры, а последовательность выражений\n"
"<tt><i>body<sub>1</sub></i>&nbsp;<i>body<sub>2</sub></i>&nbsp;...</tt> ее "
"телом.\n"
"(Собственно, настоящая общая форма несколько более общая, чем эта, как вы "
"увидите позже.)"

#: start.html:1101
msgid ""
"</p><p>\n"
"A procedure is just as much an object as a number, string, symbol,\n"
"or pair.\n"
"It does not have any meaningful printed representation as\n"
"far as Scheme is concerned, however, so this book uses the notation\n"
"<tt>#&lt;procedure&gt;</tt> to show that the value of an expression is a\n"
"procedure."
msgstr ""
"</p><p>\n"
"Процедура - это такой же объект, как число, строка, символ или\n"
"пара.\n"
"Тем не менее, он не имеет никакого печатного представления\n"
"в Scheme поэтому в этой книге используется обозначение <tt>#&lt;procedure&gt;"
"</tt>,\n"
"чтобы показать, что значение выражения является процедурой."

#: start.html:1105
msgid ""
"</p><p>\n"
"The most common operation to perform on a procedure is to apply it\n"
"to one or more values."
msgstr ""
"</p><p>\n"
"Наиболее распространенная операция примняемая к процедуре это \n"
"применение(apply) процедуры к одному или нескольким значениям."

#: start.html:1107
msgctxt "start.html:1107"
msgid "</p><p>"
msgstr ""

#: start.html:1118
msgid ""
"</p><p><tt>((lambda&nbsp;(x)&nbsp;(+&nbsp;x&nbsp;x))&nbsp;"
"(*&nbsp;3&nbsp;4))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;24</tt>\n"
"</p><p>This is no different from any other <a name=\"./start:s63\"></"
"a>procedure application.\n"
"The procedure is the value of <tt>(lambda&nbsp;(x)&nbsp;(+&nbsp;x&nbsp;x))</"
"tt>, and the\n"
"only argument is the value of <tt>(*&nbsp;3&nbsp;4)</tt>, or 12.\n"
"The argument values, or <a name=\"./start:s64\"></a><i>actual parameters</"
"i>, are bound to the\n"
"formal parameters within the body of the <tt>lambda</tt> expression\n"
"in the same way as <tt>let</tt>-bound variables are bound to their values.\n"
"In this case, <tt>x</tt> is bound to 12, and\n"
"the value of <tt>(+&nbsp;x&nbsp;x)</tt> is 24.\n"
"Thus, the result of applying the procedure to the value 12 is 24."
msgstr ""
"</p><p><tt>((lambda&nbsp;(x)&nbsp;(+&nbsp;x&nbsp;x))&nbsp;"
"(*&nbsp;3&nbsp;4))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;24</tt>\n"
"</p><p>Это ничем не отличается от любого другого <a name=\"./start:s63\"></"
"a>применения процедуры.\n"
"Процедура это значение <tt>(lambda&nbsp;(x)&nbsp;(+&nbsp;x&nbsp;x))</tt>, "
"и \n"
"единственным аргументом ее является значение <tt>(*&nbsp;3&nbsp;4)</tt>, или "
"12.\n"
"Значения аргументов, или <a name=\"./start:s64\"></a><i>фактические "
"параметры</i>, связываются\n"
"с формальными параметрами в пределах тела <tt>lambda</tt> выражения\n"
"так же, как связываются переменные в <tt>let</tt>-форме с их значениями.\n"
"В данном случае, <tt>x</tt> связывается с 12, а значение <tt>(+&nbsp;x&nbsp;"
"x)</tt> равно 24.\n"
"Таким образом, результат применения процедуры к значению 12 равен 24."

#: start.html:1123
msgid ""
"</p><p>\n"
"Because procedures are objects, we can establish\n"
"a procedure as the value of a variable and use the procedure more\n"
"than once.<a name=\"./start:s65\"></a>"
msgstr ""
"</p><p>\n"
"Поскольку процедуры являются объектами, мы можем установить процедуру\n"
"как значение переменной и использовать процедуру более одного раза.<a name="
"\"./start:s65\"></a>"

#: start.html:1125
msgctxt "start.html:1125"
msgid "</p><p>"
msgstr ""

#: start.html:1127
msgid ""
"</p><p><tt>(let&nbsp;([double&nbsp;(lambda&nbsp;(x)&nbsp;(+&nbsp;x&nbsp;"
"x))])<br>"
msgstr ""

#: start.html:1129
msgid "&nbsp;&nbsp;(list&nbsp;(double&nbsp;(*&nbsp;3&nbsp;4))<br>"
msgstr ""

#: start.html:1131
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(double&nbsp;(/"
"&nbsp;99&nbsp;11))<br>"
msgstr ""

#: start.html:1135
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(double&nbsp;(-"
"&nbsp;2&nbsp;7))))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;(24&nbsp;18&nbsp;-10)</tt>\n"
"</p><p>Here, we establish a binding for <tt>double</tt> to a procedure, "
"then\n"
"use this procedure to double three different values."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(double&nbsp;(-"
"&nbsp;2&nbsp;7))))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;(24&nbsp;18&nbsp;-10)</tt>\n"
"</p><p>Здесь мы устанавливаем связь для <tt>double</tt> с процедурой, затем\n"
"используем эту процедуру чтобы удвоить три разные значения."

#: start.html:1142
msgid ""
"</p><p>\n"
"The procedure expects its actual parameter to be a number, since\n"
"it passes the actual parameter on to <tt>+</tt>.\n"
"In general, the actual parameter may be any sort of object.\n"
"Consider, for example, a similar procedure that uses <tt>cons</tt>\n"
"instead of <tt>+</tt>.<a name=\"./start:s66\"></a>"
msgstr ""
"</p><p>\n"
"Процедура ожидает, что ее фактический параметр будет числом, так как\n"
"она передает фактический параметр процедуре <tt>+</tt>.\n"
"В общем, фактический параметр может быть любым объектом.\n"
"Рассмотрим, например, аналогичную процедуру, в которой используются\n"
"<tt>cons</tt> вместо <tt>+</tt>.<a name=\"./start:s66\"></a>"

#: start.html:1144
msgctxt "start.html:1144"
msgid "</p><p>"
msgstr ""

#: start.html:1146
msgid ""
"</p><p><tt>(let&nbsp;([double-cons&nbsp;(lambda&nbsp;(x)&nbsp;(cons&nbsp;"
"x&nbsp;x))])<br>"
msgstr ""

#: start.html:1151
msgid ""
"&nbsp;&nbsp;(double-cons&nbsp;'a))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(a&nbsp;.&nbsp;a)</tt>\n"
"</p><p>Noting the similarity between <tt>double</tt> and <tt>double-cons</"
"tt>,\n"
"you should not be surprised to learn that they may be collapsed\n"
"into a single procedure by adding an additional argument."
msgstr ""
"&nbsp;&nbsp;(double-cons&nbsp;'a))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(a&nbsp;.&nbsp;a)</tt>\n"
"</p><p>Отмечая сходство между  <tt>double</tt> и <tt>double-cons</tt>,\n"
"вы не должны удивляться узнав, что они могут быть свернуты в одну "
"процедуру,\n"
"добавлением дополнительного аргумента."

#: start.html:1153
msgctxt "start.html:1153"
msgid "</p><p>"
msgstr ""

#: start.html:1155
msgid ""
"</p><p><tt>(let&nbsp;([double-any&nbsp;(lambda&nbsp;(f&nbsp;x)&nbsp;(f&nbsp;"
"x&nbsp;x))])<br>"
msgstr ""

#: start.html:1157
msgid "&nbsp;&nbsp;(list&nbsp;(double-any&nbsp;+&nbsp;13)<br>"
msgstr ""

#: start.html:1162
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(double-any&nbsp;"
"cons&nbsp;'a)))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;(26&nbsp;(a&nbsp;.&nbsp;a))</tt>\n"
"</p><p>This demonstrates that procedures may accept more than\n"
"one argument and that arguments passed to a procedure may\n"
"themselves be procedures."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(double-any&nbsp;"
"cons&nbsp;'a)))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;(26&nbsp;(a&nbsp;.&nbsp;a))</tt>\n"
"</p><p>Это демонстрирует, что процедуры могут принимать более одного "
"аргумента и что\n"
"аргументы, перееданные процедуре, сами могут быть процедурами."

#: start.html:1167
msgid ""
"</p><p>\n"
"</p><p>As with <tt>let</tt> expressions, <tt>lambda</tt> expressions become\n"
"somewhat more interesting when they are nested within other\n"
"<tt>lambda</tt> or <tt>let</tt> expressions."
msgstr ""
"</p><p>\n"
"</p><p>Как и в случае выражений <tt>let</tt>, выражения <tt>lambda</tt> "
"становятся несколько\n"
"более интересными, когда они вложены в другие выражения\n"
"<tt>lambda</tt> или <tt>let</tt>."

#: start.html:1169
msgctxt "start.html:1169"
msgid "</p><p>"
msgstr ""

#: start.html:1171
msgid "</p><p><tt>(let&nbsp;([x&nbsp;'a])<br>"
msgstr ""

#: start.html:1173
msgid ""
"&nbsp;&nbsp;(let&nbsp;([f&nbsp;(lambda&nbsp;(y)&nbsp;(list&nbsp;x&nbsp;"
"y))])<br>"
msgstr ""

#: start.html:1188
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(f&nbsp;'b)))&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b)</tt>\n"
"</p><p>The occurrence of <tt>x</tt> within the <tt>lambda</tt> expression\n"
"refers to the <tt>x</tt> outside the <tt>lambda</tt> that is bound by\n"
"the outer <tt>let</tt> expression.\n"
"The variable <tt>x</tt> is said to <a name=\"./start:s67\"></a><i>occur "
"free</i>\n"
"in the <tt>lambda</tt> expression or to be a\n"
"<a name=\"./start:s68\"></a><i>free variable</i> of the <tt>lambda</tt> "
"expression.\n"
"The variable <tt>y</tt> does not occur free in the <tt>lambda</tt>\n"
"expression since it is bound by the <tt>lambda</tt> expression.\n"
"A variable that occurs free in a <tt>lambda</tt> expression\n"
"should be bound, e.g., by an enclosing <tt>lambda</tt> or <tt>let</tt>\n"
"expression, unless the variable is (like the names of primitive\n"
"procedures) bound outside of the expression, as we discuss in\n"
"the following section."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;(f&nbsp;'b)))&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b)</tt>\n"
"</p><p>Вхождение <tt>x</tt> в <tt>lambda</tt> выражение относится\n"
"к  <tt>x</tt> внешней по отношению к <tt>lambda</tt> связанной внешним\n"
" <tt>let</tt> выражением.\n"
"Говорят, что переменная <tt>x</tt>  <a name=\"./start:s67\"></a><i>свободна</"
"i>\n"
"в <tt>lambda</tt> выражении или является \n"
"<a name=\"./start:s68\"></a><i>свободной переменной</i>  <tt>lambda</tt> "
"выражения.\n"
"Переменная <tt>y</tt> не является свободной в <tt>lambda</tt> выражении,\n"
"так как она связана  <tt>lambda</tt> выражением.\n"
"Переменная, которая является свободной в <tt>lambda</tt> выражении\n"
"должно быть связана, например путем включения(замыкания) в <tt>lambda</tt> "
"или <tt>let</tt>\n"
"выражния, если только переменная(например, имена примитивных процедур)) не "
"связана\n"
"внешним выражением, о чем мы поговорим в следующем разделе."

#: start.html:1193
msgid ""
"</p><p>\n"
"What happens when the procedure is applied somewhere outside\n"
"the scope of the bindings for variables that occur free\n"
"within the procedure, as in the following expression?"
msgstr ""
"</p><p>\n"
"Что происходит, когда процедура применяется где-то вне\n"
"области привязок для переменных, которые являются\n"
"свободными внутри процедуры, как в следующем\n"
"выражении?"

#: start.html:1195
msgctxt "start.html:1195"
msgid "</p><p>"
msgstr ""

#: start.html:1197
msgctxt "start.html:1197"
msgid "</p><p><tt>(let&nbsp;([f&nbsp;(let&nbsp;([x&nbsp;'sam])<br>"
msgstr ""

#: start.html:1199
msgctxt "start.html:1199"
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"(lambda&nbsp;(y&nbsp;z)&nbsp;(list&nbsp;x&nbsp;y&nbsp;z)))])<br>"
msgstr ""

#: start.html:1206
msgid ""
"&nbsp;&nbsp;(f&nbsp;'i&nbsp;'am))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(sam&nbsp;i&nbsp;am)</tt>\n"
"</p><p>The answer is that the same bindings that were in effect when\n"
"the procedure was created are in effect again when the procedure\n"
"is applied.\n"
"This is true even if another binding for <tt>x</tt>\n"
"is visible where the procedure is applied."
msgstr ""
"&nbsp;&nbsp;(f&nbsp;'i&nbsp;'am))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(sam&nbsp;i&nbsp;am)</tt>\n"
"</p><p>Ответ заключается в том, что те же привязки, которые были "
"действительны при\n"
"создании процедуры, снова действуют при применении процедуры.\n"
"Это справедливо, даже в том случае, если в процедура применяется\n"
"когда действует другая привязка для <tt>x</tt>."

#: start.html:1208
msgctxt "start.html:1208"
msgid "</p><p>"
msgstr ""

#: start.html:1210
msgctxt "start.html:1210"
msgid "</p><p><tt>(let&nbsp;([f&nbsp;(let&nbsp;([x&nbsp;'sam])<br>"
msgstr ""

#: start.html:1212
msgctxt "start.html:1212"
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"(lambda&nbsp;(y&nbsp;z)&nbsp;(list&nbsp;x&nbsp;y&nbsp;z)))])<br>"
msgstr ""

#: start.html:1214
msgid "&nbsp;&nbsp;(let&nbsp;([x&nbsp;'not-sam])<br>"
msgstr ""

#: start.html:1218
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(f&nbsp;'i&nbsp;'am)))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(sam&nbsp;i&nbsp;am)</tt>\n"
"</p><p>In both cases, the value of <tt>x</tt> within the procedure named\n"
"<tt>f</tt> is <tt>sam</tt>."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;(f&nbsp;'i&nbsp;'am)))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(sam&nbsp;i&nbsp;am)</tt>\n"
"</p><p>В обоих случаях, значение <tt>x</tt> внутри процедуры именуемой\n"
"<tt>f</tt> будет <tt>sam</tt>."

#: start.html:1225
msgid ""
"</p><p>\n"
"</p><p>Incidentally, a <tt>let</tt> expression is nothing more than the\n"
"direct application of a <tt>lambda</tt> expression to a set of\n"
"argument expressions.\n"
"For example, the two expressions below are equivalent."
msgstr ""
"</p><p>\n"
"</p><p>Кстати, выражение <tt>let</tt> представляет собой не что иное, как "
"прямое\n"
"применение <tt>lambda</tt> выражения к набору аргументов выражений.\n"
"Например, два приведенных ниже выражения эквивалентны."

#: start.html:1228
msgid ""
"</p><p>\n"
"</p><p><tt>(let&nbsp;([x&nbsp;'a])&nbsp;(cons&nbsp;x&nbsp;x))</tt>&nbsp;"
"&#8801;&nbsp;<tt>((lambda&nbsp;(x)&nbsp;(cons&nbsp;x&nbsp;x))&nbsp;'a)</tt>"
msgstr ""

#: start.html:1234
msgid ""
"</p><p>\n"
"</p><p>In fact, a <a name=\"./start:s69\"></a><tt>let</tt> expression is a "
"syntactic extension defined\n"
"in terms of <tt>lambda</tt> and procedure application, which are\n"
"both core syntactic forms.\n"
"In general, any expression of the form"
msgstr ""
"</p><p>\n"
"</p><p>Фактически, выражение <a name=\"./start:s69\"></a><tt>let</tt> "
"является синтаксическим\n"
"расширениением, определенным в терминах <tt>lambda</tt> и применения "
"процедуры, в свою очередь\n"
"оба этих термина являются базовыми синтаксическими формами.\n"
"В общем случае любое выражение вида(формы)"

#: start.html:1236
msgctxt "start.html:1236"
msgid "</p><p>"
msgstr ""

#: start.html:1239
msgid ""
"</p><p><tt>(let&nbsp;((<i>var</i>&nbsp;<i>expr</i>)&nbsp;...)&nbsp;"
"<i>body<sub>1</sub></i>&nbsp;<i>body<sub>2</sub></i>&nbsp;...)</tt>\n"
"</p><p>is equivalent to the following."
msgstr ""
"</p><p><tt>(let&nbsp;((<i>var</i>&nbsp;<i>expr</i>)&nbsp;...)&nbsp;"
"<i>body<sub>1</sub></i>&nbsp;<i>body<sub>2</sub></i>&nbsp;...)</tt>\n"
"</p><p>эквивалентно следующему."

#: start.html:1241
msgctxt "start.html:1241"
msgid "</p><p>"
msgstr ""

#: start.html:1243
msgid ""
"</p><p><tt>((lambda&nbsp;(<i>var</i>&nbsp;...)&nbsp;<i>body<sub>1</sub></"
"i>&nbsp;<i>body<sub>2</sub></i>&nbsp;...)<br>"
msgstr ""

#: start.html:1247
msgid ""
"&nbsp;<i>expr</i>&nbsp;...)</tt>\n"
"</p><p>See Section&nbsp;<a href=\"further.html#g50\">3.1</a> for more about "
"core forms and syntactic\n"
"extensions."
msgstr ""
"&nbsp;<i>expr</i>&nbsp;...)</tt>\n"
"</p><p>См Раздел&nbsp;<a href=\"further.html#g50\">3.1</a> для получения "
"более подробной информации о\n"
"основных формах и синтаксических расширениях."

#: start.html:1255
msgid ""
"</p><p>\n"
"</p><p>As mentioned above, the general form of\n"
"<a name=\"./start:s70\"></a><a name=\"./start:s71\"></a><tt>lambda</tt> is a "
"bit\n"
"more complicated than the form we saw earlier, in that the\n"
"formal parameter specification, <tt>(<i>var</i>&nbsp;...)</tt>, need not be "
"a proper list,\n"
"or indeed even a list at all.\n"
"The formal parameter specification can be in any of the following three "
"forms:"
msgstr ""
"</p><p>\n"
"</p><p>Как упоминалось выше, общий вид\n"
"<a name=\"./start:s70\"></a><a name=\"./start:s71\"></a><tt>lambda</tt> "
"немного\n"
"сложнее, чем форма, которую мы видели ранее, поскольку\n"
"спецификация формальных параметров, <tt>(<i>var</i>&nbsp;...)</tt>, не "
"обязательно должна\n"
"быть правильным списком, или даже списком вообще.\n"
"Спецификация формальных параметров может быть в любой из следующих трех форм:"

#: start.html:1260
msgid ""
"</p><p>\n"
"</p><ul>\n"
"<li>a proper list of variables, <tt>(<i>var<sub>1</sub></i>&nbsp;...&nbsp;"
"<i>var<sub>n</sub></i>)</tt>, such\n"
"as we have already seen,"
msgstr ""
"</p><p>\n"
"</p><ul>\n"
"<li>правильный список переменных, <tt>(<i>var<sub>1</sub></i>&nbsp;...&nbsp;"
"<i>var<sub>n</sub></i>)</tt>, как\n"
"мы уже видели,"

#: start.html:1263
msgid ""
"<p>\n"
"</p></li><li>a single variable, <tt><i>var<sub>r</sub></i></tt>, or"
msgstr ""
"<p>\n"
"</p></li><li>одна переменная, <tt><i>var<sub>r</sub></i></tt>, или"

#: start.html:1269
msgid ""
"<p>\n"
"</p></li><li>an improper list of variables,\n"
"<tt>(<i>var<sub>1</sub></i>&nbsp;...&nbsp;<i>var<sub>n</sub></i>&nbsp;.&nbsp;"
"<i>var<sub>r</sub></i>)</tt>.\n"
"</li></ul>\n"
"<p>"
msgstr ""
"<p>\n"
"</p></li><li>неправильный список переменных,\n"
"<tt>(<i>var<sub>1</sub></i>&nbsp;...&nbsp;<i>var<sub>n</sub></i>&nbsp;.&nbsp;"
"<i>var<sub>r</sub></i>)</tt>.\n"
"</li></ul>\n"
"<p>"

#: start.html:1287
msgid ""
"</p><p>\n"
"In the first case, exactly <i>n</i> actual parameters must\n"
"be supplied, and\n"
"each variable is bound to the corresponding actual parameter.\n"
"In the second, any number of actual parameters is valid; all of the\n"
"actual parameters\n"
"are put into a single list and the single variable is bound to this\n"
"list.\n"
"The third case is a hybrid of the first two cases.\n"
"At least <i>n</i> actual parameters must be supplied.\n"
"The variables <tt><i>var<sub>1</sub></i>&nbsp;...&nbsp;<i>var<sub>n</sub></"
"i></tt>\n"
"are bound to the corresponding actual parameters,\n"
"and the variable <tt><i>var<sub>r</sub></i></tt> is bound to a list "
"containing\n"
"the remaining actual parameters.\n"
"In the second and third cases, <tt><i>var<sub>r</sub></i></tt> is sometimes "
"referred to\n"
"as a \"rest\" parameter because it holds the rest of the actual\n"
"parameters beyond those that are individually named."
msgstr ""
"</p><p>\n"
"В первом случае, необходимо указать ровно <i>n</i> фактических параметров\n"
"и какждая переменная связывается с соответствующим фактическим параметром.\n"
"Во втором случае - любое количество фактических параметров правильно; все\n"
"фактические параметры помещаются в один список, и одна переменная "
"связывается\n"
"с этим списком.\n"
"Третий случай это гибрид из первых двух случаев.\n"
"Необходимо предоставить по крайней мере <i>n</i> фактических параметров.\n"
"Переменные <tt><i>var<sub>1</sub></i>&nbsp;...&nbsp;<i>var<sub>n</sub></i></"
"tt>\n"
"связываются с соответствующими фактическими параметрами, а\n"
"переменная  <tt><i>var<sub>r</sub></i></tt> связывается со списком\n"
"оставшихся фактических параметров.\n"
"Во втором и третьем случае, <tt><i>var<sub>r</sub></i></tt> иногда "
"упоминается\n"
"как параметр \"rest\", поскольку он содержит остальные фактические "
"параметры,\n"
"кроме первых фактичесих параметров которые именуются индивидуально."

#: start.html:1291
msgid ""
"</p><p>\n"
"Let's consider a few examples to help clarify the more general\n"
"syntax of <tt>lambda</tt> expressions."
msgstr ""
"</p><p>\n"
"Рассмотрим несколько примеров, которые помогут прояснить более\n"
"общий синтаксис <tt>lambda</tt> выражений."

#: start.html:1293
msgctxt "start.html:1293"
msgid "</p><p>"
msgstr ""

#: start.html:1295
msgid "</p><p><tt>(let&nbsp;([f&nbsp;(lambda&nbsp;x&nbsp;x)])<br>"
msgstr ""

#: start.html:1300
msgid ""
"&nbsp;&nbsp;(f&nbsp;1&nbsp;2&nbsp;3&nbsp;4))&nbsp;<img src=\"./start_files/0."
"gif\" alt=\"&lt;graphic&gt;\">&nbsp;(1&nbsp;2&nbsp;3&nbsp;4)\n"
"<br>\n"
"<br>\n"
"(let&nbsp;([f&nbsp;(lambda&nbsp;x&nbsp;x)])<br>"
msgstr ""

#: start.html:1305
msgid ""
"&nbsp;&nbsp;(f))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;()\n"
"<br>\n"
"<br>\n"
"(let&nbsp;([g&nbsp;(lambda&nbsp;(x&nbsp;.&nbsp;y)&nbsp;(list&nbsp;x&nbsp;"
"y))])<br>"
msgstr ""

#: start.html:1310
msgid ""
"&nbsp;&nbsp;(g&nbsp;1&nbsp;2&nbsp;3&nbsp;4))&nbsp;<img src=\"./start_files/0."
"gif\" alt=\"&lt;graphic&gt;\">&nbsp;(1&nbsp;(2&nbsp;3&nbsp;4))\n"
"<br>\n"
"<br>\n"
"(let&nbsp;([h&nbsp;(lambda&nbsp;(x&nbsp;y&nbsp;.&nbsp;z)&nbsp;(list&nbsp;"
"x&nbsp;y&nbsp;z))])<br>"
msgstr ""

#: start.html:1327
msgid ""
"&nbsp;&nbsp;(h&nbsp;'a&nbsp;'b&nbsp;'c&nbsp;'d))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;(c&nbsp;"
"d))</tt>\n"
"</p><p>In the first two examples, the procedure named <tt>f</tt> accepts "
"any\n"
"number of arguments.\n"
"These arguments are automatically formed into a list to which the\n"
"variable <tt>x</tt> is bound; the value of <tt>f</tt> is this list.\n"
"In the first example, the arguments are 1, 2, 3,\n"
"and 4, so the answer is <tt>(1&nbsp;2&nbsp;3&nbsp;4)</tt>.\n"
"In the second, there are no arguments, so the answer is the empty\n"
"list <tt>()</tt>.\n"
"The value of the procedure named <tt>g</tt> in the third example\n"
"is a list whose first element is the first argument and whose\n"
"second element is a list containing the remaining arguments.\n"
"The procedure named <tt>h</tt> is similar but separates out the\n"
"second argument.\n"
"While <tt>f</tt> accepts any number of arguments, <tt>g</tt> must receive\n"
"at least one and <tt>h</tt> must receive at least two."
msgstr ""
"&nbsp;&nbsp;(h&nbsp;'a&nbsp;'b&nbsp;'c&nbsp;'d))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;(c&nbsp;"
"d))</tt>\n"
"</p><p>В первых двух примерах, процедура именуемая <tt>f</tt> принимает "
"произвольное число\n"
"аргументов.\n"
"Эти аргументы автоматически формируются в список, с которым связывается "
"переменная <tt>x</tt>;\n"
"значение <tt>f</tt> это список.\n"
"В первом примере, аргументы равны 1, 2, 3, и 4, поэтому ответ "
"<tt>(1&nbsp;2&nbsp;3&nbsp;4)</tt>.\n"
"Во втором случаее аргуметов нет, поэтому ответ - пустой список. <tt>()</"
"tt>.\n"
"Значение процедуры с именем <tt>g</tt> в третьем примере, это список, "
"содержащий\n"
"с в котором первый элемент которого является первым аргументом и вторым "
"элементом\n"
"кторого является список, содержащий остальные аргументы. Процедура с именем\n"
" <tt>h</tt> аналогична, но отделяет второй аргумент.\n"
"В то время как <tt>f</tt> принимает произвольное количество аргументов, "
"<tt>g</tt> должен\n"
"получить не менее одного, а <tt>h</tt> должен получить не менее двух."

#: start.html:1329
msgctxt "start.html:1329"
msgid "</p><p>"
msgstr ""

#: start.html:1332
msgid ""
"</p><h4>Exercise <a name=\"g22\"></a>2.5.1</h4>\n"
"<a name=\"./start:s72\"></a>Determine the values of the expressions below."
msgstr ""
"</p><h4>Упражнение <a name=\"g22\"></a>2.5.1</h4>\n"
"<a name=\"./start:s72\"></a>Определите значения приведенных ниже выражений."

#: start.html:1334
msgctxt "start.html:1334"
msgid "<p>"
msgstr ""

#: start.html:1339
msgid ""
" </p><table>\n"
"<tbody><tr valign=\"top\"><td><i>&nbsp;&nbsp;a</i>.</td><td>\n"
"<p><tt>(let&nbsp;([f&nbsp;(lambda&nbsp;(x)&nbsp;x)])<br>"
msgstr ""

#: start.html:1343
msgid ""
"&nbsp;&nbsp;(f&nbsp;'a))</tt>\n"
"</p><p></p></td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;b</i>.</td><td>\n"
"<p><tt>(let&nbsp;([f&nbsp;(lambda&nbsp;x&nbsp;x)])<br>"
msgstr ""

#: start.html:1347
msgid ""
"&nbsp;&nbsp;(f&nbsp;'a))</tt>\n"
"</p><p></p></td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;c</i>.</td><td>\n"
"<p><tt>(let&nbsp;([f&nbsp;(lambda&nbsp;(x&nbsp;.&nbsp;y)&nbsp;x)])<br>"
msgstr ""

#: start.html:1351
msgid ""
"&nbsp;&nbsp;(f&nbsp;'a))</tt>\n"
"</p><p></p></td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;d</i>.</td><td>\n"
"<p><tt>(let&nbsp;([f&nbsp;(lambda&nbsp;(x&nbsp;.&nbsp;y)&nbsp;y)])<br>"
msgstr ""

#: start.html:1354
msgid ""
"&nbsp;&nbsp;(f&nbsp;'a))</tt>\n"
"</p><p></p></td></tr></tbody></table>"
msgstr ""

#: start.html:1356
msgctxt "start.html:1356"
msgid "<p>"
msgstr ""

#: start.html:1359
msgctxt "start.html:1359"
msgid "</p><p>"
msgstr ""

#: start.html:1362
msgid ""
"</p><h4>Exercise <a name=\"g23\"></a>2.5.2</h4>\n"
"<a name=\"./start:s73\"></a>How might the primitive procedure <tt>list</tt> "
"be defined?"
msgstr ""
"</p><h4>Упражнение <a name=\"g23\"></a>2.5.2</h4>\n"
"<a name=\"./start:s73\"></a>Как можно определить <tt>список</tt> примитивных "
"процедур?"

#: start.html:1364
msgctxt "start.html:1364"
msgid "<p>"
msgstr ""

#: start.html:1367
msgctxt "start.html:1367"
msgid "</p><p>"
msgstr ""

#: start.html:1373
msgid ""
"</p><h4>Exercise <a name=\"g24\"></a>2.5.3</h4>\n"
"<a name=\"./start:s74\"></a>List the variables that <a name=\"./start:"
"s75\"></a>occur free in each of the <tt>lambda</tt>\n"
"expressions below.\n"
"Do not omit variables that name primitive procedures such as\n"
"<tt>+</tt> or <tt>cons</tt>."
msgstr ""
"</p><h4>Упражнение <a name=\"g24\"></a>2.5.3</h4>\n"
"<a name=\"./start:s74\"></a>Перечислите переменные которые являются <a name="
"\"./start:s75\"></a>свободными\n"
"для каждого <tt>lambda</tt> выражения ниже.\n"
"Не опускайте переменные которые называют примитивными процедурами, таким "
"как\n"
"<tt>+</tt> или <tt>cons</tt>."

#: start.html:1375
msgctxt "start.html:1375"
msgid "<p>"
msgstr ""

#: start.html:1383
msgid ""
" </p><table>\n"
"<tbody><tr valign=\"top\"><td><i>&nbsp;&nbsp;a</i>.</td><td><tt>(lambda&nbsp;"
"(f&nbsp;x)&nbsp;(f&nbsp;x))</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;b</i>.</"
"td><td><tt>(lambda&nbsp;(x)&nbsp;(+&nbsp;x&nbsp;x))</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;c</i>.</"
"td><td><tt>(lambda&nbsp;(x&nbsp;y)&nbsp;(f&nbsp;x&nbsp;y))</tt>\n"
"</td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;d</i>.</td><td>\n"
"<p><tt>(lambda&nbsp;(x)<br>"
msgstr ""

#: start.html:1387
msgid ""
"&nbsp;&nbsp;(cons&nbsp;x&nbsp;(f&nbsp;x&nbsp;y)))</tt>\n"
"</p><p></p></td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;e</i>.</td><td>\n"
"<p><tt>(lambda&nbsp;(x)<br>"
msgstr ""

#: start.html:1389
msgid "&nbsp;&nbsp;(let&nbsp;([z&nbsp;(cons&nbsp;x&nbsp;y)])<br>"
msgstr ""

#: start.html:1393
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(x&nbsp;y&nbsp;z)))</tt>\n"
"</p><p></p></td></tr><tr valign=\"top\"><td><i>&nbsp;&nbsp;f</i>.</td><td>\n"
"<p><tt>(lambda&nbsp;(x)<br>"
msgstr ""

#: start.html:1395
msgid "&nbsp;&nbsp;(let&nbsp;([y&nbsp;(cons&nbsp;x&nbsp;y)])<br>"
msgstr ""

#: start.html:1398
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(x&nbsp;y&nbsp;z)))</tt>\n"
"</p><p></p></td></tr></tbody></table>"
msgstr ""

#: start.html:1400
msgctxt "start.html:1400"
msgid "<p>"
msgstr ""

#: start.html:1403
msgctxt "start.html:1403"
msgid "</p><p>"
msgstr ""

#: start.html:1405
msgid ""
"</p><h3><a name=\"g25\"></a><a name=\"./start:h6\"></a>Section 2.6. Top-"
"Level Definitions<a name=\"SECTGSTOPLEVEL\"></a></h3>"
msgstr ""
"</p><h3><a name=\"g25\"></a><a name=\"./start:h6\"></a>Section 2.6. "
"Определения Верхнего Уровня\n"
"<a name=\"SECTGSTOPLEVEL\"></a></h3>"

#: start.html:1418
msgid ""
"<p>\n"
"<a name=\"./start:s76\"></a>The <a name=\"./start:s77\"></a>variables bound "
"by <tt>let</tt> and <tt>lambda</tt>\n"
"expressions are not visible outside the bodies of these expressions.\n"
"Suppose you have created an object, perhaps a procedure, that must\n"
"be accessible anywhere, like <tt>+</tt> or <tt>cons</tt>.\n"
"What you need is a <i>top-level definition</i>, which may be established\n"
"with <a name=\"./start:s78\"></a><tt>define</tt>.\n"
"Top-level definitions, which are supported by most interactive Scheme\n"
"systems, are visible in every expression you enter,\n"
"except where shadowed by another binding."
msgstr ""
"<p>\n"
"<a name=\"./start:s76\"></a><a name=\"./start:s77\"></>Переменные, связанные "
"выражениями <tt>let</tt> и <tt>lambda</tt>,\n"
" не видны вне тел этих выражений.\n"
"Предположим, вы создали объект, вомзожно, процедуру, которая должна быть "
"доступна в любом месте,\n"
"например, <tt>+</tt> или <tt>cons</tt>.\n"
"Вам нужно <i>определиние верхнего уровня</i>, которое может быть "
"установлено\n"
"с помощью <a name=\"./start:s78\"></a><tt>define</tt>.\n"
"Определения верхнего уровня, которые поддерживаются большинством "
"интерактивных систем\n"
"Scheme, видны в каждом введенном вами выражении, за исключением случаев,\n"
"затенения их другой привязкой."

#: start.html:1422
msgid ""
"</p><p>\n"
"Let's establish a top-level definition of the <a name=\"./start:s79\"></"
"a><tt>double-any</tt>\n"
"procedure of the last section."
msgstr ""
"</p><p>\n"
"Давайте установим определение верхнего уровня для процедуры <a name=\"./"
"start:s79\"></a><tt>double-any</tt>\n"
"из последнего раздела."

#: start.html:1424
msgctxt "start.html:1424"
msgid "</p><p>"
msgstr ""

#: start.html:1426
msgctxt "start.html:1426"
msgid "</p><p><tt>(define&nbsp;double-any<br>"
msgstr ""

#: start.html:1428
msgctxt "start.html:1428"
msgid "&nbsp;&nbsp;(lambda&nbsp;(f&nbsp;x)<br>"
msgstr ""

#: start.html:1433
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(f&nbsp;x&nbsp;x)))</tt>\n"
"</p><p>The variable <tt>double-any</tt> now has the same status as <tt>cons</"
"tt>\n"
"or the name of any other primitive procedure.\n"
"We can use <tt>double-any</tt> as if it were a primitive procedure."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;(f&nbsp;x&nbsp;x)))</tt>\n"
"</p><p>Переменная <tt>double-any</tt> теперь имеет тот же статус, что и "
"<tt>cons</tt>\n"
"или имя любой другой примитивной процедуры,\n"
"как если бы <tt>double-any</tt> была примитивной процедурой."

#: start.html:1435
msgctxt "start.html:1435"
msgid "</p><p>"
msgstr ""

#: start.html:1437
msgid ""
"</p><p><tt>(double-any&nbsp;+&nbsp;10)&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;20<br>"
msgstr ""

#: start.html:1441
msgid ""
"(double-any&nbsp;cons&nbsp;'a)&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(a&nbsp;.&nbsp;a)</tt>\n"
"</p><p>A top-level definition may be established for any object, not just\n"
"for procedures."
msgstr ""
"(double-any&nbsp;cons&nbsp;'a)&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(a&nbsp;.&nbsp;a)</tt>\n"
"</p><p>Определение верхнего уровня может быть установлено для любого "
"объекта, \n"
"а не только для процедуры."

#: start.html:1443
msgctxt "start.html:1443"
msgid "</p><p>"
msgstr ""

#: start.html:1450
msgid ""
"</p><p><tt>(define&nbsp;sandwich&nbsp;\"peanut-butter-and-jelly\")\n"
"<br>\n"
"<br>\n"
"sandwich&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"\"peanut-butter-and-jelly\"</tt>\n"
"</p><p><a name=\"./start:s80\"></a>Most often, though, top-level definitions "
"are\n"
"used for procedures."
msgstr ""
"</p><p><tt>(define&nbsp;sandwich&nbsp;\"peanut-butter-and-jelly\")\n"
"<br>\n"
"<br>\n"
"sandwich&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"\"peanut-butter-and-jelly\"</tt>\n"
"</p><p><a name=\"./start:s80\"></a>Чаще всего, однако, определения верхнего "
"уровня\n"
"используются для процедур."

#: start.html:1454
msgid ""
"</p><p>\n"
"<a name=\"./start:s81\"></a>As suggested above, top-level definitions may be "
"shadowed\n"
"by <tt>let</tt> or <tt>lambda</tt> bindings."
msgstr ""
"</p><p>\n"
"<a name=\"./start:s81\"></a>Как было сказано выше, опредения верхнего уровня "
"могут быть\n"
"затенены привязками в выражениях <tt>let</tt> или <tt>lambda</tt>."

#: start.html:1456
msgctxt "start.html:1456"
msgid "</p><p>"
msgstr ""

#: start.html:1458
msgid "</p><p><tt>(define&nbsp;xyz&nbsp;'(x&nbsp;y&nbsp;z))<br>"
msgstr ""

#: start.html:1460
msgid "(let&nbsp;([xyz&nbsp;'(z&nbsp;y&nbsp;x)])<br>"
msgstr ""

#: start.html:1464
msgid ""
"&nbsp;&nbsp;xyz)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;(z&nbsp;y&nbsp;x)</tt>\n"
"</p><p>Variables with top-level definitions act almost as if they were "
"bound\n"
"by a <tt>let</tt> expression enclosing all of the expressions you type."
msgstr ""
"&nbsp;&nbsp;xyz)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;(z&nbsp;y&nbsp;x)</tt>\n"
"</p><p>Переменные определенные на верхнем уровне действуют почти также как "
"если бы \n"
"они были связаны выражением  <tt>let</tt> охватывающим все введенные вами\n"
"выражения."

#: start.html:1471
msgid ""
"</p><p>\n"
"<a name=\"defn:list\"></a>Given only the simple tools you have read about up "
"to this point,\n"
"it is already possible to define some of the primitive procedures\n"
"provided by Scheme and described later in this book.\n"
"If you completed the exercises from the last section, you should\n"
"already know how to define <a name=\"./start:s82\"></a><tt>list</tt>."
msgstr ""
"</p><p>\n"
"<a name=\"defn:list\"></a>Учитывая только простые инструменты, котрые\n"
"вы узнали до этого момента, уже можно определить некоторые из\n"
"примитивных процедур, предоставляемых Scheme и описанных ниже в этой\n"
"книге.\n"
"Если вы завершили упражнения из последнего раздела, вы уже должны знать,\n"
"как определить<a name=\"./start:s82\"></a><tt>список</tt>."

#: start.html:1473
msgctxt "start.html:1473"
msgid "</p><p>"
msgstr ""

#: start.html:1482
msgid ""
"</p><p><tt>(define&nbsp;list&nbsp;(lambda&nbsp;x&nbsp;x))</tt>\n"
"</p><p>Also, Scheme provides the abbreviations <a name=\"./start:s83\"></"
"a><tt>cadr</tt> and <a name=\"./start:s84\"></a><tt>cddr</tt> for\n"
"the compositions of <tt>car</tt> with <tt>cdr</tt> and <tt>cdr</tt> with "
"<tt>cdr</tt>.\n"
"That is, <tt>(cadr&nbsp;<i>list</i>)</tt> is equivalent to\n"
"<tt>(car&nbsp;(cdr&nbsp;<i>list</i>))</tt>, and, similarly,\n"
"<tt>(cddr&nbsp;<i>list</i>)</tt> is equivalent to\n"
"<tt>(cdr&nbsp;(cdr&nbsp;<i>list</i>))</tt>.\n"
"They are easily defined as follows."
msgstr ""
"</p><p><tt>(define&nbsp;list&nbsp;(lambda&nbsp;x&nbsp;x))</tt>\n"
"</p><p>Кроме того, Scheme предоставляет абревиатуры <a name=\"./start:"
"s83\"></a><tt>cadr</tt> и <a name=\"./start:s84\"></a><tt>cddr</tt> для "
"композиций <tt>car</tt> с <tt>cdr</tt> и <tt>cdr</tt> с <tt>cdr</tt>.\n"
"То есть, <tt>(cadr&nbsp;<i>list</i>)</tt> эквивалентен\n"
"<tt>(car&nbsp;(cdr&nbsp;<i>list</i>))</tt>, и, аналогично,\n"
"<tt>(cddr&nbsp;<i>list</i>)</tt> эквивалентен\n"
"<tt>(cdr&nbsp;(cdr&nbsp;<i>list</i>))</tt>.\n"
"Они легко определяются следующим образом."

#: start.html:1484
msgctxt "start.html:1484"
msgid "</p><p>"
msgstr ""

#: start.html:1486
msgid "</p><p><tt>(define&nbsp;cadr<br>"
msgstr ""

#: start.html:1488
msgctxt "start.html:1488"
msgid "&nbsp;&nbsp;(lambda&nbsp;(x)<br>"
msgstr ""

#: start.html:1493
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(car&nbsp;(cdr&nbsp;x))))\n"
"<br>\n"
"<br>\n"
"(define&nbsp;cddr<br>"
msgstr ""

#: start.html:1495
msgctxt "start.html:1495"
msgid "&nbsp;&nbsp;(lambda&nbsp;(x)<br>"
msgstr ""

#: start.html:1499
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(cdr&nbsp;(cdr&nbsp;x))))</tt>\n"
"</p><p>\n"
"</p><p><tt>(cadr&nbsp;'(a&nbsp;b&nbsp;c))&nbsp;<img src=\"./start_files/0.gif"
"\" alt=\"&lt;graphic&gt;\">&nbsp;b<br>"
msgstr ""

#: start.html:1508
msgid ""
"(cddr&nbsp;'(a&nbsp;b&nbsp;c))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(c)</tt>\n"
"</p><p>Any definition <tt>(define&nbsp;<i>var</i>&nbsp;<i>expr</i>)</tt> "
"where <tt><i>expr</i></tt> is a\n"
"<tt>lambda</tt> expression can be written in a shorter form that suppresses\n"
"the <tt>lambda</tt>.\n"
"The exact syntax depends upon the format of the <tt>lambda</tt> "
"expression's\n"
"formal parameter specifier, i.e., whether it is a proper list of\n"
"variables, a single variable, or an improper list of variables.\n"
"A definition of the form"
msgstr ""
"(cddr&nbsp;'(a&nbsp;b&nbsp;c))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(c)</tt>\n"
"</p><p>Любое определение <tt>(define&nbsp;<i>var</i>&nbsp;<i>expr</i>)</tt> "
"где <tt><i>expr</i></tt> \n"
"является <tt>lambda</tt> выражением, может быть записано в более короткой "
"форме которая скрывает\n"
"<tt>lambda</tt>.\n"
"Точный синтаксис зависит от формата формального спецификатора параметров "
"<tt>lambda</tt> выражения,\n"
"т.е., является ли он правильным списком переменных, или одной переменной, "
"или неправильным\n"
"списком переменных. Определение формы"

#: start.html:1510
msgctxt "start.html:1510"
msgid "</p><p>"
msgstr ""

#: start.html:1512
msgctxt "start.html:1512"
msgid "</p><p><tt>(define&nbsp;<i>var<sub>0</sub></i><br>"
msgstr ""

#: start.html:1514
msgid ""
"&nbsp;&nbsp;(lambda&nbsp;(<i>var<sub>1</sub></i>&nbsp;...&nbsp;<i>var<sub>n</"
"sub></i>)<br>"
msgstr ""

#: start.html:1517
msgctxt "start.html:1517"
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;<i>e<sub>1</sub></i>&nbsp;<i>e<sub>2</sub></"
"i>&nbsp;...))</tt>\n"
"</p><p>may be abbreviated"
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;<i>e<sub>1</sub></i>&nbsp;<i>e<sub>2</sub></"
"i>&nbsp;...))</tt>\n"
"</p><p>может быть сокращено"

#: start.html:1519
msgctxt "start.html:1519"
msgid "</p><p>"
msgstr ""

#: start.html:1521
msgid ""
"</p><p><tt>(define&nbsp;(<i>var<sub>0</sub></i>&nbsp;<i>var<sub>1</sub></"
"i>&nbsp;...&nbsp;<i>var<sub>n</sub></i>)<br>"
msgstr ""

#: start.html:1524
msgid ""
"&nbsp;&nbsp;<i>e<sub>1</sub></i>&nbsp;<i>e<sub>2</sub></i>&nbsp;...)</tt>\n"
"</p><p>while"
msgstr ""
"&nbsp;&nbsp;<i>e<sub>1</sub></i>&nbsp;<i>e<sub>2</sub></i>&nbsp;...)</tt>\n"
"</p><p>в то время как"

#: start.html:1526
msgctxt "start.html:1526"
msgid "</p><p>"
msgstr ""

#: start.html:1528
msgctxt "start.html:1528"
msgid "</p><p><tt>(define&nbsp;<i>var<sub>0</sub></i><br>"
msgstr ""

#: start.html:1530
msgid "&nbsp;&nbsp;(lambda&nbsp;<i>var<sub>r</sub></i><br>"
msgstr ""

#: start.html:1533
msgctxt "start.html:1533"
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;<i>e<sub>1</sub></i>&nbsp;<i>e<sub>2</sub></"
"i>&nbsp;...))</tt>\n"
"</p><p>may be abbreviated"
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;<i>e<sub>1</sub></i>&nbsp;<i>e<sub>2</sub></"
"i>&nbsp;...))</tt>\n"
"</p><p>может быть сокращено"

#: start.html:1535
msgctxt "start.html:1535"
msgid "</p><p>"
msgstr ""

#: start.html:1537
msgid ""
"</p><p><tt>(define&nbsp;(<i>var<sub>0</sub></i>&nbsp;.&nbsp;<i>var<sub>r</"
"sub></i>)<br>"
msgstr ""

#: start.html:1540
msgid ""
"&nbsp;&nbsp;<i>e<sub>1</sub></i>&nbsp;<i>e<sub>2</sub></i>&nbsp;...)</tt>\n"
"</p><p>and"
msgstr ""
"&nbsp;&nbsp;<i>e<sub>1</sub></i>&nbsp;<i>e<sub>2</sub></i>&nbsp;...)</tt>\n"
"</p><p>и"

#: start.html:1542
msgctxt "start.html:1542"
msgid "</p><p>"
msgstr ""

#: start.html:1544
msgctxt "start.html:1544"
msgid "</p><p><tt>(define&nbsp;<i>var<sub>0</sub></i><br>"
msgstr ""

#: start.html:1546
msgid ""
"&nbsp;&nbsp;(lambda&nbsp;(<i>var<sub>1</sub></i>&nbsp;...&nbsp;<i>var<sub>n</"
"sub></i>&nbsp;.&nbsp;<i>var<sub>r</sub></i>)<br>"
msgstr ""

#: start.html:1549
msgctxt "start.html:1549"
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;<i>e<sub>1</sub></i>&nbsp;<i>e<sub>2</sub></"
"i>&nbsp;...))</tt>\n"
"</p><p>may be abbreviated"
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;<i>e<sub>1</sub></i>&nbsp;<i>e<sub>2</sub></"
"i>&nbsp;...))</tt>\n"
"</p><p>может быть сокращено"

#: start.html:1551
msgctxt "start.html:1551"
msgid "</p><p>"
msgstr ""

#: start.html:1553
msgid ""
"</p><p><tt>(define&nbsp;(<i>var<sub>0</sub></i>&nbsp;<i>var<sub>1</sub></"
"i>&nbsp;...&nbsp;<i>var<sub>n</sub></i>&nbsp;.&nbsp;<i>var<sub>r</sub></"
"i>)<br>"
msgstr ""

#: start.html:1557
msgid ""
"&nbsp;&nbsp;<i>e<sub>1</sub></i>&nbsp;<i>e<sub>2</sub></i>&nbsp;...)</tt>\n"
"</p><p>For example, the definitions of <a name=\"./start:s85\"></a><tt>cadr</"
"tt> and <a name=\"./start:s86\"></a><tt>list</tt> might be written\n"
"as follows."
msgstr ""
"&nbsp;&nbsp;<i>e<sub>1</sub></i>&nbsp;<i>e<sub>2</sub></i>&nbsp;...)</tt>\n"
"</p><p>Например, определения <a name=\"./start:s85\"></a><tt>cadr</tt> и <a "
"name=\"./start:s86\"></a><tt>list</tt> могут быть записаны следующим образом."

#: start.html:1559
msgctxt "start.html:1559"
msgid "</p><p>"
msgstr ""

#: start.html:1561
msgid "</p><p><tt>(define&nbsp;(cadr&nbsp;x)<br>"
msgstr ""

#: start.html:1574
msgid ""
"&nbsp;&nbsp;(car&nbsp;(cdr&nbsp;x)))\n"
"<br>\n"
"<br>\n"
"(define&nbsp;(list&nbsp;.&nbsp;x)&nbsp;x)</tt>\n"
"</p><p>This book does not often employ this alternative syntax.\n"
"Although it is shorter, it tends to mask the reality that procedures\n"
"are not intimately tied to variables, or names, as they are in many\n"
"other languages.\n"
"This syntax is often referred to, somewhat pejoratively,\n"
"as the <a name=\"./start:s87\"></a>\"defun\" syntax for <tt>define</tt>, "
"after the\n"
"<tt>defun</tt> form provided by Lisp languages in which procedures are more\n"
"closely tied to their names."
msgstr ""
"&nbsp;&nbsp;(car&nbsp;(cdr&nbsp;x)))\n"
"<br>\n"
"<br>\n"
"(define&nbsp;(list&nbsp;.&nbsp;x)&nbsp;x)</tt>\n"
"</p><p>В этой книге не часто используется альтернативный синтаксис.\n"
"Хотя он короче, он как правило маскирует реальность, что процедуры не\n"
"тесно связаны с переменными или именами, как это происходит\n"
"на многих других языках.\n"
"Этот синтаксис часто упоминается, несколько уничижительно, как\n"
"<a name=\"./start:s87\"></a>\"defun\" синтаксис для <tt>define</tt>, после\n"
"<tt>defun</tt> формы предоставляемой языками Lisp, в которых процедуры\n"
"более тесно связаны с их именами."

#: start.html:1582
msgid ""
"</p><p>\n"
"</p><p>Top-level definitions make it easier for us to experiment with a\n"
"procedure interactively\n"
"because we need not retype the procedure each time it is used.\n"
"Let's try defining a somewhat more complicated variation of <tt>double-any</"
"tt>,\n"
"one that turns an \"ordinary\" two-argument procedure into a \"doubling\"\n"
"one-argument <a name=\"./start:s88\"></a>procedure."
msgstr ""
"</p><p>\n"
"</p><p>Определения верхнего уровня облегчают нам эксперементы с процедурами\n"
"в интерактивном режиме, поскольку нам не нужно повторять ввод процедур "
"каждый\n"
"раз, когда они используются.\n"
"Давайте попробуем определить несколько более сложный вариант <tt>double-any</"
"tt>,\n"
"который превращает \"обычную\" процедуру двух аргументов в процедуру "
"\"удвоения\"\n"
"одного аргумента <a name=\"./start:s88\"></a>."

#: start.html:1584
msgctxt "start.html:1584"
msgid "</p><p>"
msgstr ""

#: start.html:1586
msgid "</p><p><tt>(define&nbsp;doubler<br>"
msgstr ""

#: start.html:1588
msgid "&nbsp;&nbsp;(lambda&nbsp;(f)<br>"
msgstr ""

#: start.html:1598
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;(x)&nbsp;(f&nbsp;x&nbsp;x))))</tt>\n"
"</p><p><tt>doubler</tt> accepts one argument, <tt>f</tt>, which must be a\n"
"procedure that accepts two arguments.\n"
"The procedure returned by <tt>doubler</tt> accepts one argument, which\n"
"it uses for both arguments in an application of <tt>f</tt>.\n"
"We can define, with <tt>doubler</tt>, the simple\n"
"<a name=\"./start:s89\"></a><tt>double</tt> and\n"
"<a name=\"./start:s90\"></a><tt>double-cons</tt> procedures\n"
"of the last section."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;(x)&nbsp;(f&nbsp;x&nbsp;x))))</tt>\n"
"</p><p><tt>doubler</tt> принимает один аргумент, <tt>f</tt>, который должен\n"
"быть процедурой, которая принимает два аргумента.\n"
"Процедура возвращаемая <tt>doubler</tt> принимает один аргумент, который \n"
"он использует для обоих аргументов при применении <tt>f</tt>.\n"
"Мы можем определить, с <tt>doubler</tt>, простые процедуры\n"
"<a name=\"./start:s89\"></a><tt>double</tt> и\n"
"<a name=\"./start:s90\"></a><tt>double-cons</tt> из последнего\n"
"раздела."

#: start.html:1600
msgctxt "start.html:1600"
msgid "</p><p>"
msgstr ""

#: start.html:1602
msgid "</p><p><tt>(define&nbsp;double&nbsp;(doubler&nbsp;+))<br>"
msgstr ""

#: start.html:1607
msgid ""
"(double&nbsp;13/2)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;13\n"
"<br>\n"
"<br>\n"
"(define&nbsp;double-cons&nbsp;(doubler&nbsp;cons))<br>"
msgstr ""

#: start.html:1610
msgid ""
"(double-cons&nbsp;'a)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;(a&nbsp;.&nbsp;a)</tt>\n"
"</p><p>We can also define <tt>double-any</tt> with <tt>doubler</tt>."
msgstr ""
"(double-cons&nbsp;'a)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;(a&nbsp;.&nbsp;a)</tt>\n"
"</p><p>Мы также можем определить <tt>double-any</tt> с <tt>doubler</tt>."

#: start.html:1612
msgctxt "start.html:1612"
msgid "</p><p>"
msgstr ""

#: start.html:1614
msgctxt "start.html:1614"
msgid "</p><p><tt>(define&nbsp;double-any<br>"
msgstr ""

#: start.html:1616
msgctxt "start.html:1616"
msgid "&nbsp;&nbsp;(lambda&nbsp;(f&nbsp;x)<br>"
msgstr ""

#: start.html:1622
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;((doubler&nbsp;f)&nbsp;x)))</tt>\n"
"</p><p>Within <tt>double</tt> and\n"
"<tt>double-cons</tt>, <tt>f</tt> has the appropriate value, i.e., <tt>+</"
"tt>\n"
"or <tt>cons</tt>, even though the procedures are clearly applied outside "
"the\n"
"scope of <tt>f</tt>."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;((doubler&nbsp;f)&nbsp;x)))</tt>\n"
"</p><p>В пределах <tt>double</tt> и\n"
"<tt>double-cons</tt>, <tt>f</tt> имеет соответствующее значение, т.е., <tt>"
"+</tt>\n"
"или <tt>cons</tt>, хотя процедуры явно применяются вне области <tt>f</tt>."

#: start.html:1628
msgid ""
"</p><p>\n"
"</p><p>What happens if you attempt to use a variable that is not bound by a\n"
"<tt>let</tt> or <tt>lambda</tt> expression and that does not have a top-"
"level\n"
"definition?\n"
"Try using the variable <tt>i-am-not-defined</tt> to see what happens."
msgstr ""
"</p><p>\n"
"</p><p>Что произойдет, если вы попытаетесь использовать переменную, не "
"связанную\n"
"выражениеями <tt>let</tt> или <tt>lambda</tt> и которая не имеет "
"определения\n"
"верхнего уровня?\n"
"Попробуйте использовать переменную <tt>i-am-not-defined</tt> чтобы увидеть,\n"
"что произойдет."

#: start.html:1630
msgctxt "start.html:1630"
msgid "</p><p>"
msgstr ""

#: start.html:1635
msgid ""
"</p><p><tt>(i-am-not-defined&nbsp;3)</tt>\n"
"</p><p>Most Scheme systems print a message\n"
"indicating that an unbound- or undefined-variable exception\n"
"has occurred."
msgstr ""
"</p><p><tt>(i-am-not-defined&nbsp;3)</tt>\n"
"</p><p>Большинство систем Scheme напечатают сообщение о том,\n"
"что произошло исключение несвязанной или неопределенной переменной."

#: start.html:1643
msgid ""
"</p><p>\n"
"The system should not, however, complain\n"
"about the appearance of an undefined variable\n"
"within a <tt>lambda</tt> expression, until and unless the resulting "
"procedure\n"
"is applied.\n"
"The following should <i>not</i> cause an exception, even though we have not "
"yet\n"
"established a top-level definition of <tt>proc2</tt>."
msgstr ""
"</p><p>\n"
"Однако система не должна жаловаться на появление неопределенной переменной\n"
"в <tt>lambda</tt> выражении, пока результирующая процедура не будет\n"
"применена.\n"
"Следующее <i>НЕ</i> должно вызвать исключения, даже если мы еще не "
"установили\n"
"определение верхнего уровня для <tt>proc2</tt>."

#: start.html:1645
msgctxt "start.html:1645"
msgid "</p><p>"
msgstr ""

#: start.html:1647
msgid "</p><p><tt>(define&nbsp;proc1<br>"
msgstr ""

#: start.html:1649
msgctxt "start.html:1649"
msgid "&nbsp;&nbsp;(lambda&nbsp;(x&nbsp;y)<br>"
msgstr ""

#: start.html:1654
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(proc2&nbsp;y&nbsp;x)))</tt>\n"
"</p><p>If you try to apply <tt>proc1</tt> before defining <tt>proc2</tt>, "
"you should get\n"
"a undefined exception message.\n"
"Let's give <tt>proc2</tt> a top-level definition and try <tt>proc1</tt>."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;(proc2&nbsp;y&nbsp;x)))</tt>\n"
"</p><p>Если попробовать применить <tt>proc1</tt> перед определением "
"<tt>proc2</tt>, вы должны получить\n"
"сообщение об исключении неопределенная переменная.\n"
"Давайте дадим определение верхнего уровня для <tt>proc2</tt> и повторим "
"вызов <tt>proc1</tt>."

#: start.html:1656
msgctxt "start.html:1656"
msgid "</p><p>"
msgstr ""

#: start.html:1658
msgid "</p><p><tt>(define&nbsp;proc2&nbsp;cons)<br>"
msgstr ""

#: start.html:1668
msgid ""
"(proc1&nbsp;'a&nbsp;'b)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;(b&nbsp;.&nbsp;a)</tt>\n"
"</p><p>When you define <tt>proc1</tt>, the system accepts your promise to "
"define\n"
"<tt>proc2</tt>, and does not complain unless you use <tt>proc1</tt> before\n"
"defining <tt>proc2</tt>.\n"
"This allows you to define procedures in any order you please.\n"
"This is especially useful when you are trying to organize a file full of\n"
"procedure definitions in a way that makes your program more readable.\n"
"It is necessary when two procedures defined at top level depend upon\n"
"each other; we will see some examples of this later."
msgstr ""
"(proc1&nbsp;'a&nbsp;'b)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;(b&nbsp;.&nbsp;a)</tt>\n"
"</p><p>Когда вы определяете <tt>proc1</tt>, система принимает ваше обещание "
"определить\n"
"<tt>proc2</tt>, и не жалуется, если вы не используете <tt>proc1</tt> до "
"определенения <tt>proc2</tt>.\n"
"Это позволяет вам определять процедуры в любом порядке.\n"
"Это особенно полезно, когда вы пытаетесь организовать файл, полный описаний "
"процедур,\n"
"таким образом, чтобы ваша программа была более читаемой.\n"
"Это необходимо, когда две процедуры, определенные на верхнем уровне,\n"
"зависят друг от друга; мы увидим несполько примеров этого позже."

#: start.html:1670
msgctxt "start.html:1670"
msgid "</p><p>"
msgstr ""

#: start.html:1673
msgid ""
"</p><h4>Exercise <a name=\"g26\"></a>2.6.1</h4>\n"
"<a name=\"./start:s91\"></a>What would happen if you were to type"
msgstr ""
"</p><h4>Упражнение <a name=\"g26\"></a>2.6.1</h4>\n"
"<a name=\"./start:s91\"></a>Что произойдет, еси вы наберете"

#: start.html:1675
msgctxt "start.html:1675"
msgid "<p>"
msgstr ""

#: start.html:1679
msgid ""
"</p><p><tt>(double-any&nbsp;double-any&nbsp;double-any)</tt>\n"
"</p><p>given the definition of <tt>double-any</tt> from the beginning of "
"this\n"
"section?"
msgstr ""
"</p><p><tt>(double-any&nbsp;double-any&nbsp;double-any)</tt>\n"
"</p><p>учитывая определение <tt>double-any</tt> из начала этого раздела."

#: start.html:1681
msgctxt "start.html:1681"
msgid "</p><p>"
msgstr ""

#: start.html:1684
msgctxt "start.html:1684"
msgid "</p><p>"
msgstr ""

#: start.html:1697
msgid ""
"</p><h4>Exercise <a name=\"g27\"></a>2.6.2</h4>\n"
"<a name=\"./start:s92\"></a>A more elegant (though possibly less efficient) "
"way to define <a name=\"./start:s93\"></a><tt>cadr</tt>\n"
"and <a name=\"./start:s94\"></a><tt>cddr</tt> than given in this\n"
"section is to define a procedure that composes two procedures to create\n"
"a third.\n"
"Write the procedure <a name=\"./start:s95\"></a><tt>compose</tt>, such that\n"
"<tt>(compose&nbsp;<i>p<sub>1</sub></i>&nbsp;<i>p<sub>2</sub></i>)</tt> is "
"the composition of\n"
"<tt><i>p<sub>1</sub></i></tt> and <tt><i>p<sub>2</sub></i></tt> (assuming "
"both take one argument).\n"
"That is, <tt>(compose&nbsp;<i>p<sub>1</sub></i>&nbsp;<i>p<sub>2</sub></i>)</"
"tt> should return a new\n"
"procedure of one argument that applies <tt><i>p<sub>1</sub></i></tt> to the "
"result of\n"
"applying <tt><i>p<sub>2</sub></i></tt> to the argument.\n"
"Use <tt>compose</tt> to define <tt>cadr</tt> and <tt>cddr</tt>."
msgstr ""
"</p><h4>Упражнение <a name=\"g27\"></a>2.6.2</h4>\n"
"<a name=\"./start:s92\"></a>Более элегантный (хотя, возможно, менее "
"эффективный) способ\n"
"определения<a name=\"./start:s93\"></a><tt>cadr</tt>\n"
"и <a name=\"./start:s94\"></a><tt>cddr</tt> чем приведенный в этом разделе,\n"
"заключается в определении процедуры, которая состоит из двух процедур для "
"создания\n"
"третьей.\n"
"Напишите процедуру <a name=\"./start:s95\"></a><tt>compose</tt>, такую что "
"б\n"
"<tt>(compose&nbsp;<i>p<sub>1</sub></i>&nbsp;<i>p<sub>2</sub></i>)</tt> "
"являлось композицией\n"
"<tt><i>p<sub>1</sub></i></tt> and <tt><i>p<sub>2</sub></i></tt> "
"(предполагая, что обе они\n"
"имеют один аргумент).\n"
"То есть, <tt>(compose&nbsp;<i>p<sub>1</sub></i>&nbsp;<i>p<sub>2</sub></i>)</"
"tt> должно возвращать\n"
"новую процедуру одного аргумента, которая применяет <tt><i>p<sub>1</sub></"
"i></tt> к результату\n"
"применения <tt><i>p<sub>2</sub></i></tt> к аргументу.\n"
"Используйте <tt>compose</tt>для определения <tt>cadr</tt> и <tt>cddr</tt>."

#: start.html:1699
msgctxt "start.html:1699"
msgid "<p>"
msgstr ""

#: start.html:1702
msgctxt "start.html:1702"
msgid "</p><p>"
msgstr ""

#: start.html:1711
msgid ""
"</p><h4>Exercise <a name=\"g28\"></a>2.6.3</h4>\n"
"<a name=\"./start:s96\"></a>Scheme also provides\n"
"<a name=\"./start:s97\"></a><tt>caar</tt>, <tt>cdar</tt>, <tt>caaar</tt>, "
"<tt>caadr</tt>,\n"
"and so on, with any combination of up to four <tt>a</tt>'s (representing\n"
"<tt>car</tt>) and <tt>d</tt>'s (representing <tt>cdr</tt>) between the "
"<tt>c</tt>\n"
"and the <tt>r</tt> (see Section&nbsp;<a href=\"objects.html#g109\">6.3</"
"a>).\n"
"Define each of these with the <tt>compose</tt> procedure of the preceding\n"
"exercise."
msgstr ""
"</p><h4>Exercise <a name=\"g28\"></a>2.6.3</h4>\n"
"<a name=\"./start:s96\"></a>Scheme также предоставляет\n"
"<a name=\"./start:s97\"></a><tt>caar</tt>, <tt>cdar</tt>, <tt>caaar</tt>, "
"<tt>caadr</tt>,\n"
"и т.д. в любой комбинации до четырех<tt>a</tt>'s (представляющих\n"
"<tt>car</tt>) и <tt>d</tt> (представляющих <tt>cdr</tt>) между <tt>c</tt>\n"
"и  <tt>r</tt> (см Раздел&nbsp;<a href=\"objects.html#g109\">6.3</a>).\n"
"Определите каждую из них с помощью процедуры <tt>compose</tt>, описанную в "
"предыдущем \n"
"упражнении."

#: start.html:1713
msgctxt "start.html:1713"
msgid "<p>"
msgstr ""

#: start.html:1716
msgctxt "start.html:1716"
msgid "</p><p>"
msgstr ""

#: start.html:1718
msgid ""
"</p><h3><a name=\"g29\"></a><a name=\"./start:h7\"></a>Section 2.7. "
"Conditional Expressions<a name=\"SECTGSCONDITIONALS\"></a></h3>"
msgstr ""
"</p><h3><a name=\"g29\"></a><a name=\"./start:h7\"></a>Section 2.7. Условные "
"Выражения<a name=\"SECTGSCONDITIONALS\"></a></h3>"

#: start.html:1730
msgid ""
"<p>\n"
"So far we have considered expressions that perform a given task\n"
"unconditionally.\n"
"Suppose that we wish to write the procedure <a name=\"./start:s98\"></"
"a><tt>abs</tt>.\n"
"If its argument <i>x</i> is negative, <tt>abs</tt>\n"
"returns -<i>x</i>; otherwise, it returns <i>x</i>.\n"
"The most straightforward way to write <tt>abs</tt> is to determine\n"
"whether the argument is negative and if so negate it, using the\n"
"<a name=\"./start:s99\"></a><tt>if</tt> syntactic form."
msgstr ""
"<p>\n"
"До сих пор мы рассматривали выражения, выполняющие получаемую задачу\n"
"безусловно.\n"
"Предположим, что мы хотим написать процедуру <a name=\"./start:s98\"></"
"a><tt>abs</tt>.\n"
"Если ее аргумент <i>x</i> отритцательный, <tt>abs</tt>\n"
"возвращает -<i>x</i>; иначе, она вернет <i>x</i>.\n"
"Самый простой способ написать <tt>abs</tt> это определить,\n"
"является ли аргумент отритцательным или нет и если он отритцательный\n"
"вернуть его отритцание, используя для этого синтаксическую форму \n"
"<a name=\"./start:s99\"></a><tt>if</tt>."

#: start.html:1733
msgctxt "start.html:1733"
msgid "</p><p>"
msgstr ""

#: start.html:1735
msgctxt "start.html:1735"
msgid "</p><p><tt>(define&nbsp;abs<br>"
msgstr ""

#: start.html:1737
msgctxt "start.html:1737"
msgid "&nbsp;&nbsp;(lambda&nbsp;(n)<br>"
msgstr ""

#: start.html:1739
msgctxt "start.html:1739"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(&lt;&nbsp;n&nbsp;0)<br>"
msgstr ""

#: start.html:1741
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(-&nbsp;0&nbsp;n)<br>"
msgstr ""

#: start.html:1746
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n)))\n"
"<br>\n"
"<br>\n"
"(abs&nbsp;77)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;77<br>"
msgstr ""

#: start.html:1755
msgid ""
"(abs&nbsp;-77)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;77</tt>\n"
"</p><p>An <tt>if</tt> expression has the form\n"
"<tt>(if&nbsp;<i>test</i>&nbsp;<i>consequent</i>&nbsp;<i>alternative</i>)</"
"tt>, where\n"
"<tt><i>consequent</i></tt> is the expression to evaluate if <tt><i>test</i></"
"tt> is true\n"
"and \n"
"<tt><i>alternative</i></tt> is the expression to evaluate if <tt><i>test</"
"i></tt> is false.\n"
"In the expression above, <tt><i>test</i></tt> is <tt>(&lt;&nbsp;n&nbsp;0)</"
"tt>, <tt><i>consequent</i></tt>\n"
"is <tt>(-&nbsp;0&nbsp;n)</tt>, and <tt><i>alternative</i></tt> is <tt>n</tt>."
msgstr ""
"(abs&nbsp;-77)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;77</tt>\n"
"</p><p>Выражение <tt>if</tt> имеет форму\n"
"<tt>(if&nbsp;<i>test</i>&nbsp;<i>consequent</i>&nbsp;<i>alternative</i>)</"
"tt>, где\n"
"<tt><i>consequent</i></tt> это выражение вычисляемое если <tt><i>test</i></"
"tt> равно истине\n"
"и  вычисялемое выражение <tt><i>alternative</i></tt> если  <tt><i>test</i></"
"tt> равен лжи.\n"
"В вышеприведенном выражении <tt><i>test</i></tt> это <tt>(&lt;&nbsp;"
"n&nbsp;0)</tt>, <tt><i>consequent</i></tt>\n"
"это <tt>(-&nbsp;0&nbsp;n)</tt>, и <tt><i>alternative</i></tt> это <tt>n</tt>."

#: start.html:1759
msgid ""
"</p><p>\n"
"The procedure <tt>abs</tt> could be written in a variety of other ways.\n"
"Any of the following are valid definitions of <tt>abs</tt>."
msgstr ""
"</p><p>\n"
"Процедура <tt>abs</tt> может ыбть написана и множеством других способов.\n"
"Любое из следующих является допустимым определением <tt>abs</tt>."

#: start.html:1761
msgctxt "start.html:1761"
msgid "</p><p>"
msgstr ""

#: start.html:1763
msgctxt "start.html:1763"
msgid "</p><p><tt>(define&nbsp;abs<br>"
msgstr ""

#: start.html:1765
msgctxt "start.html:1765"
msgid "&nbsp;&nbsp;(lambda&nbsp;(n)<br>"
msgstr ""

#: start.html:1767
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(&gt;=&nbsp;n&nbsp;0)<br>"
msgstr ""

#: start.html:1769
msgctxt "start.html:1769"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n<br>"
msgstr ""

#: start.html:1774
msgctxt "start.html:1774"
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(-&nbsp;0&nbsp;n))))\n"
"<br>\n"
"<br>\n"
"(define&nbsp;abs<br>"
msgstr ""

#: start.html:1776
msgctxt "start.html:1776"
msgid "&nbsp;&nbsp;(lambda&nbsp;(n)<br>"
msgstr ""

#: start.html:1778
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(not&nbsp;(&lt;&nbsp;n&nbsp;0))<br>"
msgstr ""

#: start.html:1780
msgctxt "start.html:1780"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n<br>"
msgstr ""

#: start.html:1785
msgctxt "start.html:1785"
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(-&nbsp;0&nbsp;n))))\n"
"<br>\n"
"<br>\n"
"(define&nbsp;abs<br>"
msgstr ""

#: start.html:1787
msgctxt "start.html:1787"
msgid "&nbsp;&nbsp;(lambda&nbsp;(n)<br>"
msgstr ""

#: start.html:1789
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(or&nbsp;(&gt;&nbsp;n&nbsp;0)&nbsp;(=&nbsp;"
"n&nbsp;0))<br>"
msgstr ""

#: start.html:1791
msgctxt "start.html:1791"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n<br>"
msgstr ""

#: start.html:1796
msgctxt "start.html:1796"
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(-&nbsp;0&nbsp;n))))\n"
"<br>\n"
"<br>\n"
"(define&nbsp;abs<br>"
msgstr ""

#: start.html:1798
msgctxt "start.html:1798"
msgid "&nbsp;&nbsp;(lambda&nbsp;(n)<br>"
msgstr ""

#: start.html:1800
msgctxt "start.html:1800"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(=&nbsp;n&nbsp;0)<br>"
msgstr ""

#: start.html:1802
msgctxt "start.html:1802"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0<br>"
msgstr ""

#: start.html:1804
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(&lt;&nbsp;"
"n&nbsp;0)<br>"
msgstr ""

#: start.html:1806
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(-"
"&nbsp;0&nbsp;n)<br>"
msgstr ""

#: start.html:1811
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"n))))\n"
"<br>\n"
"<br>\n"
"(define&nbsp;abs<br>"
msgstr ""

#: start.html:1813
msgctxt "start.html:1813"
msgid "&nbsp;&nbsp;(lambda&nbsp;(n)<br>"
msgstr ""

#: start.html:1815
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;((if&nbsp;(&gt;=&nbsp;n&nbsp;0)&nbsp;+&nbsp;-)<br>"
msgstr ""

#: start.html:1817
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0<br>"
msgstr ""

#: start.html:1828
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n)))</tt>\n"
"</p><p>The first of these definitions asks if <tt>n</tt> is greater\n"
"than or equal to zero, inverting the test.\n"
"The second asks if <tt>n</tt> is not less than zero, using the procedure\n"
"<a name=\"./start:s100\"></a><tt>not</tt> with <tt>&lt;</tt>.\n"
"The third asks if <tt>n</tt> is greater than zero or <tt>n</tt> is equal to\n"
"zero, using the syntactic form <a name=\"./start:s101\"></a><tt>or</tt>.\n"
"The fourth treats zero separately, though there is no benefit in doing so.\n"
"The fifth is somewhat tricky; <tt>n</tt> is either added to or subtracted "
"from\n"
"zero, depending upon whether <tt>n</tt> is greater than or equal to zero."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n)))</tt>\n"
"</p><p>В первом из этих определений запрашивается, если <tt>n</tt> больше\n"
"или равно нулю, инвертируя test.\n"
"Во втором проверяется запрашивается если <tt>n</tt> не меньше нуля, "
"используя\n"
"процедуру <a name=\"./start:s100\"></a><tt>not</tt> с <tt>&lt;</tt>.\n"
"Третья проверяет, если <tt>n</tt>  больше нуля или <tt>n</tt> равно нулю,\n"
"используя синтаксическую форму  <a name=\"./start:s101\"></a><tt>or</tt>.\n"
"Четвертое проверяет ноль отдельно, хотя в этом и нет никакой пользы.\n"
"Пятая несколько сложная; <tt>n</tt> либо добавляется, либо вычитается из "
"нуля,\n"
"в зависимо от того  <tt>n</tt> больше или равно нулю."

#: start.html:1833
msgid ""
"</p><p>\n"
"Why is <a name=\"./start:s102\"></a><tt>if</tt> a syntactic form and not a "
"procedure?\n"
"In order to answer this, let's revisit the definition of\n"
"<tt>reciprocal</tt> from the first section of this chapter."
msgstr ""
"</p><p>\n"
"Почему <a name=\"./start:s102\"></a><tt>if</tt> это синтаксическая форма а "
"не процедура?\n"
"Чтобы ответить на этот вопрос, давайте перейдем к определению\n"
"<tt>reciprocal</tt> из первого раздела этой главы."

#: start.html:1835
msgctxt "start.html:1835"
msgid "</p><p>"
msgstr ""

#: start.html:1837
msgctxt "start.html:1837"
msgid "</p><p><tt>(define&nbsp;reciprocal<br>"
msgstr ""

#: start.html:1839
msgctxt "start.html:1839"
msgid "&nbsp;&nbsp;(lambda&nbsp;(n)<br>"
msgstr ""

#: start.html:1841
msgctxt "start.html:1841"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(=&nbsp;n&nbsp;0)<br>"
msgstr ""

#: start.html:1843
msgctxt "start.html:1843"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"oops!\"<br>"
msgstr ""

#: start.html:1855
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(/&nbsp;1&nbsp;n))))</tt>\n"
"</p><p>The second argument to the division procedure should not be zero,\n"
"since the result is mathematically undefined.\n"
"Our definition of <tt>reciprocal</tt> avoids this problem by\n"
"testing for zero before dividing.\n"
"Were <tt>if</tt> a procedure, its arguments (including <tt>(/&nbsp;1&nbsp;"
"n)</tt>)\n"
"would be evaluated before it had a chance to choose between the\n"
"consequent and alternative.\n"
"Like <tt>quote</tt>, which does not evaluate its only subexpression,\n"
"<tt>if</tt> does not evaluate all of its subexpressions and so cannot\n"
"be a procedure."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(/&nbsp;1&nbsp;n))))</tt>\n"
"</p><p>Второй аргумент процедуры деления не должен быть равен нулю,\n"
"так как математически результат не определен.\n"
"Наше определение <tt>reciprocal</tt> позволяет избежать этой проблемы путем\n"
"проверки на ноль делителя до деления.\n"
"Если бы <tt>if</tt> была процедурой, ее аргументы (включая <tt>(/"
"&nbsp;1&nbsp;n)</tt>)\n"
"были бы вычислены до того, как у нее была бы возможность выбрать между\n"
"следствием(consequent) и альтернативой(alternative).\n"
"Как и <tt>quote</tt>, которая не вычисляет свое подвыражение,\n"
"<tt>if</tt> не вычисляет все свои подвыражения и поэтому не может быть\n"
"процедурой."

#: start.html:1864
msgid ""
"</p><p>\n"
"The syntactic form <a name=\"./start:s103\"></a><tt>or</tt> operates in a "
"manner similar to <tt>if</tt>.\n"
"The general form of an <tt>or</tt> expression is <tt>(or&nbsp;<i>expr</"
"i>&nbsp;...)</tt>.\n"
"If there are no subexpressions, i.e., the expression is simply <tt>(or)</"
"tt>,\n"
"the value is false.\n"
"Otherwise, each <tt><i>expr</i></tt> is evaluated in turn until either (a) "
"one of\n"
"the expressions evaluates to true or (b) no more expressions are left.\n"
"In case (a), the value is true; in case (b), the value is false."
msgstr ""
"</p><p>\n"
"Синтаксическая форма <a name=\"./start:s103\"></a><tt>or</tt> работает "
"аналогично <tt>if</tt>.\n"
"Общей формой выражения <tt>or</tt> является <tt>(or&nbsp;<i>expr</"
"i>&nbsp;...)</tt>.\n"
"Если подвыражений нет, т.е., выражение просто  <tt>(or)</tt>,\n"
"значение его ложно.\n"
"Иначе, каждое <tt><i>expr</i></tt> вычисляется  по очереди пока либо (a) "
"одно из\n"
"выражений не примет значение true или (b) не остатется больше выражений для "
"вычисления.\n"
"В случае (a), значение истинно(true); в случае (b), значение ложно(false)."

#: start.html:1872
msgid ""
"</p><p>\n"
"To be more precise, in case (a), the value of the <tt>or</tt>\n"
"expression is the value of the last subexpression evaluated.\n"
"This clarification is necessary because there are many possible true\n"
"values.\n"
"Usually, the value of a test expression is one of the two objects\n"
"<a name=\"./start:s104\"></a><tt>#t</tt>, for true, or <a name=\"./start:"
"s105\"></a><tt>#f</tt>, for false."
msgstr ""
"</p><p>\n"
"Точнее, в случае (a), значение выражения <tt>or</tt>\n"
"представляет собой значение последнего вычисляемого подвыражения.\n"
"Это разъяснение необходимо, потому что существует много возможных\n"
"истинных значений.\n"
"Обычно значение тестового выражения является одним из двух объектов\n"
"<a name=\"./start:s104\"></a><tt>#t</tt>, для истины, или <a name=\"./start:"
"s105\"></a><tt>#f</tt>, для лжи."

#: start.html:1874
msgctxt "start.html:1874"
msgid "</p><p>"
msgstr ""

#: start.html:1876
msgid ""
"</p><p><tt>(&lt;&nbsp;-1&nbsp;0)&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;#t<br>"
msgstr ""

#: start.html:1883
msgid ""
"(&gt;&nbsp;-1&nbsp;0)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#f</tt>\n"
"</p><p>Every Scheme object, however, is considered to be either <a name=\"./"
"start:s106\"></a>true\n"
"or <a name=\"./start:s107\"></a>false by conditional expressions and by\n"
"the procedure <tt>not</tt>.\n"
"Only <tt>#f</tt> is considered false; all other objects are considered\n"
"true."
msgstr ""
"(&gt;&nbsp;-1&nbsp;0)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#f</tt>\n"
"</p><p>Каждый объект Scheme, считается, либо  <a name=\"./start:s106\"></"
"a>истинным(true)\n"
"либо <a name=\"./start:s107\"></a>ложным(false) для условных выражений, а "
"для процедур <tt>нет</tt>.\n"
"Только <tt>#f</tt> считается ложным; все остальные объекты считаются "
"истинными."

#: start.html:1885
msgctxt "start.html:1885"
msgid "</p><p>"
msgstr ""

#: start.html:1887
msgid ""
"</p><p><tt>(if&nbsp;#t&nbsp;'true&nbsp;'false)&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;true<br>"
msgstr ""

#: start.html:1889
msgid ""
"(if&nbsp;#f&nbsp;'true&nbsp;'false)&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;false<br>"
msgstr ""

#: start.html:1891
msgid ""
"(if&nbsp;'()&nbsp;'true&nbsp;'false)&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;true<br>"
msgstr ""

#: start.html:1893
msgid ""
"(if&nbsp;1&nbsp;'true&nbsp;'false)&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;true<br>"
msgstr ""

#: start.html:1898
msgid ""
"(if&nbsp;'(a&nbsp;b&nbsp;c)&nbsp;'true&nbsp;'false)&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;true\n"
"<br>\n"
"<br>\n"
"(not&nbsp;#t)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;#f<br>"
msgstr ""

#: start.html:1900
msgid ""
"(not&nbsp;\"false\")&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#f<br>"
msgstr ""

#: start.html:1905
msgid ""
"(not&nbsp;#f)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;#t\n"
"<br>\n"
"<br>\n"
"(or)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"#f<br>"
msgstr ""

#: start.html:1907
msgid ""
"(or&nbsp;#f)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;#f<br>"
msgstr ""

#: start.html:1909
msgid ""
"(or&nbsp;#f&nbsp;#t)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#t<br>"
msgstr ""

#: start.html:1921
msgid ""
"(or&nbsp;#f&nbsp;'a&nbsp;#f)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;a</tt>\n"
"</p><p></p><p>The <a name=\"./start:s108\"></a><tt>and</tt> syntactic form "
"is similar in form to <tt>or</tt>, but an\n"
"<tt>and</tt> expression is true if all its subexpressions are true, and\n"
"false otherwise.\n"
"In the case where there are no subexpressions, i.e., the expression is\n"
"simply <tt>(and)</tt>, the value is true.\n"
"Otherwise, the subexpressions are evaluated in turn until either\n"
"no more subexpressions are left or the value of a subexpression is\n"
"false.\n"
"The value of the <tt>and</tt> expression\n"
"is the value of the last subexpression evaluated."
msgstr ""
"(or&nbsp;#f&nbsp;'a&nbsp;#f)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;a</tt>\n"
"</p><p></p><p>Синтаксическая форма <a name=\"./start:s108\"></a><tt>and</tt> "
"похожа на форму <tt>or</tt>, \n"
"но выражение  <tt>and</tt> истинно когда все его подвыражения истинны, и "
"ложно если есть хоть одно ложное.\n"
"В случае, когда нет подвыражений, т.е, выражение это простое <tt>(and)</tt>, "
"его значение истинно(true).\n"
"Иначе, подвыражения вычисляются в порядке следования, пока не будет больше "
"подвыражений  или значение\n"
"подвыражения не вернет ложь(false).\n"
"Значение выражения <tt>and</tt> это значение последнего вычисленного "
"подвыражения."

#: start.html:1925
msgid ""
"</p><p>\n"
"Using <tt>and</tt>, we can define a slightly different version of\n"
"<a name=\"./start:s109\"></a><tt>reciprocal</tt>."
msgstr ""
"</p><p>\n"
"Используя <tt>and</tt>, мы можем определить несколько иную версию\n"
"<a name=\"./start:s109\"></a><tt>reciprocal</tt>."

#: start.html:1927
msgctxt "start.html:1927"
msgid "</p><p>"
msgstr ""

#: start.html:1929
msgctxt "start.html:1929"
msgid "</p><p><tt>(define&nbsp;reciprocal<br>"
msgstr ""

#: start.html:1931
msgctxt "start.html:1931"
msgid "&nbsp;&nbsp;(lambda&nbsp;(n)<br>"
msgstr ""

#: start.html:1933
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(and&nbsp;(not&nbsp;(=&nbsp;n&nbsp;0))<br>"
msgstr ""

#: start.html:1938
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(/&nbsp;1&nbsp;n))))\n"
"<br>\n"
"<br>\n"
"(reciprocal&nbsp;3)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;1/3<br>"
msgstr ""

#: start.html:1940
msgid ""
"(reciprocal&nbsp;0.5)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;2.0<br>"
msgstr ""

#: start.html:1943
msgid ""
"(reciprocal&nbsp;0)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#f</tt>\n"
"</p><p>In this version, the value is <tt>#f</tt> if <tt>n</tt> is zero and "
"<tt>1/n</tt> otherwise."
msgstr ""
"(reciprocal&nbsp;0)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#f</tt>\n"
"</p><p>В этой версии значение равно <tt>#f</tt> если <tt>n</tt> равно нулю, "
"иначе <tt>1/n</tt>."

#: start.html:1956
msgid ""
"</p><p>\n"
"</p><p>The procedures <tt>=</tt>, <tt>&lt;</tt>, <tt>&gt;</tt>, <tt>&lt;=</"
"tt>, and <tt>&gt;=</tt> are\n"
"called <a name=\"./start:s110\"></a><i>predicates</i>.\n"
"A predicate is a procedure that answers a specific question about its\n"
"arguments and returns one of the two values <tt>#t</tt> or <tt>#f</tt>.\n"
"The names of most predicates end with a\n"
"<a name=\"./start:s111\"></a><a name=\"./start:s112\"></a>question mark "
"(&nbsp;<tt>?</tt>&nbsp;); the\n"
"common numeric procedures listed above are exceptions to this\n"
"rule.\n"
"Not all predicates require numeric arguments, of course.\n"
"The predicate <a name=\"./start:s113\"></a><tt>null?</tt> returns true if "
"its argument is the empty\n"
"list <tt>()</tt> and false otherwise."
msgstr ""
"</p><p>\n"
"</p><p>Процедуры <tt>=</tt>, <tt>&lt;</tt>, <tt>&gt;</tt>, <tt>&lt;=</tt>, и "
"<tt>&gt;=</tt> называются\n"
"<a name=\"./start:s110\"></a><i>предикатами</i>.\n"
"Предикат это процедура, которая отвечает на конкретный вопрос о своих "
"аргументах и возвращает\n"
"одно из двух значение <tt>#t</tt> или <tt>#f</tt>.\n"
"Имена большинства предикатов заканчиваются  \n"
"<a name=\"./start:s111\"></a><a name=\"./start:s112\"></a>вопросительным "
"знаком (&nbsp;<tt>?</tt>&nbsp;); \n"
"общие числовые процедуры, перечисленные выше являются исключениями из этого "
"правила.\n"
"Конечно, не все предикаты требуют числовых аргументов.\n"
"Предикат <a name=\"./start:s113\"></a><tt>null?</tt> возвращает истину если "
"его аргументом\n"
"являтся пустой список. <tt>()</tt> и ложь(false) в противном случае."

#: start.html:1958
msgctxt "start.html:1958"
msgid "</p><p>"
msgstr ""

#: start.html:1960
msgid ""
"</p><p><tt>(null?&nbsp;'())&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#t<br>"
msgstr ""

#: start.html:1962
msgid ""
"(null?&nbsp;'abc)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;#f<br>"
msgstr ""

#: start.html:1964
msgid ""
"(null?&nbsp;'(x&nbsp;y&nbsp;z))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;#f<br>"
msgstr ""

#: start.html:1972
msgid ""
"(null?&nbsp;(cdddr&nbsp;'(x&nbsp;y&nbsp;z)))&nbsp;<img src=\"./start_files/0."
"gif\" alt=\"&lt;graphic&gt;\">&nbsp;#t</tt>\n"
"</p><p>The procedure <a name=\"./start:s114\"></a><tt>cdr</tt> must not be "
"passed anything other than a pair,\n"
"and an exception is raised when this happens.\n"
"Common Lisp, however, defines <tt>(cdr&nbsp;'())</tt> to be <tt>()</tt>.\n"
"The following procedure, <a name=\"./start:s115\"></a><tt>lisp-cdr</tt>, "
"is \n"
"defined using <tt>null?</tt> to return\n"
"<tt>()</tt> if its argument is <tt>()</tt>."
msgstr ""
"(null?&nbsp;(cdddr&nbsp;'(x&nbsp;y&nbsp;z)))&nbsp;<img src=\"./start_files/0."
"gif\" alt=\"&lt;graphic&gt;\">&nbsp;#t</tt>\n"
"</p><p>Процедуре <a name=\"./start:s114\"></a><tt>cdr</tt> не должно "
"передаваться ничего, кроме пары,\n"
"и если это произойдет, возникает исключение.\n"
"Common Lisp, определяет результат <tt>(cdr&nbsp;'())</tt> как <tt>()</tt>.\n"
"Следующая процедура, <a name=\"./start:s115\"></a><tt>lisp-cdr</tt>, "
"определенная\n"
"с помощью <tt>null?</tt> возвращает <tt>()</tt> если ее аргумент равен "
"<tt>()</tt>."

#: start.html:1974
msgctxt "start.html:1974"
msgid "</p><p>"
msgstr ""

#: start.html:1976
msgid "</p><p><tt>(define&nbsp;lisp-cdr<br>"
msgstr ""

#: start.html:1978
msgctxt "start.html:1978"
msgid "&nbsp;&nbsp;(lambda&nbsp;(x)<br>"
msgstr ""

#: start.html:1980
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(null?&nbsp;x)<br>"
msgstr ""

#: start.html:1982
msgctxt "start.html:1982"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'()<br>"
msgstr ""

#: start.html:1987
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cdr&nbsp;x))))\n"
"<br>\n"
"<br>\n"
"(lisp-cdr&nbsp;'(a&nbsp;b&nbsp;c))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(b&nbsp;c)<br>"
msgstr ""

#: start.html:1989
msgid ""
"(lisp-cdr&nbsp;'(c))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;()<br>"
msgstr ""

#: start.html:1995
msgid ""
"(lisp-cdr&nbsp;'())&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;()</tt>\n"
"</p><p>Another useful predicate is <a name=\"./start:s116\"></a><tt>eqv?</"
"tt>, which\n"
"requires two arguments.\n"
"If the two arguments are equivalent, <tt>eqv?</tt> returns true.\n"
"Otherwise, <tt>eqv?</tt> returns false."
msgstr ""
"(lisp-cdr&nbsp;'())&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;()</tt>\n"
"</p><p>Другим полезным предикатом является <a name=\"./start:s116\"></"
"a><tt>eqv?</tt>, ему\n"
"требуются два аргумента.\n"
"Если два аргумента эквивалентны, <tt>eqv?</tt> возвращает истину(true).\n"
"В противном случае, <tt>eqv?</tt> возвращает ложь(false)."

#: start.html:1997
msgctxt "start.html:1997"
msgid "</p><p>"
msgstr ""

#: start.html:1999
msgid ""
"</p><p><tt>(eqv?&nbsp;'a&nbsp;'a)&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;#t<br>"
msgstr ""

#: start.html:2001
msgid ""
"(eqv?&nbsp;'a&nbsp;'b)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#f<br>"
msgstr ""

#: start.html:2003
msgid ""
"(eqv?&nbsp;#f&nbsp;#f)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#t<br>"
msgstr ""

#: start.html:2005
msgid ""
"(eqv?&nbsp;#t&nbsp;#t)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#t<br>"
msgstr ""

#: start.html:2007
msgid ""
"(eqv?&nbsp;#f&nbsp;#t)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#f<br>"
msgstr ""

#: start.html:2009
msgid ""
"(eqv?&nbsp;3&nbsp;3)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#t<br>"
msgstr ""

#: start.html:2011
msgid ""
"(eqv?&nbsp;3&nbsp;2)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#f<br>"
msgstr ""

#: start.html:2013
msgid "(let&nbsp;([x&nbsp;\"Hi&nbsp;Mom!\"])<br>"
msgstr ""

#: start.html:2015
msgctxt "start.html:2015"
msgid ""
"&nbsp;&nbsp;(eqv?&nbsp;x&nbsp;x))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;#t<br>"
msgstr ""

#: start.html:2017
msgid "(let&nbsp;([x&nbsp;(cons&nbsp;'a&nbsp;'b)])<br>"
msgstr ""

#: start.html:2019
msgctxt "start.html:2019"
msgid ""
"&nbsp;&nbsp;(eqv?&nbsp;x&nbsp;x))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;#t<br>"
msgstr ""

#: start.html:2026
msgid ""
"(eqv?&nbsp;(cons&nbsp;'a&nbsp;'b)&nbsp;(cons&nbsp;'a&nbsp;'b))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;#f</tt>\n"
"</p><p>As you can see, <tt>eqv?</tt> returns true if the arguments are the "
"same\n"
"symbol, boolean, number, pair, or string.\n"
"Two pairs are not the same by <tt>eqv?</tt> if they are created by "
"different\n"
"calls to <tt>cons</tt>, even if they have the same contents.\n"
"Detailed equivalence rules for <tt>eqv?</tt> are given in Section&nbsp;<a "
"href=\"objects.html#g108\">6.2</a>."
msgstr ""
"(eqv?&nbsp;(cons&nbsp;'a&nbsp;'b)&nbsp;(cons&nbsp;'a&nbsp;'b))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;#f</tt>\n"
"</p><p>Как вы можете видеть, <tt>eqv?</tt> возвращает истину если аргументы "
"являются одним и\n"
"тем же сиволом, логической величиной, числом, парой или строкой.\n"
"Две пары не одинаковы по <tt>eqv?</tt> если они созданы разными вызовами "
"<tt>cons</tt>, \n"
"даже если они имеют одинаковое содержимое.\n"
"Подробные правила эквивалентности для <tt>eqv?</tt> приведены в разделе\n"
"&nbsp;<a href=\"objects.html#g108\">6.2</a>."

#: start.html:2034
msgid ""
"</p><p>\n"
"Scheme also provides a set\n"
"of <a name=\"./start:s117\"></a><i>type predicates</i> that return true\n"
"or false depending on the type of the object, e.g., <a name=\"./start:"
"s118\"></a><tt>pair?</tt>,\n"
"<a name=\"./start:s119\"></a><tt>symbol?</tt>, <a name=\"./start:s120\"></"
"a><tt>number?</tt>, and <a name=\"./start:s121\"></a><tt>string?</tt>.\n"
"The predicate <a name=\"./start:s122\"></a><tt>pair?</tt>, for example, "
"returns true only if its argument\n"
"is a pair."
msgstr ""
"</p><p>\n"
"Scheme также предоставляет набор\n"
"<a name=\"./start:s117\"></a><i>предикатов проверки типа</i> которые "
"возвращают истину\n"
"или ложь в зависимости от типа объекта, например <a name=\"./start:s118\"></"
"a><tt>pair?</tt>,\n"
"<a name=\"./start:s119\"></a><tt>symbol?</tt>, <a name=\"./start:s120\"></"
"a><tt>number?</tt>, и <a name=\"./start:s121\"></a><tt>string?</tt>.\n"
"Например, предикат <a name=\"./start:s122\"></a><tt>pair?</tt>, возвращает "
"истину, только если аргументом\n"
"является пара."

#: start.html:2036
msgctxt "start.html:2036"
msgid "</p><p>"
msgstr ""

#: start.html:2038
msgid ""
"</p><p><tt>(pair?&nbsp;'(a&nbsp;.&nbsp;c))&nbsp;<img src=\"./start_files/0."
"gif\" alt=\"&lt;graphic&gt;\">&nbsp;#t<br>"
msgstr ""

#: start.html:2040
msgid ""
"(pair?&nbsp;'(a&nbsp;b&nbsp;c))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;#t<br>"
msgstr ""

#: start.html:2042
msgid ""
"(pair?&nbsp;'())&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;#f<br>"
msgstr ""

#: start.html:2044
msgid ""
"(pair?&nbsp;'abc)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;#f<br>"
msgstr ""

#: start.html:2046
msgid ""
"(pair?&nbsp;\"Hi&nbsp;Mom!\")&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;#f<br>"
msgstr ""

#: start.html:2053
msgid ""
"(pair?&nbsp;1234567890)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#f</tt>\n"
"</p><p>Type predicates are useful for deciding if the argument passed to a\n"
"procedure is of the appropriate type.\n"
"For example, the following version of <a name=\"./start:s123\"></"
"a><tt>reciprocal</tt> checks first to\n"
"see that its argument is a number before testing against zero or\n"
"performing the division. "
msgstr ""
"(pair?&nbsp;1234567890)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#f</tt>\n"
"</p><p>Предикаты проверки типа полезны для принятия решения о том, "
"соответствует ли аргумент процедуре\n"
"соответствующего типа.\n"
"Например, следующая версия  <a name=\"./start:s123\"></a><tt>reciprocal</tt> "
"проверяет первый аргумент\n"
"что бы увидеть является ли он числом перед проверкой его является ли он "
"нулем или выполнением деления."

#: start.html:2055
msgctxt "start.html:2055"
msgid "</p><p>"
msgstr ""

#: start.html:2057
msgctxt "start.html:2057"
msgid "</p><p><tt>(define&nbsp;reciprocal<br>"
msgstr ""

#: start.html:2059
msgctxt "start.html:2059"
msgid "&nbsp;&nbsp;(lambda&nbsp;(n)<br>"
msgstr ""

#: start.html:2061
msgctxt "start.html:2061"
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(and&nbsp;(number?&nbsp;n)&nbsp;(not&nbsp;"
"(=&nbsp;n&nbsp;0)))<br>"
msgstr ""

#: start.html:2063
msgctxt "start.html:2063"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(/&nbsp;1&nbsp;n)<br>"
msgstr ""

#: start.html:2068
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"oops!\")))\n"
"<br>\n"
"<br>\n"
"(reciprocal&nbsp;2/3)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;3/2<br>"
msgstr ""

#: start.html:2075
msgid ""
"(reciprocal&nbsp;'a)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;\"oops!\"</tt>\n"
"</p><p>By the way, the code that uses <tt>reciprocal</tt> must check to see "
"that\n"
"the returned value is a number and not a string.\n"
"To relieve the caller of this obligation, it is usually preferable\n"
"to report the error, using <tt>assertion-violation</tt>,\n"
"as follows."
msgstr ""
"(reciprocal&nbsp;'a)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;\"oops!\"</tt>\n"
"</p><p>Кстати, код, который использует <tt>reciprocal</tt> должен проверять, "
"чтобы\n"
"возвращаемое значени было числом, а не строкой.\n"
"Чтобы освободить вызывающий код, от этой необходимости, предпочтительнее "
"сообщать об\n"
"ошибке, используя <tt>assertion-violation</tt>,\n"
"следующим оборазом.."

#: start.html:2077
msgctxt "start.html:2077"
msgid "</p><p>"
msgstr ""

#: start.html:2079
msgctxt "start.html:2079"
msgid "</p><p><tt>(define&nbsp;reciprocal<br>"
msgstr ""

#: start.html:2081
msgctxt "start.html:2081"
msgid "&nbsp;&nbsp;(lambda&nbsp;(n)<br>"
msgstr ""

#: start.html:2083
msgctxt "start.html:2083"
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(and&nbsp;(number?&nbsp;n)&nbsp;(not&nbsp;"
"(=&nbsp;n&nbsp;0)))<br>"
msgstr ""

#: start.html:2085
msgctxt "start.html:2085"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(/&nbsp;1&nbsp;n)<br>"
msgstr ""

#: start.html:2087
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(assertion-"
"violation&nbsp;'reciprocal<br>"
msgstr ""

#: start.html:2089
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"improper&nbsp;"
"argument\"<br>"
msgstr ""

#: start.html:2094
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n))))\n"
"<br>\n"
"<br>\n"
"(reciprocal&nbsp;.25)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;4.0<br>"
msgstr ""

#: start.html:2096
msgid ""
"(reciprocal&nbsp;0)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;<i>exception&nbsp;in&nbsp;reciprocal:&nbsp;improper&nbsp;"
"argument&nbsp;0</i><br>"
msgstr ""

#: start.html:2102
msgid ""
"(reciprocal&nbsp;'a)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;<i>exception&nbsp;in&nbsp;reciprocal:&nbsp;improper&nbsp;"
"argument&nbsp;a</i></tt>\n"
"</p><p>The first argument to <tt>assertion-violation</tt> is a symbol "
"identifying where\n"
"the message originates, the second is a string describing the error,\n"
"and the third and subsequent arguments are \"irritants\" to be included "
"with\n"
"the error message."
msgstr ""
"(reciprocal&nbsp;'a)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;<i>exception&nbsp;in&nbsp;reciprocal:&nbsp;improper&nbsp;"
"argument&nbsp;a</i></tt>\n"
"</p><p>Первый аргумент для <tt>assertion-violation</tt> это символ "
"определяющий, откуда\n"
"приходит сообщение об ошибке, второй это строка описывающая ошибку,\n"
"а третьий и последующие аргументы являются \"раздражителями(irritants)\", "
"которые должны быть включены\n"
"в сообщение об ошибке."

#: start.html:2112
msgid ""
"</p><p>\n"
"Let's look at one more conditional expression, <a name=\"./start:s124\"></"
"a><tt>cond</tt>, that is often\n"
"useful in place of <a name=\"./start:s125\"></a><tt>if</tt>.\n"
"<tt>cond</tt> is similar to <tt>if</tt> except that it allows multiple\n"
"test and alternative expressions.\n"
"Consider the following definition of <tt>sign</tt>, which returns\n"
"<tt>-1</tt> for negative inputs,\n"
"<tt>+1</tt> for positive inputs, and\n"
"<tt>0</tt> for zero."
msgstr ""
"</p><p>\n"
"Давайте посмотрим еще одно условное выражение, <a name=\"./start:s124\"></"
"a><tt>cond</tt>, которое\n"
"очень часто полезно использовать вместо <a name=\"./start:s125\"></a><tt>if</"
"tt>.\n"
"<tt>cond</tt> аналогичен <tt>if</tt> за исключением того, что он допускает "
"множественные\n"
"тестовые и альтернативные выражения.\n"
"Рассмотрим следующее определение <tt>sign</tt>, который возвращает <tt>-1</"
"tt> для отритцательного\n"
"ввода,\n"
"<tt>+1</tt> для позитивного ввода, и\n"
"<tt>0</tt> для нуля."

#: start.html:2114
msgctxt "start.html:2114"
msgid "</p><p>"
msgstr ""

#: start.html:2116
msgctxt "start.html:2116"
msgid "</p><p><tt>(define&nbsp;sign<br>"
msgstr ""

#: start.html:2118
msgctxt "start.html:2118"
msgid "&nbsp;&nbsp;(lambda&nbsp;(n)<br>"
msgstr ""

#: start.html:2120
msgctxt "start.html:2120"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(&lt;&nbsp;n&nbsp;0)<br>"
msgstr ""

#: start.html:2122
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1<br>"
msgstr ""

#: start.html:2124
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(&gt;&nbsp;"
"n&nbsp;0)<br>"
msgstr ""

#: start.html:2126
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"+1<br>"
msgstr ""

#: start.html:2130
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;0))))</tt>\n"
"</p><p>\n"
"</p><p><tt>(sign&nbsp;-88.3)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;-1<br>"
msgstr ""

#: start.html:2132
msgid ""
"(sign&nbsp;0)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;0<br>"
msgstr ""

#: start.html:2134
msgid ""
"(sign&nbsp;333333333333)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;1<br>"
msgstr ""

#: start.html:2138
msgid ""
"(*&nbsp;(sign&nbsp;-88.3)&nbsp;(abs&nbsp;-88.3))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;-88.3</tt>\n"
"</p><p>The two <tt>if</tt> expressions may be replaced by a single <tt>cond</"
"tt>\n"
"expression as follows."
msgstr ""
"(*&nbsp;(sign&nbsp;-88.3)&nbsp;(abs&nbsp;-88.3))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;-88.3</tt>\n"
"</p><p>Два выражения <tt>if</tt> можно заменить одним выражением <tt>cond</"
"tt>\n"
"следующим образом."

#: start.html:2140
msgctxt "start.html:2140"
msgid "</p><p>"
msgstr ""

#: start.html:2142
msgctxt "start.html:2142"
msgid "</p><p><tt>(define&nbsp;sign<br>"
msgstr ""

#: start.html:2144
msgctxt "start.html:2144"
msgid "&nbsp;&nbsp;(lambda&nbsp;(n)<br>"
msgstr ""

#: start.html:2146
msgctxt "start.html:2146"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(cond<br>"
msgstr ""

#: start.html:2148
msgctxt "start.html:2148"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(&lt;&nbsp;n&nbsp;0)&nbsp;-1]<br>"
msgstr ""

#: start.html:2150
msgctxt "start.html:2150"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(&gt;&nbsp;n&nbsp;0)&nbsp;+1]<br>"
msgstr ""

#: start.html:2153
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[else&nbsp;0])))</tt>\n"
"</p><p>A <tt>cond</tt> expression usually takes the form"
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[else&nbsp;0])))</tt>\n"
"</p><p>Выражение <tt>cond</tt> обычно принимает форму"

#: start.html:2155
msgctxt "start.html:2155"
msgid "</p><p>"
msgstr ""

#: start.html:2160
msgid ""
"</p><p><tt>(cond&nbsp;(<i>test</i>&nbsp;<i>expr</i>)&nbsp;...&nbsp;"
"(else&nbsp;<i>expr</i>))</tt>\n"
"</p><p>though the <tt>else</tt> clause may be omitted.\n"
"This should be done only when there is no possibility that all the tests\n"
"will fail, as in the new version of <tt>sign</tt> below."
msgstr ""
"</p><p><tt>(cond&nbsp;(<i>test</i>&nbsp;<i>expr</i>)&nbsp;...&nbsp;"
"(else&nbsp;<i>expr</i>))</tt>\n"
"</p><p>хотя предложение  <tt>else</tt> может быть опущено.\n"
"Это должно быть сделано только тогда, когда нет вероятности, что все тесты "
"потерпят неудачу, как в новой\n"
"версии <tt>sign</tt> ниже."

#: start.html:2162
msgctxt "start.html:2162"
msgid "</p><p>"
msgstr ""

#: start.html:2164
msgctxt "start.html:2164"
msgid "</p><p><tt>(define&nbsp;sign<br>"
msgstr ""

#: start.html:2166
msgctxt "start.html:2166"
msgid "&nbsp;&nbsp;(lambda&nbsp;(n)<br>"
msgstr ""

#: start.html:2168
msgctxt "start.html:2168"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(cond<br>"
msgstr ""

#: start.html:2170
msgctxt "start.html:2170"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(&lt;&nbsp;n&nbsp;0)&nbsp;-1]<br>"
msgstr ""

#: start.html:2172
msgctxt "start.html:2172"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(&gt;&nbsp;n&nbsp;0)&nbsp;+1]<br>"
msgstr ""

#: start.html:2180
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(=&nbsp;n&nbsp;0)&nbsp;0])))</tt>\n"
"</p><p>These definitions of <tt>sign</tt> do not depend on the order in "
"which the\n"
"tests are performed, since only one of the tests can be true for any\n"
"value of <tt>n</tt>.\n"
"The following procedure computes the tax on a given amount of income in\n"
"a progressive tax system with breakpoints at 10,000, 20,000, and 30,000\n"
"dollars."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(=&nbsp;n&nbsp;0)&nbsp;0])))</tt>\n"
"</p><p>Это определение <tt>sign</tt> не зависит от порядка выполнения\n"
"тестов, так как только один из тестов может быть истинным для любого\n"
"значения <tt>n</tt>.\n"
"Следующая процедура вычисляет налог на определенную сумму дохода в \n"
"прогрессивной налоговой системе с точками останова в  10,000, 20,000, и "
"30,000\n"
"долларов."

#: start.html:2182
msgctxt "start.html:2182"
msgid "</p><p>"
msgstr ""

#: start.html:2184
msgid "</p><p><tt>(define&nbsp;income-tax<br>"
msgstr ""

#: start.html:2186
msgid "&nbsp;&nbsp;(lambda&nbsp;(income)<br>"
msgstr ""

#: start.html:2188
msgctxt "start.html:2188"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(cond<br>"
msgstr ""

#: start.html:2190
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(&lt;=&nbsp;income&nbsp;10000)&nbsp;"
"(*&nbsp;income&nbsp;.05)]<br>"
msgstr ""

#: start.html:2192
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(&lt;=&nbsp;income&nbsp;20000)&nbsp;"
"(+&nbsp;(*&nbsp;(-&nbsp;income&nbsp;10000)&nbsp;.08)&nbsp;500.00)]<br>"
msgstr ""

#: start.html:2194
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(&lt;=&nbsp;income&nbsp;30000)&nbsp;"
"(+&nbsp;(*&nbsp;(-&nbsp;income&nbsp;20000)&nbsp;.13)&nbsp;1300.00)]<br>"
msgstr ""

#: start.html:2198
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[else&nbsp;(+&nbsp;(*&nbsp;(-&nbsp;"
"income&nbsp;30000)&nbsp;.21)&nbsp;2600.00)])))</tt>\n"
"</p><p>\n"
"</p><p><tt>(income-tax&nbsp;5000)&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;250.0<br>"
msgstr ""

#: start.html:2200
msgid ""
"(income-tax&nbsp;15000)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;900.0<br>"
msgstr ""

#: start.html:2202
msgid ""
"(income-tax&nbsp;25000)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;1950.0<br>"
msgstr ""

#: start.html:2206
msgid ""
"(income-tax&nbsp;50000)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;6800.0</tt>\n"
"</p><p>In this example, the order in which the tests are performed,\n"
"left to right (top to bottom), is significant."
msgstr ""
"(income-tax&nbsp;50000)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;6800.0</tt>\n"
"</p><p>В этом примере порядок, в котором выполняются тесты, слева "
"направо(сверху вниз), является\n"
"важным."

#: start.html:2208
msgctxt "start.html:2208"
msgid "</p><p>"
msgstr ""

#: start.html:2212
msgid ""
"</p><h4>Exercise <a name=\"g30\"></a>2.7.1</h4>\n"
"<a name=\"./start:s126\"></a>Define the predicate <a name=\"./start:s127\"></"
"a><tt>atom?</tt>, which returns true if its argument\n"
"is not a pair and false if it is."
msgstr ""
"</p><h4>Упражнение <a name=\"g30\"></a>2.7.1</h4>\n"
"<a name=\"./start:s126\"></a>Определите предикат <a name=\"./start:s127\"></"
"a><tt>atom?</tt>, который возвращает\n"
"истину если его аргумент не является парой и ложь если это пара."

#: start.html:2214
msgctxt "start.html:2214"
msgid "<p>"
msgstr ""

#: start.html:2217
msgctxt "start.html:2217"
msgid "</p><p>"
msgstr ""

#: start.html:2225
msgid ""
"</p><h4>Exercise <a name=\"g31\"></a>2.7.2</h4>\n"
"<a name=\"./start:s128\"></a><a name=\"EXSHORTER1\"></a>The procedure "
"<tt>length</tt> returns the length of its argument, which\n"
"must be a list.\n"
"For example, <tt>(length&nbsp;'(a&nbsp;b&nbsp;c))</tt> is 3.\n"
"Using <tt>length</tt>, define the procedure <a name=\"./start:s129\"></"
"a><tt>shorter</tt>, which returns the\n"
"shorter of two list arguments.\n"
"Have it return the first list if they have the same length."
msgstr ""
"</p><h4>Упражнение <a name=\"g31\"></a>2.7.2</h4>\n"
"<a name=\"./start:s128\"></a><a name=\"EXSHORTER1\"></a>Процедура "
"<tt>length</tt> возвращает длину аргумента,\n"
"который должен быть списком.\n"
"Например, <tt>(length&nbsp;'(a&nbsp;b&nbsp;c))</tt> равна 3.\n"
"Используя <tt>length</tt>, определите процедуру <a name=\"./start:s129\"></"
"a><tt>shorter</tt>, которая возвращает\n"
"более короткий из двух аргументов.\n"
"Верните первый список если они имеют одинаковую длину."

#: start.html:2227
msgctxt "start.html:2227"
msgid "<p>"
msgstr ""

#: start.html:2229
msgid ""
"</p><p><tt>(shorter&nbsp;'(a&nbsp;b)&nbsp;'(c&nbsp;d&nbsp;e))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b)<br>"
msgstr ""

#: start.html:2231
msgid ""
"(shorter&nbsp;'(a&nbsp;b)&nbsp;'(c&nbsp;d))&nbsp;<img src=\"./start_files/0."
"gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b)<br>"
msgstr ""

#: start.html:2234
msgid ""
"(shorter&nbsp;'(a&nbsp;b)&nbsp;'(c))&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;(c)</tt>\n"
"</p><p>"
msgstr ""

#: start.html:2236
msgctxt "start.html:2236"
msgid "</p><p>"
msgstr ""

#: start.html:2238
msgid ""
"</p><h3><a name=\"g32\"></a><a name=\"./start:h8\"></a>Section 2.8. Simple "
"Recursion<a name=\"SECTGSRECURSION\"></a></h3>"
msgstr ""
"</p><h3><a name=\"g32\"></a><a name=\"./start:h8\"></a>Section 2.8. Простая "
"Рекурсия <a name=\"SECTGSRECURSION\"></a></h3>"

#: start.html:2255
msgid ""
"<p>\n"
"<a name=\"./start:s130\"></a>We have seen how we can control whether or not\n"
"expressions are evaluated with <tt>if</tt>, <tt>and</tt>, <tt>or</tt>,\n"
"and <tt>cond</tt>.\n"
"We can also perform an expression more than once by creating a\n"
"procedure containing the expression and invoking the procedure\n"
"more than once.\n"
"What if we need to perform some expression repeatedly, say for\n"
"all the elements of a list or all the numbers from one to ten?\n"
"We can do so via <a name=\"./start:s131\"></a>recursion.\n"
"Recursion is a simple concept: the application of a procedure from\n"
"within that procedure.\n"
"It can be tricky to master recursion at first, but once mastered it\n"
"provides expressive power far beyond ordinary looping constructs."
msgstr ""
"<p>\n"
"<a name=\"./start:s130\"></a>Мы видели, как мы можем контролировать,\n"
"вычисление выражений с помощью <tt>if</tt>, <tt>and</tt>, <tt>or</tt>,\n"
"и <tt>cond</tt>.\n"
"Мы также можем выполнять выражения несколько раз, создавая процедуру,\n"
"содержащую выражение и вызывающую процедуру более одного раза.\n"
"Что делать, если нам нужно выполнить некоторое выражение несколько раз,\n"
"скажем для всех элементов списка или всех чисел от одного до десяти?\n"
"Мы можем сделать это через <a name=\"./start:s131\"></a>рекурсию.\n"
"Рекурсия это простая концепция применения процедуры изнутри самой\n"
"процедуры.\n"
"Вначале может быть сложно справиться с рекурсией, но как только вы\n"
"ее освоите, она обеспечит выразительную силу далеко выходящую за\n"
"рамки конструкций циклов."

#: start.html:2260
msgid ""
"</p><p>\n"
"A <a name=\"./start:s132\"></a><i>recursive procedure</i> is a procedure "
"that applies itself.\n"
"Perhaps the simplest recursive procedure is the following, which we will\n"
"call <a name=\"./start:s133\"></a><tt>goodbye</tt>."
msgstr ""
"</p><p>\n"
"<a name=\"./start:s132\"></a><i>Рекурсивная процедура</i> это процедура "
"которая применяет(вызвает)\n"
"саму себя.\n"
"Возможно, самая простая рекурсивная процедура - следующая, мы назовем ее\n"
" <a name=\"./start:s133\"></a><tt>goodbye</tt>."

#: start.html:2262
msgctxt "start.html:2262"
msgid "</p><p>"
msgstr ""

#: start.html:2264
msgid "</p><p><tt>(define&nbsp;goodbye<br>"
msgstr ""

#: start.html:2266
msgctxt "start.html:2266"
msgid "&nbsp;&nbsp;(lambda&nbsp;()<br>"
msgstr ""

#: start.html:2273
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(goodbye)))\n"
"<br>\n"
"<br>\n"
"(goodbye)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\"></"
"tt>\n"
"</p><p>This procedure takes no arguments and simply applies itself "
"immediately.\n"
"There is no value after the <img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\"> because <tt>goodbye</tt> never returns."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;(goodbye)))\n"
"<br>\n"
"<br>\n"
"(goodbye)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\"></"
"tt>\n"
"</p><p>Эта процедура не приниает аргументов и сразу же применяет себя.\n"
"Она не имеет возвращаемого значения the <img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\"> поскольку <tt>goodbye</tt> \n"
"никогда не возвращается."

#: start.html:2285
msgid ""
"</p><p>\n"
"Obviously, to make practical use out of a recursive procedure, we must\n"
"have some way to terminate the recursion.\n"
"Most recursive procedures should have at least two basic elements, a\n"
"<a name=\"./start:s134\"></a><i>base case</i> and a <a name=\"./start:"
"s135\"></a><i>recursion step</i>.\n"
"The base case terminates the recursion, giving the value of the\n"
"procedure for some base argument.\n"
"The recursion step gives the value in terms of the value of the procedure\n"
"applied to a different argument.\n"
"In order for the recursion to terminate, the different argument must\n"
"be closer to the base argument in some way."
msgstr ""
"</p><p>\n"
"Очевидно, что на практике используется возврат из рекурсивной процедуры, мы "
"должны\n"
"каким то оборазом прекратить рекурсию.\n"
"Большинство рекурсивных процедур должны иметь как минимум два основных "
"элемента:\n"
"<a name=\"./start:s134\"></a><i>базовый случай</i> и <a name=\"./start:"
"s135\"></a><i>шаг рекурсии</i>.\n"
"Базовый случай завершает рекурсию, выдавая значение процедуры для некоторого "
"базового аргумента.\n"
"Шаг рекурсии дает значение в терминах значений процедуры, применяемой к "
"другому аргументу. Чтобы рекурсия\n"
"завершилась, другой аргумент каким-то образом должен приближаться к базовому "
"аргументу."

#: start.html:2299
msgid ""
"</p><p>\n"
"<a name=\"./start:s136\"></a>Let's consider the problem of finding the "
"length of a\n"
"proper list recursively.\n"
"We need a base case and a recursion step.\n"
"The logical base argument for recursion on lists is nearly always the empty\n"
"list.\n"
"The length of the empty list is zero, so the base case should give the\n"
"value zero for the empty list.\n"
"In order to become closer to the empty list, the natural recursion step\n"
"involves the cdr of the argument.\n"
"A nonempty list is one element longer than its cdr, so the recursion\n"
"step gives the value as one more than the length of the cdr of the\n"
"list<a name=\"defn:simplelength\"></a>."
msgstr ""
"</p><p>\n"
"<a name=\"./start:s136\"></a>Рассмотрим проблему поиска длины правильного "
"списка\n"
"через рекурсию\n"
"Нам нужен базовый случай и шаг рекурсии.\n"
"Логически базовый случай для рекурсии по списку это почти всегда пустой "
"список.\n"
"Длина пустого списка равна нулю, поэтому базовый случай должен выдать 0 "
"для \n"
"пустого списка.\n"
"Чтобы стать ближе к пустому списку, естественный шаг рекурсии включает cdr "
"аргумента.\n"
"Не пустой спискок на один элемент длиннее чем его cdr, поэтому шаг рекурсии\n"
"дает значение которое на один больше, чем длина  cdr списка.\n"
"<a name=\"defn:simplelength\"></a>."

#: start.html:2301
msgctxt "start.html:2301"
msgid "</p><p>"
msgstr ""

#: start.html:2303
msgid "</p><p><tt>(define&nbsp;length<br>"
msgstr ""

#: start.html:2305
msgctxt "start.html:2305"
msgid "&nbsp;&nbsp;(lambda&nbsp;(ls)<br>"
msgstr ""

#: start.html:2307
msgctxt "start.html:2307"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(null?&nbsp;ls)<br>"
msgstr ""

#: start.html:2309
msgctxt "start.html:2309"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0<br>"
msgstr ""

#: start.html:2313
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(+&nbsp;(length&nbsp;"
"(cdr&nbsp;ls))&nbsp;1))))</tt>\n"
"</p><p>\n"
"</p><p><tt>(length&nbsp;'())&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;0<br>"
msgstr ""

#: start.html:2315
msgid ""
"(length&nbsp;'(a))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;1<br>"
msgstr ""

#: start.html:2322
msgid ""
"(length&nbsp;'(a&nbsp;b))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;2</tt>\n"
"</p><p>The <tt>if</tt> expression asks if the list is empty.\n"
"If so, the value is zero.\n"
"This is the base case.\n"
"If not, the value is one more than the length of the cdr of the list.\n"
"This is the recursion step."
msgstr ""
"(length&nbsp;'(a&nbsp;b))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;2</tt>\n"
"</p><p>Выражение <tt>if</tt> проверяет не пустой ли передан список.\n"
"Если это так, значение равно нулю.\n"
"Это базовый случай.\n"
"Если нет, это значение больше чем длина cdr списка.\n"
"Это шаг рекурсии."

#: start.html:2332
msgid ""
"</p><p>\n"
"Many Scheme implementations allow you to trace the execution of a procedure "
"to\n"
"see how it operates.\n"
"<a name=\"./start:s137\"></a><a name=\"./start:s138\"></a>In\n"
"<a name=\"./start:s139\"></a>Chez&nbsp;Scheme, for example, one way to\n"
"trace a procedure is to type <tt>(trace&nbsp;<i>name</i>)</tt>, where\n"
"<tt><i>name</i></tt> is the name of a procedure you have defined at top "
"level.\n"
"If you trace <tt>length</tt> as defined above and pass it the argument\n"
"<tt>'(a&nbsp;b&nbsp;c&nbsp;d)</tt>, you should see something like this:"
msgstr ""
"</p><p>\n"
"Многие реализации Scheme позволяют отслеживать выполнение процедуры, чтобы "
"увидеть\n"
"как она работает.<a name=\"./start:s137\"></a><a name=\"./start:s138\"></"
"a>В\n"
"<a name=\"./start:s139\"></a>Chez&nbsp;Scheme, например, одним из способов "
"отслеживания\n"
"является трассировка процедуры, наберите <tt>(trace&nbsp;<i>name</i>)</tt>, "
"где\n"
"<tt><i>name</i></tt> это имя процедуры, которая определена на верхнем "
"уровне.\n"
"В Guile это команда: <tt>,trace (length '(a b c d))</tt>.\n"
"Если вы трассируете <tt>length</tt> как указано выше и передадите ей "
"аргумент\n"
"<tt>'(a&nbsp;b&nbsp;c&nbsp;d)</tt>, вы должны увидеть чтото вроде этого:"

#: start.html:2334
msgctxt "start.html:2334"
msgid "</p><p>"
msgstr ""

#: start.html:2336
msgid "</p><p><tt>|(length&nbsp;(a&nbsp;b&nbsp;c&nbsp;d))<br>"
msgstr ""

#: start.html:2338
msgid "|&nbsp;(length&nbsp;(b&nbsp;c&nbsp;d))<br>"
msgstr ""

#: start.html:2340
msgid "|&nbsp;|(length&nbsp;(c&nbsp;d))<br>"
msgstr ""

#: start.html:2342
msgid "|&nbsp;|&nbsp;(length&nbsp;(d))<br>"
msgstr ""

#: start.html:2344
msgid "|&nbsp;|&nbsp;|(length&nbsp;())<br>"
msgstr ""

#: start.html:2346
msgid "|&nbsp;|&nbsp;|0<br>"
msgstr ""

#: start.html:2348
msgid "|&nbsp;|&nbsp;1<br>"
msgstr ""

#: start.html:2350
msgid "|&nbsp;|2<br>"
msgstr ""

#: start.html:2352
msgid "|&nbsp;3<br>"
msgstr ""

#: start.html:2360
msgid ""
"|4</tt>\n"
"</p><p>The indentation shows the nesting level of the recursion; the "
"vertical\n"
"lines associate applications visually with their values.\n"
"Notice that on each application of <tt>length</tt> the list gets smaller "
"until\n"
"it finally reaches <tt>()</tt>.\n"
"The value at <tt>()</tt> is 0, and each outer level adds 1 to arrive\n"
"at the final value."
msgstr ""
"|4</tt>\n"
"</p><p>Отступ указывает уровень вложенности рекурсии; вертикальные линии\n"
"визуально связывают предложения с их значениями.\n"
"Обратите внимание, что при каждом применении <tt>length</tt> список "
"становится меньше,\n"
"пока он не достигнет <tt>()</tt>.\n"
"Значение длины для <tt>()</tt> равно 0, и каждый внешний уровень добавляет 1 "
"для\n"
"достижения конечного значения."

#: start.html:2368
msgid ""
"</p><p>\n"
"Let's write a procedure, <a name=\"./start:s140\"></a><tt>list-copy</tt>, "
"that returns a copy of its\n"
"argument, which must be a list.\n"
"That is, <tt>list-copy</tt> returns a new list consisting of the elements\n"
"(but not the pairs) of the old list.\n"
"Making a copy might be useful if either the original list or the copy\n"
"might be altered via <tt>set-car!</tt> or <tt>set-cdr!</tt>, which we "
"discuss later."
msgstr ""
"</p><p>\n"
"Давайте напишем процедуру, <a name=\"./start:s140\"></a><tt>list-copy</tt>, "
"которая возвращает копию\n"
"своего аргумента, который должен быть списком.\n"
"То есть, <tt>list-copy</tt> возвращает новый список состоящий из "
"элементов(но не пар) старого списка.\n"
"Создание копии может быть полезно, если исходный список или его копия могут "
"быть изменены с помощью\n"
" <tt>set-car!</tt> или <tt>set-cdr!</tt>, которые мы обсудим позже."

#: start.html:2370
msgctxt "start.html:2370"
msgid "</p><p>"
msgstr ""

#: start.html:2372
msgid ""
"</p><p><tt>(list-copy&nbsp;'())&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;()<br>"
msgstr ""

#: start.html:2375
msgid ""
"(list-copy&nbsp;'(a&nbsp;b&nbsp;c))&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;c)</tt>\n"
"</p><p>See if you can define <tt>list-copy</tt> before studying the "
"definition below."
msgstr ""
"(list-copy&nbsp;'(a&nbsp;b&nbsp;c))&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;c)</tt>\n"
"</p><p>Посмотрите, можете ли вы определить <tt>list-copy</tt> перед "
"изучением определения ниже."

#: start.html:2377
msgctxt "start.html:2377"
msgid "</p><p>"
msgstr ""

#: start.html:2379
msgid "</p><p><tt>(define&nbsp;list-copy<br>"
msgstr ""

#: start.html:2381
msgctxt "start.html:2381"
msgid "&nbsp;&nbsp;(lambda&nbsp;(ls)<br>"
msgstr ""

#: start.html:2383
msgctxt "start.html:2383"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(null?&nbsp;ls)<br>"
msgstr ""

#: start.html:2385
msgctxt "start.html:2385"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'()<br>"
msgstr ""

#: start.html:2387
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons&nbsp;(car&nbsp;ls)<br>"
msgstr ""

#: start.html:2396
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;(list-copy&nbsp;(cdr&nbsp;ls))))))</tt>\n"
"</p><p>The definition of <tt>list-copy</tt> is similar to the definition of\n"
"<tt>length</tt>.\n"
"The test in the base case is the same, <tt>(null?&nbsp;ls)</tt>.\n"
"The value in the base case is <tt>()</tt>, however, not 0, because we\n"
"are building up a list, not a number.\n"
"The recursive call is the same, but instead of adding one, <tt>list-copy</"
"tt>\n"
"conses the car of the list onto the value of the recursive call."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;(list-copy&nbsp;(cdr&nbsp;ls))))))</tt>\n"
"</p><p>Определение <tt>list-copy</tt> аналогично определению <tt>length</"
"tt>.\n"
"Проверка в базовом случае таже, <tt>(null?&nbsp;ls)</tt>.\n"
"Значение в базовом случае будет <tt>()</tt>, а не  0, поскольку мы\n"
"собираем список а не число.\n"
"Рекурсивный вызов один и тот же, но вместо того чтобы добавлять единицу\n"
" <tt>list-copy</tt> создает пару из car спика и значения возвращаемого "
"рекурсивным вызовом."

#: start.html:2405
msgid ""
"</p><p>\n"
"There is no reason why there cannot be more than one base case.\n"
"The procedure <a name=\"./start:s141\"></a><tt>memv</tt> takes two "
"arguments, an object and a list.\n"
"It returns the first sublist, or <i>tail</i>,\n"
"of the list whose car is equal to the object, or\n"
"<tt>#f</tt> if the object is not found in the list.\n"
"The value of <tt>memv</tt> may be used as a list or as a truth value\n"
"in a conditional expression."
msgstr ""
"</p><p>\n"
"Нет причин, по которым не может быть более одного базового случая.\n"
"Процедура <a name=\"./start:s141\"></a><tt>memv</tt> получает два аргумента, "
"объект и список.\n"
"Она возвращает первый подсписок или <i>хвост(tail)</i> списка,\n"
"car списка которого равен объекту, или <tt>#f</tt> если объект\n"
"не найден в списке.\n"
"Значение <tt>memv</tt> может использоваться как список или значение истины\n"
"в условном выражении."

#: start.html:2407
msgctxt "start.html:2407"
msgid "</p><p>"
msgstr ""

#: start.html:2409
msgid "</p><p><tt>(define&nbsp;memv<br>"
msgstr ""

#: start.html:2411
msgctxt "start.html:2411"
msgid "&nbsp;&nbsp;(lambda&nbsp;(x&nbsp;ls)<br>"
msgstr ""

#: start.html:2413
msgctxt "start.html:2413"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(cond<br>"
msgstr ""

#: start.html:2415
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(null?&nbsp;ls)&nbsp;#f]<br>"
msgstr ""

#: start.html:2417
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(eqv?&nbsp;(car&nbsp;ls)&nbsp;x)&nbsp;"
"ls]<br>"
msgstr ""

#: start.html:2421
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[else&nbsp;(memv&nbsp;x&nbsp;(cdr&nbsp;"
"ls))])))</tt>\n"
"</p><p>\n"
"</p><p><tt>(memv&nbsp;'a&nbsp;'(a&nbsp;b&nbsp;b&nbsp;d))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;b&nbsp;"
"d)<br>"
msgstr ""

#: start.html:2423
msgid ""
"(memv&nbsp;'b&nbsp;'(a&nbsp;b&nbsp;b&nbsp;d))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(b&nbsp;b&nbsp;d)<br>"
msgstr ""

#: start.html:2425
msgid ""
"(memv&nbsp;'c&nbsp;'(a&nbsp;b&nbsp;b&nbsp;d))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;#f<br>"
msgstr ""

#: start.html:2427
msgid ""
"(memv&nbsp;'d&nbsp;'(a&nbsp;b&nbsp;b&nbsp;d))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(d)<br>"
msgstr ""

#: start.html:2429
msgid "(if&nbsp;(memv&nbsp;'b&nbsp;'(a&nbsp;b&nbsp;b&nbsp;d))<br>"
msgstr ""

#: start.html:2431
msgid "&nbsp;&nbsp;&nbsp;&nbsp;\"yes\"<br>"
msgstr ""

#: start.html:2440
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;\"no\")&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;\"yes\"</tt>\n"
"</p><p>Here there are two conditions to check, hence the use of <a name=\"./"
"start:s142\"></a><tt>cond</tt>.\n"
"The first cond clause checks for the base value of <tt>()</tt>; no object is "
"a\n"
"member of <tt>()</tt>, so the answer is <tt>#f</tt>.\n"
"The second clause asks if the car of the list is the object, in which\n"
"case the list is returned, being the first tail whose car contains\n"
"the object.\n"
"The recursion step just continues down the list."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;\"no\")&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;\"yes\"</tt>\n"
"</p><p>Здесь есть два условия проверки, следовательно используем <a name=\"./"
"start:s142\"></a><tt>cond</tt>.\n"
"Первое условие cond проверяет базовый случай, значение <tt>()</tt>; ни один "
"объект не является\n"
"членом <tt>()</tt>, поэтому ответ равен <tt>#f</tt>.\n"
"Второе условие проверяет, если car списка это искомый объект, в этом случае "
"возвращается найденый список, т.е.\n"
"являющийся первым хвостом первый элемент которого(car от хвоста списка) "
"содержит объект.\n"
"Шаг рекусрии просто спускается вниз по списку."

#: start.html:2447
msgid ""
"</p><p>\n"
"There may also be more than one recursion case.\n"
"Like <tt>memv</tt>, the procedure <a name=\"./start:s143\"></a><tt>remv</tt> "
"defined below takes two\n"
"arguments, an object and a list.\n"
"It returns a new list with all occurrences of the object removed from\n"
"the list."
msgstr ""
"</p><p>\n"
"Также может быть более одного случая рекурсии.\n"
"Как и <tt>memv</tt>, процедура <a name=\"./start:s143\"></a><tt>remv</tt> "
"определенная ниже\n"
"принимает два аргумента, объект и спиок.\n"
"Она возвращает новый список в котором удалены все вхождения переданного в "
"качестве аргумента\n"
"объекта."

#: start.html:2449
msgctxt "start.html:2449"
msgid "</p><p>"
msgstr ""

#: start.html:2451
msgid "</p><p><tt>(define&nbsp;remv<br>"
msgstr ""

#: start.html:2453
msgctxt "start.html:2453"
msgid "&nbsp;&nbsp;(lambda&nbsp;(x&nbsp;ls)<br>"
msgstr ""

#: start.html:2455
msgctxt "start.html:2455"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(cond<br>"
msgstr ""

#: start.html:2457
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(null?&nbsp;ls)&nbsp;'()]<br>"
msgstr ""

#: start.html:2459
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(eqv?&nbsp;(car&nbsp;ls)&nbsp;x)&nbsp;"
"(remv&nbsp;x&nbsp;(cdr&nbsp;ls))]<br>"
msgstr ""

#: start.html:2463
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[else&nbsp;(cons&nbsp;(car&nbsp;ls)&nbsp;"
"(remv&nbsp;x&nbsp;(cdr&nbsp;ls)))])))</tt>\n"
"</p><p>\n"
"</p><p><tt>(remv&nbsp;'a&nbsp;'(a&nbsp;b&nbsp;b&nbsp;d))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(b&nbsp;b&nbsp;d)<br>"
msgstr ""

#: start.html:2465
msgid ""
"(remv&nbsp;'b&nbsp;'(a&nbsp;b&nbsp;b&nbsp;d))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;d)<br>"
msgstr ""

#: start.html:2467
msgid ""
"(remv&nbsp;'c&nbsp;'(a&nbsp;b&nbsp;b&nbsp;d))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;b&nbsp;"
"d)<br>"
msgstr ""

#: start.html:2476
msgid ""
"(remv&nbsp;'d&nbsp;'(a&nbsp;b&nbsp;b&nbsp;d))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;b)</tt>\n"
"</p><p>This definition is similar to the definition of <tt>memv</tt> above,\n"
"except <tt>remv</tt> does not quit once it finds the element in the car\n"
"of the list.\n"
"Rather, it continues, simply ignoring the element.\n"
"If the element is not found in the car of the list, <tt>remv</tt> does\n"
"the same thing as <tt>list-copy</tt> above: it conses the car of the list\n"
"onto the recursive value."
msgstr ""
"(remv&nbsp;'d&nbsp;'(a&nbsp;b&nbsp;b&nbsp;d))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;b)</tt>\n"
"</p><p>Это определение аналогично определению <tt>memv</tt> выше,\n"
"за исключением того, что <tt>remv</tt> не завершается после того как он "
"находит элемент\n"
"в car(начале) списка.\n"
"Скорее , он продолжается, просто игнорируя элемент.\n"
"Если элемент не найден в car списка, <tt>remv</tt> делает тоже самое что и\n"
"<tt>list-copy</tt> показаный выше: он создает пару из car списка и значения\n"
"возвращаемого рекурсией."

#: start.html:2487
msgid ""
"</p><p>\n"
"Up to now, the recursion has been only on the cdr of a list.\n"
"It is sometimes useful, however, for a procedure to recur on\n"
"the car as well as the cdr of the list.\n"
"The procedure <a name=\"./start:s144\"></a><tt>tree-copy</tt> defined below\n"
"treats the structure of pairs as a tree\n"
"rather than as a list, with the left subtree being the car of the pair and\n"
"the right subtree being the cdr of the pair.\n"
"It performs a similar operation to <tt>list-copy</tt>, building new pairs\n"
"while leaving the elements (leaves) alone."
msgstr ""
"</p><p>\n"
"До сих пор рекурсия была только в cdr  списка.\n"
"Иногда бывает полезно, чтобы процедура повторялась и для car списка,\n"
"также как и на cdr списка.\n"
"Процедура <a name=\"./start:s144\"></a><tt>tree-copy</tt>, определенная\n"
"ниже, рассматривает структуру пар как дерево, а не как список, причем\n"
"левое поддерево является car пары и правое поддерево является  cdr пары.\n"
"Процедура выполняет аналогичную операцию <tt>list-copy</tt>, создавая новые\n"
"пары, оставляя только элементы (листья)."

#: start.html:2489
msgctxt "start.html:2489"
msgid "</p><p>"
msgstr ""

#: start.html:2491
msgid "</p><p><tt>(define&nbsp;tree-copy<br>"
msgstr ""

#: start.html:2493
msgid "&nbsp;&nbsp;(lambda&nbsp;(tr)<br>"
msgstr ""

#: start.html:2495
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(not&nbsp;(pair?&nbsp;tr))<br>"
msgstr ""

#: start.html:2497
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tr<br>"
msgstr ""

#: start.html:2499
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons&nbsp;(tree-copy&nbsp;"
"(car&nbsp;tr))<br>"
msgstr ""

#: start.html:2507
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;(tree-copy&nbsp;(cdr&nbsp;tr))))))</tt>\n"
"</p><p>\n"
"</p><p><tt>(tree-copy&nbsp;'((a&nbsp;.&nbsp;b)&nbsp;.&nbsp;c))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;((a&nbsp;.&nbsp;"
"b)&nbsp;.&nbsp;c)</tt>\n"
"</p><p>The natural base argument for a tree structure is anything that is "
"not a\n"
"pair, since the recursion traverses pairs rather than lists.\n"
"The recursive step in this case is <i>doubly recursive</i>, finding the\n"
"value recursively for the car as well as the cdr of the argument."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;(tree-copy&nbsp;(cdr&nbsp;tr))))))</tt>\n"
"</p><p>\n"
"</p><p><tt>(tree-copy&nbsp;'((a&nbsp;.&nbsp;b)&nbsp;.&nbsp;c))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;((a&nbsp;.&nbsp;"
"b)&nbsp;.&nbsp;c)</tt>\n"
"</p><p>Естественныем базовым аргументом для древовидной структуры, будет\n"
"все что не является парой, поскольк рекурсия проходит по парам, а не по "
"списку.\n"
"Шаг рекурсии в этом случае является <i>дважды рекурсивным</i>, ища "
"рекурсивно\n"
"значение для car , а также для cdr аргумента."

#: start.html:2521
msgid ""
"</p><p>\n"
"</p><p>At this point, readers who are familiar with other languages that "
"provide\n"
"special iteration constructs, e.g., <i>while</i> or <i>for</i> loops, might\n"
"wonder whether similar constructs are required in Scheme.\n"
"Such constructs are unnecessary; <a name=\"./start:s145\"></a>iteration in "
"Scheme\n"
"is expressed more clearly and succinctly via recursion.\n"
"Recursion is more general and eliminates the need for the variable\n"
"assignments required by many other languages' iteration constructs,\n"
"resulting in code that is more reliable and easier to follow.\n"
"Some recursion is essentially iteration and executes as such;\n"
"Section&nbsp;<a href=\"further.html#g55\">3.2</a> has more to say about "
"this.\n"
"Often, there is no need to make a distinction, however.\n"
"Concentrate instead on writing clear, concise, and correct programs."
msgstr ""
"</p><p>\n"
"</p><p>В данной точке, читатели, знакомые с другми языками, которые "
"предоставляют\n"
"специальные конструкции итераций, например, <i>while</i> или <i>for</i> "
"циклы, могут\n"
"задаться вопросом, нужны ли подобные конструкции в Scheme.\n"
"Такие констуркции не нужны; <a name=\"./start:s145\"></a>итерация в Scheme\n"
"выражается более четко и лаконично через рекурсию.\n"
"Рекурсия является более общей и устраняет необходимость присваивания "
"переменных,\n"
"требуемая конструкциями интераций многих других языков, что приводит к более "
"надежному\n"
"и удобному коду.\n"
"Некоторые рекурсии по сущестсву являются итерацией и выполняются как "
"таковые;\n"
"В разделе&nbsp;<a href=\"further.html#g55\">3.2</a> об этом говориться "
"больше.\n"
"Однако часто нет необходимости проводить различие. Вместо этого "
"сконцентрируйтесь на\n"
"написании четких, сжатых и правльных программ."

#: start.html:2527
msgid ""
"</p><p>\n"
"Before we leave the topic of recursion, let's consider a special form of\n"
"repetition called <a name=\"./start:s146\"></a><i>mapping</i>.\n"
"Consider the following procedure, <tt>abs-all</tt>, that takes a list of\n"
"numbers as input and returns a list of their absolute values."
msgstr ""
"</p><p>\n"
"Прежде чем оставить тему рекурсии, рассмотрим специальную форму\n"
"повторения, назваеую <a name=\"./start:s146\"></a><i>отображением(mapping)</"
"i>.\n"
"Рассмотрим следующую процедуру <tt>abs-all</tt>, которая принимает список "
"чисел\n"
"в качестве входных данных и возвращает список их абсолютных \n"
"значений."

#: start.html:2529
msgctxt "start.html:2529"
msgid "</p><p>"
msgstr ""

#: start.html:2531
msgctxt "start.html:2531"
msgid "</p><p><tt>(define&nbsp;abs-all<br>"
msgstr ""

#: start.html:2533
msgctxt "start.html:2533"
msgid "&nbsp;&nbsp;(lambda&nbsp;(ls)<br>"
msgstr ""

#: start.html:2535
msgctxt "start.html:2535"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(null?&nbsp;ls)<br>"
msgstr ""

#: start.html:2537
msgctxt "start.html:2537"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'()<br>"
msgstr ""

#: start.html:2539
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons&nbsp;(abs&nbsp;"
"(car&nbsp;ls))<br>"
msgstr ""

#: start.html:2551
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;(abs-all&nbsp;(cdr&nbsp;ls))))))</tt>\n"
"</p><p>\n"
"</p><p><tt>(abs-all&nbsp;'(1&nbsp;-2&nbsp;3&nbsp;-4&nbsp;5&nbsp;-6))&nbsp;"
"<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"(1&nbsp;2&nbsp;3&nbsp;4&nbsp;5&nbsp;6)</tt>\n"
"</p><p>This procedure forms a new list from the input list by applying the\n"
"procedure <tt>abs</tt> to each element.\n"
"We say that <tt>abs-all</tt> <i>maps</i> <tt>abs</tt> over the input list "
"to\n"
"produce the output list.\n"
"Mapping a procedure over a list is a fairly common thing to do, so Scheme\n"
"provides the procedure <tt>map</tt>, which maps its first argument,\n"
"a procedure, over its second, a list.\n"
"We can use <a name=\"./start:s147\"></a><tt>map</tt> to define <tt>abs-all</"
"tt>."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;(abs-all&nbsp;(cdr&nbsp;ls))))))</tt>\n"
"</p><p>\n"
"</p><p><tt>(abs-all&nbsp;'(1&nbsp;-2&nbsp;3&nbsp;-4&nbsp;5&nbsp;-6))&nbsp;"
"<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"(1&nbsp;2&nbsp;3&nbsp;4&nbsp;5&nbsp;6)</tt>\n"
"</p><p>Эта процедура формирует новый список из входного списка, применяя\n"
"процедуру <tt>abs</tt> к каждому элементу.\n"
"Мы говорим, что <tt>abs-all</tt> <i>выполняет отображение(maps)</i> <tt>abs</"
"tt> над входным списком\n"
"для получения выходного списка.\n"
"Отображение списка с помощью процедуры является довольно распространенной "
"задачей, поэтому\n"
"Scheme предоставляет процедуру <tt>map</tt>, которая отображает свой первый "
"аргумент,\n"
"с помощью процедуры, являющейся вторым аргументом, в список.\n"
"Мы можем использовать <a name=\"./start:s147\"></a><tt>map</tt> для "
"определения <tt>abs-all</tt>."

#: start.html:2553
msgctxt "start.html:2553"
msgid "</p><p>"
msgstr ""

#: start.html:2555
msgctxt "start.html:2555"
msgid "</p><p><tt>(define&nbsp;abs-all<br>"
msgstr ""

#: start.html:2557
msgctxt "start.html:2557"
msgid "&nbsp;&nbsp;(lambda&nbsp;(ls)<br>"
msgstr ""

#: start.html:2561
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(map&nbsp;abs&nbsp;ls)))</tt>\n"
"</p><p>We really do not need <tt>abs-all</tt>, however, since the "
"corresponding\n"
"direct application of <tt>map</tt> is just as short and perhaps clearer."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;(map&nbsp;abs&nbsp;ls)))</tt>\n"
"</p><p>Однако в действительности нам не нужен <tt>abs-all</tt>, поскольку "
"соответствующее\n"
"прямое применение <tt>map</tt> также коротко и, возможно, более ясное."

#: start.html:2563
msgctxt "start.html:2563"
msgid "</p><p>"
msgstr ""

#: start.html:2567
msgid ""
"</p><p><tt>(map&nbsp;"
"abs&nbsp;'(1&nbsp;-2&nbsp;3&nbsp;-4&nbsp;5&nbsp;-6))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"(1&nbsp;2&nbsp;3&nbsp;4&nbsp;5&nbsp;6)</tt>\n"
"</p><p>Of course, we can use <tt>lambda</tt> to create the procedure "
"argument to\n"
"<tt>map</tt>, e.g., to square the elements of a list of numbers."
msgstr ""
"</p><p><tt>(map&nbsp;"
"abs&nbsp;'(1&nbsp;-2&nbsp;3&nbsp;-4&nbsp;5&nbsp;-6))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"(1&nbsp;2&nbsp;3&nbsp;4&nbsp;5&nbsp;6)</tt>\n"
"</p><p>Конечно, мы можем использовать <tt>lambda</tt> для создания аргумента "
"процедуры для\n"
"<tt>map</tt>, например, для  квадрата элементов списка чисел."

#: start.html:2569
msgctxt "start.html:2569"
msgid "</p><p>"
msgstr ""

#: start.html:2571
msgid "</p><p><tt>(map&nbsp;(lambda&nbsp;(x)&nbsp;(*&nbsp;x&nbsp;x))<br>"
msgstr ""

#: start.html:2575
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'(1&nbsp;-3&nbsp;-5&nbsp;7))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"(1&nbsp;9&nbsp;25&nbsp;49)</tt>\n"
"</p><p>We can map a multiple-argument procedure over multiple lists, as\n"
"in the following example."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'(1&nbsp;-3&nbsp;-5&nbsp;7))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"(1&nbsp;9&nbsp;25&nbsp;49)</tt>\n"
"</p><p>Мы можем отображать процедуры нескольких аргументов по нескольким "
"спискам, как в следующем\n"
"примере."

#: start.html:2577
msgctxt "start.html:2577"
msgid "</p><p>"
msgstr ""

#: start.html:2583
msgid ""
"</p><p><tt>(map&nbsp;cons&nbsp;'(a&nbsp;b&nbsp;"
"c)&nbsp;'(1&nbsp;2&nbsp;3))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;((a&nbsp;.&nbsp;1)&nbsp;(b&nbsp;.&nbsp;2)&nbsp;(c&nbsp;."
"&nbsp;3))</tt>\n"
"</p><p>The lists must be of the same length, and the procedure should accept "
"as\n"
"many arguments as there are lists.\n"
"Each element of the output list is the result of applying the procedure\n"
"to corresponding members of the input list."
msgstr ""
"</p><p><tt>(map&nbsp;cons&nbsp;'(a&nbsp;b&nbsp;"
"c)&nbsp;'(1&nbsp;2&nbsp;3))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;((a&nbsp;.&nbsp;1)&nbsp;(b&nbsp;.&nbsp;2)&nbsp;(c&nbsp;."
"&nbsp;3))</tt>\n"
"</p><p>Списки должны иметь одинаковыую длину, и процедура должна принимать "
"столько аргументов, сколько\n"
"имеется списков. Каждый элемент выходного списка является результатом "
"применения\n"
"процедуры к соотвествующим членам входных списков."

#: start.html:2589
msgid ""
"</p><p>\n"
"Looking at the first definition of <tt>abs-all</tt> above, you should be "
"able\n"
"to derive, before studying it, the following definition of\n"
"<a name=\"./start:s148\"></a><tt>map1</tt>, a restricted version of\n"
"<tt>map</tt> that maps a one-argument procedure over a single list."
msgstr ""
"</p><p>\n"
"Рассматривая первое определение <tt>abs-all</tt> выше, вы должны вывести "
"перед его\n"
"изучением, следующее опредление <a name=\"./start:s148\"></a><tt>map1</tt>, "
"ограниченную\n"
"версию <tt>map</tt> для отображения одного списка через процедуру одного "
"аргумента."

#: start.html:2591
msgctxt "start.html:2591"
msgid "</p><p>"
msgstr ""

#: start.html:2593
msgid "</p><p><tt>(define&nbsp;map1<a name=\"defn:map1\"></a><br>"
msgstr ""

#: start.html:2595
msgid "&nbsp;&nbsp;(lambda&nbsp;(p&nbsp;ls)<br>"
msgstr ""

#: start.html:2597
msgctxt "start.html:2597"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(null?&nbsp;ls)<br>"
msgstr ""

#: start.html:2599
msgctxt "start.html:2599"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'()<br>"
msgstr ""

#: start.html:2601
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons&nbsp;(p&nbsp;(car&nbsp;"
"ls))<br>"
msgstr ""

#: start.html:2608
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;(map1&nbsp;p&nbsp;(cdr&nbsp;ls))))))</tt>\n"
"</p><p>\n"
"</p><p><tt>(map1&nbsp;"
"abs&nbsp;'(1&nbsp;-2&nbsp;3&nbsp;-4&nbsp;5&nbsp;-6))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"(1&nbsp;2&nbsp;3&nbsp;4&nbsp;5&nbsp;6)</tt>\n"
"</p><p>All we have done is to replace the call to <tt>abs</tt> in <tt>abs-"
"all</tt>\n"
"with a call to the new parameter <tt>p</tt>.\n"
"A definition of the more general <tt>map</tt> is given in Section&nbsp;<a "
"href=\"control.html#g100\">5.4</a>."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;(map1&nbsp;p&nbsp;(cdr&nbsp;ls))))))</tt>\n"
"</p><p>\n"
"</p><p><tt>(map1&nbsp;"
"abs&nbsp;'(1&nbsp;-2&nbsp;3&nbsp;-4&nbsp;5&nbsp;-6))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"(1&nbsp;2&nbsp;3&nbsp;4&nbsp;5&nbsp;6)</tt>\n"
"</p><p>Все что мы сделали, это заменили вызов <tt>abs</tt> в <tt>abs-all</"
"tt>\n"
"вызовом нового параметра <tt>p</tt>.\n"
"Определение более общей процедуры <tt>map</tt> приведено в разделе&nbsp;<a "
"href=\"control.html#g100\">5.4</a>."

#: start.html:2611
msgctxt "start.html:2611"
msgid "</p><p>"
msgstr ""

#: start.html:2615
msgid ""
"</p><h4>Exercise <a name=\"g33\"></a>2.8.1</h4>\n"
"<a name=\"./start:s149\"></a>Describe what would happen if you switched the "
"order of the arguments\n"
"to <tt>cons</tt> in the definition of <tt>tree-copy</tt>."
msgstr ""
"</p><h4>Упражнение <a name=\"g33\"></a>2.8.1</h4>\n"
"<a name=\"./start:s149\"></a>Опишите, что произойдет, если вы измените "
"порядок аргументов для <tt>cons</tt> \n"
"в определении <tt>tree-copy</tt>."

#: start.html:2617
msgctxt "start.html:2617"
msgid "<p>"
msgstr ""

#: start.html:2620
msgctxt "start.html:2620"
msgid "</p><p>"
msgstr ""

#: start.html:2627
msgid ""
"</p><h4>Exercise <a name=\"g34\"></a>2.8.2</h4>\n"
"<a name=\"./start:s150\"></a>Consult Section&nbsp;<a href=\"objects."
"html#g109\">6.3</a> for the description of\n"
"<a name=\"./start:s151\"></a><tt>append</tt> and\n"
"define a two-argument version of it.\n"
"What would happen if you switched the order of the arguments in the\n"
"call to <tt>append</tt> within your definition of <tt>append</tt>?"
msgstr ""
"</p><h4>Упражнение <a name=\"g34\"></a>2.8.2</h4>\n"
"<a name=\"./start:s150\"></a>Обратитесь к разделу&nbsp;<a href=\"objects."
"html#g109\">6.3</a> для описания\n"
"<a name=\"./start:s151\"></a><tt>append</tt> и\n"
"определите его двух аргументную версию.\n"
"Что произойдет если вы измените порядок аргументов в вызове <tt>append</tt> "
"в вашем\n"
"определении <tt>append</tt>?"

#: start.html:2629
msgctxt "start.html:2629"
msgid "<p>"
msgstr ""

#: start.html:2632
msgctxt "start.html:2632"
msgid "</p><p>"
msgstr ""

#: start.html:2638
msgid ""
"</p><h4>Exercise <a name=\"g35\"></a>2.8.3</h4>\n"
"<a name=\"./start:s152\"></a>Define the procedure <a name=\"./start:s153\"></"
"a><tt>make-list</tt>, which\n"
"takes a nonnegative integer\n"
"<tt><i>n</i></tt> and an object and returns a new list, <tt><i>n</i></tt> "
"long, each\n"
"element of which is the object."
msgstr ""
"</p><h4>Упражнение <a name=\"g35\"></a>2.8.3</h4>\n"
"<a name=\"./start:s152\"></a>Определите процедуру <a name=\"./start:s153\"></"
"a><tt>make-list</tt>, которая\n"
"принимает неотритцательное целое число\n"
"<tt><i>n</i></tt> и объект и возвращает новый список, длиной <tt><i>n</i></"
"tt>, каждый элемент\n"
"которого является объектом."

#: start.html:2640
msgctxt "start.html:2640"
msgid "<p>"
msgstr ""

#: start.html:2648
msgid ""
"</p><p><tt>(make-list&nbsp;7&nbsp;'())&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;(()&nbsp;()&nbsp;()&nbsp;()&nbsp;()&nbsp;"
"()&nbsp;())</tt>\n"
"</p><p>[<i>Hint</i>: The base test should be <tt>(=&nbsp;<i>n</i>&nbsp;0)</"
"tt>, and the recursion\n"
"step should involve <tt>(-&nbsp;<i>n</i>&nbsp;1)</tt>.\n"
"Whereas <tt>()</tt> is the natural base case for recursion on lists, 0\n"
"is the natural base case for recursion on nonnegative integers.\n"
"Similarly, subtracting 1 is the natural way to bring a nonnegative\n"
"integer closer to 0.]"
msgstr ""
"</p><p><tt>(make-list&nbsp;7&nbsp;'())&nbsp;<img src=\"./start_files/0.gif\" "
"alt=\"&lt;graphic&gt;\">&nbsp;(()&nbsp;()&nbsp;()&nbsp;()&nbsp;()&nbsp;"
"()&nbsp;())</tt>\n"
"</p><p>[<i>Подсказка</i>: базовая проверка(случай) должна быть <tt>(=&nbsp;"
"<i>n</i>&nbsp;0)</tt>, а шаг рекурсии\n"
"должен включать <tt>(-&nbsp;<i>n</i>&nbsp;1)</tt>.\n"
"В то время как <tt>()</tt> является естественным базовы случаем для рекурсии "
"в списках, 0\n"
"это естественный базовый случай для рекурсии на неотритцательных целых "
"числах.\n"
"Точно также, вычитание  1 является естественным способом приблизить целое "
"неотритцательное число к  0.]"

#: start.html:2650
msgctxt "start.html:2650"
msgid "</p><p>"
msgstr ""

#: start.html:2653
msgctxt "start.html:2653"
msgid "</p><p>"
msgstr ""

#: start.html:2657
msgid ""
"</p><h4>Exercise <a name=\"g36\"></a>2.8.4</h4>\n"
"<a name=\"./start:s154\"></a>The procedures <tt>list-ref</tt> and <tt>list-"
"tail</tt> return the\n"
"<i>n</i>th element and <i>n</i>th tail of a list <i>ls</i>."
msgstr ""
"</p><h4>Упражнение <a name=\"g36\"></a>2.8.4</h4>\n"
"<a name=\"./start:s154\"></a>Процедуры <tt>list-ref</tt> и <tt>list-tail</"
"tt> возвращают\n"
"<i>n</i>-й элемент и <i>n</i>-й хвост списка <i>ls</i>."

#: start.html:2659
msgctxt "start.html:2659"
msgid "<p>"
msgstr ""

#: start.html:2661
msgid ""
"</p><p><tt>(list-ref&nbsp;'(1&nbsp;2&nbsp;3&nbsp;4)&nbsp;0)&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;1<br>"
msgstr ""

#: start.html:2663
msgid ""
"(list-tail&nbsp;'(1&nbsp;2&nbsp;3&nbsp;4)&nbsp;0)&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"(1&nbsp;2&nbsp;3&nbsp;4)<br>"
msgstr ""

#: start.html:2665
msgid ""
"(list-ref&nbsp;'(a&nbsp;short&nbsp;(nested)&nbsp;list)&nbsp;2)&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(nested)<br>"
msgstr ""

#: start.html:2668
msgid ""
"(list-tail&nbsp;'(a&nbsp;short&nbsp;(nested)&nbsp;list)&nbsp;2)&nbsp;<img "
"src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;((nested)&nbsp;"
"list)</tt>\n"
"</p><p>Define both procedures."
msgstr ""
"(list-tail&nbsp;'(a&nbsp;short&nbsp;(nested)&nbsp;list)&nbsp;2)&nbsp;<img "
"src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;((nested)&nbsp;"
"list)</tt>\n"
"</p><p>Определите обе процедуры."

#: start.html:2670
msgctxt "start.html:2670"
msgid "</p><p>"
msgstr ""

#: start.html:2673
msgctxt "start.html:2673"
msgid "</p><p>"
msgstr ""

#: start.html:2683
msgid ""
"</p><h4>Exercise <a name=\"g37\"></a>2.8.5</h4>\n"
"<a name=\"./start:s155\"></a>Exercise&nbsp;<a href=\"start.html#g31\">2.7.2</"
"a> had you use <tt>length</tt> in the definition\n"
"of <a name=\"./start:s156\"></a><tt>shorter</tt>,\n"
"which returns the shorter of its two list arguments, or the first\n"
"if the two have the same length.\n"
"Write <tt>shorter</tt> without using <tt>length</tt>.\n"
"[<i>Hint</i>: Define a recursive helper,\n"
"<a name=\"./start:s157\"></a><tt>shorter?</tt>, and use it\n"
"in place of the length comparison.]"
msgstr ""
"</p><h4>Упражнение <a name=\"g37\"></a>2.8.5</h4>\n"
"<a name=\"./start:s155\"></a>Упражнение&nbsp;<a href=\"start."
"html#g31\">2.7.2</a> испоьзовало бы <tt>length</tt> в\n"
"определении более коротких элементов\n"
"<a name=\"./start:s156\"></a><tt>shorter</tt>,\n"
"которое возвращает более короткие из двух аргументов списка, или первое, "
"если оба имеют одинаковую\n"
"длину.\n"
"Напишите <tt>shorter</tt> без использования <tt>length</tt>.\n"
"[<i>Подсказка</i>: Определите рекурсивный помощник,\n"
"<a name=\"./start:s157\"></a><tt>shorter?</tt>, и используйте его вместо\n"
"сравнения длины.]"

#: start.html:2685
msgctxt "start.html:2685"
msgid "<p>"
msgstr ""

#: start.html:2688
msgctxt "start.html:2688"
msgid "</p><p>"
msgstr ""

#: start.html:2697
msgid ""
"</p><h4>Exercise <a name=\"g38\"></a>2.8.6</h4>\n"
"<a name=\"./start:s158\"></a><a name=\"EXEVENODD\"></a>All of the recursive "
"procedures shown so far have been directly recursive.\n"
"That is, each procedure directly applies itself to a new argument.\n"
"It is also possible to write two procedures that use each other, resulting\n"
"in indirect recursion.\n"
"Define the procedures <a name=\"./start:s159\"></a><tt>odd?</tt> and <a name="
"\"./start:s160\"></a><tt>even?</tt>, each in terms of the\n"
"other.\n"
"[<i>Hint</i>: What should each return when its argument is 0?]"
msgstr ""
"</p><h4>Упражнение <a name=\"g38\"></a>2.8.6</h4>\n"
"<a name=\"./start:s158\"></a><a name=\"EXEVENODD\"></a>Все рекурсивные "
"процедуры, показанные до сих пор, \n"
"были прямо рекурсивными.\n"
"То есть, каждая процедура НЕПОСРЕДСТВЕННО применяла себя к новому "
"аргументу.\n"
"Так же можно написать две процедуры, которые используют друг друга, что "
"приведет к косвенной\n"
"рекурсии.\n"
"Определите процедуры <a name=\"./start:s159\"></a><tt>odd?</tt> и <a name="
"\"./start:s160\"></a><tt>even?</tt>, одну в терминах другого.\n"
"[<i>Подсказка</i>: Что каждая процедура должна возвращать, когда аргумент "
"равен 0?]"

#: start.html:2699
msgctxt "start.html:2699"
msgid "<p>"
msgstr ""

#: start.html:2701
msgid ""
"</p><p><tt>(even?&nbsp;17)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#f<br>"
msgstr ""

#: start.html:2704
msgid ""
"(odd?&nbsp;17)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;#t</tt>\n"
"</p><p>"
msgstr ""

#: start.html:2707
msgctxt "start.html:2707"
msgid "</p><p>"
msgstr ""

#: start.html:2711
msgid ""
"</p><h4>Exercise <a name=\"g39\"></a>2.8.7</h4>\n"
"<a name=\"./start:s161\"></a>Use <a name=\"./start:s162\"></a><tt>map</tt> "
"to define a procedure, <tt>transpose</tt>, that takes a list\n"
"of pairs and returns a pair of lists as follows."
msgstr ""
"</p><h4>Упражнение <a name=\"g39\"></a>2.8.7</h4>\n"
"<a name=\"./start:s161\"></a>Используйте <a name=\"./start:s162\"></"
"a><tt>map</tt> для определения процедуры, <tt>transpose</tt>, которая берет "
"список пар и возвращает пару списков следующим образом."

#: start.html:2713
msgctxt "start.html:2713"
msgid "<p>"
msgstr ""

#: start.html:2717
msgid ""
"</p><p><tt>(transpose&nbsp;'((a&nbsp;.&nbsp;1)&nbsp;(b&nbsp;.&nbsp;2)&nbsp;"
"(c&nbsp;.&nbsp;3)))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;((a&nbsp;b&nbsp;c)&nbsp;1&nbsp;2&nbsp;3)</tt>\n"
"</p><p>[<i>Hint</i>: <tt>((a&nbsp;b&nbsp;c)&nbsp;1&nbsp;2&nbsp;3)</tt> is "
"the same as\n"
"<tt>((a&nbsp;b&nbsp;c)&nbsp;.&nbsp;(1&nbsp;2&nbsp;3))</tt>.]"
msgstr ""
"</p><p><tt>(transpose&nbsp;'((a&nbsp;.&nbsp;1)&nbsp;(b&nbsp;.&nbsp;2)&nbsp;"
"(c&nbsp;.&nbsp;3)))&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;((a&nbsp;b&nbsp;c)&nbsp;1&nbsp;2&nbsp;3)</tt>\n"
"</p><p>[<i>Подсказка</i>: <tt>((a&nbsp;b&nbsp;c)&nbsp;1&nbsp;2&nbsp;3)</tt> "
"тоже что и\n"
"<tt>((a&nbsp;b&nbsp;c)&nbsp;.&nbsp;(1&nbsp;2&nbsp;3))</tt>.]"

#: start.html:2719
msgctxt "start.html:2719"
msgid "</p><p>"
msgstr ""

#: start.html:2722
msgctxt "start.html:2722"
msgid "</p><p>"
msgstr ""

#: start.html:2724
msgid ""
"</p><h3><a name=\"g40\"></a><a name=\"./start:h9\"></a>Section 2.9. "
"Assignment<a name=\"SECTGSASSIGNMENT\"></a></h3>"
msgstr ""
"</p><h3><a name=\"g40\"></a><a name=\"./start:h9\"></a>Section 2.9. "
"Присваивание<a name=\"SECTGSASSIGNMENT\"></a></h3>"

#: start.html:2733
msgid ""
"<p>\n"
"Although many programs can be written without them, <a name=\"./start:"
"s163\"></a>assignments to top-level\n"
"<a name=\"./start:s164\"></a>variables or <tt>let</tt>-bound and <tt>lambda</"
"tt>-bound variables are sometimes useful.\n"
"Assignments do not create new bindings, as with <tt>let</tt> or\n"
"<tt>lambda</tt>, but rather change the values of existing bindings.\n"
"Assignments are performed with <a name=\"./start:s165\"></a><tt>set!</tt>."
msgstr ""
"<p>\n"
"Хотя многие программы могут быть записаны без него, полезно использовать \n"
"<a name=\"./start:s163\"></a>присваивание на верхнем уровне\n"
"<a name=\"./start:s164\"></a>переменным или <tt>let</tt>-связывание и "
"<tt>lambda</tt>-связывание переменных. Присваивания не создают новые "
"привязки, как <tt>let</tt> или\n"
"<tt>lambda</tt>, а скорее заменяют значения существующих привязок.\n"
"Присваивание выполняется с помощью <a name=\"./start:s165\"></a><tt>set!</"
"tt>."

#: start.html:2735
msgctxt "start.html:2735"
msgid "</p><p>"
msgstr ""

#: start.html:2737
msgid ""
"</p><p><tt>(define&nbsp;abcde&nbsp;'(a&nbsp;b&nbsp;c&nbsp;d&nbsp;e))<br>"
msgstr ""

#: start.html:2739
msgid ""
"abcde&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"(a&nbsp;b&nbsp;c&nbsp;d&nbsp;e)<br>"
msgstr ""

#: start.html:2741
msgid "(set!&nbsp;abcde&nbsp;(cdr&nbsp;abcde))<br>"
msgstr ""

#: start.html:2743
msgid ""
"abcde&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"(b&nbsp;c&nbsp;d&nbsp;e)<br>"
msgstr ""

#: start.html:2745
msgid "(let&nbsp;([abcde&nbsp;'(a&nbsp;b&nbsp;c&nbsp;d&nbsp;e)])<br>"
msgstr ""

#: start.html:2747
msgid "&nbsp;&nbsp;(set!&nbsp;abcde&nbsp;(reverse&nbsp;abcde))<br>"
msgstr ""

#: start.html:2755
msgid ""
"&nbsp;&nbsp;abcde)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;(e&nbsp;d&nbsp;c&nbsp;b&nbsp;a)</tt>\n"
"</p><p>Many languages require the use of assignments to initialize local\n"
"variables, separate from the declaration or binding of the variables.\n"
"In Scheme, all local variables are given a value immediately upon binding.\n"
"Besides making the separate assignment to initialize local variables\n"
"unnecessary, it ensures that the programmer cannot forget to initialize "
"them,\n"
"a common source of errors in most languages."
msgstr ""
"&nbsp;&nbsp;abcde)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;(e&nbsp;d&nbsp;c&nbsp;b&nbsp;a)</tt>\n"
"</p><p>Многие языки требуют использовать присваивание для инициализации "
"локальных переменных,\n"
"отдельно от объявления или связывания переменных.\n"
"В Scheme, всем локальным переменных присваивается значение сразу после "
"связывания.\n"
"Помимо того, что отдельного присваивания для инициализации локальных "
"переменных не требуется,\n"
"это гарантирует, что программист не сможет забыть инициализировать их,\n"
"что является общим источником ошибок во многих языках."

#: start.html:2763
msgid ""
"</p><p>\n"
"In fact, most of the assignments that are either necessary or convenient in\n"
"other languages are both unnecessary and inconvenient in Scheme, since "
"there\n"
"is typically a clearer way to express the same algorithm without "
"assignments.\n"
"One common practice in some languages is to sequence expression evaluation\n"
"with a series of assignments, as in the following procedure that finds the\n"
"roots of a quadratic equation."
msgstr ""
"</p><p>\n"
"Фактически, большинство присваиваний, которые необходимы или удобны на "
"других\n"
"языках, являются неужными и неудобными в Scheme, поскольку обычно сущестует\n"
"более четкий способ выражения одного и того же алгоритма без присваиваний.\n"
"Одной из распространенных практик на некоторых языках является "
"последовательность\n"
"вычисления выражений с помощью ряда присваиваний, как в следующей "
"процедуре,\n"
"которая находит корни квадратного уравнения."

#: start.html:2765
msgctxt "start.html:2765"
msgid "</p><p>"
msgstr ""

#: start.html:2767
msgctxt "start.html:2767"
msgid "</p><p><tt>(define&nbsp;quadratic-formula<br>"
msgstr ""

#: start.html:2769
msgctxt "start.html:2769"
msgid "&nbsp;&nbsp;(lambda&nbsp;(a&nbsp;b&nbsp;c)<br>"
msgstr ""

#: start.html:2771
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;([root1&nbsp;0]&nbsp;[root2&nbsp;0]&nbsp;"
"[minusb&nbsp;0]&nbsp;[radical&nbsp;0]&nbsp;[divisor&nbsp;0])<br>"
msgstr ""

#: start.html:2773
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(set!&nbsp;minusb&nbsp;(-&nbsp;0&nbsp;"
"b))<br>"
msgstr ""

#: start.html:2775
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(set!&nbsp;radical&nbsp;(sqrt&nbsp;(-"
"&nbsp;(*&nbsp;b&nbsp;b)&nbsp;(*&nbsp;4&nbsp;(*&nbsp;a&nbsp;c)))))<br>"
msgstr ""

#: start.html:2777
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(set!&nbsp;divisor&nbsp;(*&nbsp;2&nbsp;"
"a))<br>"
msgstr ""

#: start.html:2779
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(set!&nbsp;root1&nbsp;(/&nbsp;(+&nbsp;"
"minusb&nbsp;radical)&nbsp;divisor))<br>"
msgstr ""

#: start.html:2781
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(set!&nbsp;root2&nbsp;(/&nbsp;(-&nbsp;"
"minusb&nbsp;radical)&nbsp;divisor))<br>"
msgstr ""

#: start.html:2784
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons&nbsp;root1&nbsp;root2))))</tt>\n"
"</p><p>The roots are computed according to the well-known quadratic formula,"
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons&nbsp;root1&nbsp;root2))))</tt>\n"
"</p><p>Корни вычисляются в соответствии с известной квадратичной формулы,"

#: start.html:2788
msgid ""
"</p><p>\n"
"</p><p>\n"
"<img src=\"./start_files/4.gif\" alt=\"&lt;graphic&gt;\"></p><p>"
msgstr ""

#: start.html:2801
msgid ""
"</p><p>\n"
"which yields the solutions to the equation 0 = <i>ax</i><sup>2</sup> + "
"<i>bx</i> + <i>c</i>.\n"
"The <tt>let</tt> expression in this definition is employed solely to "
"establish\n"
"the variable bindings, corresponding to the declarations required in other\n"
"languages.\n"
"The first three assignment expressions compute subpieces of the formula,\n"
"namely -<i>b</i>, <img src=\"./start_files/5.gif\" alt=\"&lt;graphic&gt;\">, "
"and 2<i>a</i>.\n"
"The last two assignment expressions compute the two roots in terms of the\n"
"subpieces.\n"
"A pair of the two roots is the value of <a name=\"./start:s166\"></"
"a><tt>quadratic-formula</tt>.\n"
"For example, the two roots of 2<i>x</i><sup>2</sup> - 4<i>x</i> - 6 are "
"<i>x</i> = 3 and <i>x</i> = -1."
msgstr ""
"</p><p>\n"
"которая дает решение уравнения 0 = <i>ax</i><sup>2</sup> + <i>bx</i> + <i>c</"
"i>.\n"
"Выражение <tt>let</tt> в этом определении используется только для "
"установления связей переменных,\n"
"соответствующих объявлениям, требуемым на дургих языках.\n"
"Первые три выражения присваивания вычисляют подзаголовки формулы, а именно\n"
" -<i>b</i>, <img src=\"./start_files/5.gif\" alt=\"&lt;graphic&gt;\">, и "
"2<i>a</i>.\n"
"Последние два выражения присваивания вычисляют два корня в терминах "
"подзаголовков.\n"
"Пара двух корней - это значение <a name=\"./start:s166\"></"
"a><tt>квадратичной формулы</tt>.\n"
"Например, два корня 2<i>x</i><sup>2</sup> - 4<i>x</i> - 6 это <i>x</i> = 3 и "
"<i>x</i> = -1."

#: start.html:2803
msgctxt "start.html:2803"
msgid "</p><p>"
msgstr ""

#: start.html:2807
msgid ""
"</p><p><tt>(quadratic-formula&nbsp;2&nbsp;-4&nbsp;-6)&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(3&nbsp;.&nbsp;-1)</tt>\n"
"</p><p>The definition above works, but it can be written more clearly "
"without the\n"
"assignments, as shown below."
msgstr ""
"</p><p><tt>(quadratic-formula&nbsp;2&nbsp;-4&nbsp;-6)&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(3&nbsp;.&nbsp;-1)</tt>\n"
"</p><p>Приведенное выше определение работает, но оно может быть написано "
"более четко без присвоений, \n"
"как показано ниже."

#: start.html:2809
msgctxt "start.html:2809"
msgid "</p><p>"
msgstr ""

#: start.html:2811
msgctxt "start.html:2811"
msgid "</p><p><tt>(define&nbsp;quadratic-formula<br>"
msgstr ""

#: start.html:2813
msgctxt "start.html:2813"
msgid "&nbsp;&nbsp;(lambda&nbsp;(a&nbsp;b&nbsp;c)<br>"
msgstr ""

#: start.html:2815
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;([minusb&nbsp;(-&nbsp;0&nbsp;b)]<br>"
msgstr ""

#: start.html:2817
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[radical&nbsp;"
"(sqrt&nbsp;(-&nbsp;(*&nbsp;b&nbsp;b)&nbsp;(*&nbsp;4&nbsp;(*&nbsp;a&nbsp;"
"c))))]<br>"
msgstr ""

#: start.html:2819
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[divisor&nbsp;"
"(*&nbsp;2&nbsp;a)])<br>"
msgstr ""

#: start.html:2821
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;([root1&nbsp;(/&nbsp;(+&nbsp;"
"minusb&nbsp;radical)&nbsp;divisor)]<br>"
msgstr ""

#: start.html:2823
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"[root2&nbsp;(/&nbsp;(-&nbsp;minusb&nbsp;radical)&nbsp;divisor)])<br>"
msgstr ""

#: start.html:2833
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons&nbsp;root1&nbsp;"
"root2)))))</tt>\n"
"</p><p>In this version, the <tt>set!</tt> expressions are gone, and we are "
"left with\n"
"essentially the same algorithm.\n"
"By employing two <tt>let</tt> expressions, however, the definition makes\n"
"clear the dependency of <tt>root1</tt> and <tt>root2</tt> on the values of\n"
"<tt>minusb</tt>, <tt>radical</tt>, and <tt>divisor</tt>.\n"
"Equally important, the <tt>let</tt> expressions make clear the <i>lack</i> "
"of\n"
"dependencies among <tt>minusb</tt>, <tt>radical</tt>, and <tt>divisor</tt> "
"and\n"
"between <tt>root1</tt> and <tt>root2</tt>."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons&nbsp;root1&nbsp;"
"root2)))))</tt>\n"
"</p><p>В этой версии, выражения <tt>set!</tt> исчезли, и мы остались по "
"существу с\n"
"темже алгоритмом.\n"
"Однако, используя два выражения <tt>let</tt>, определение ясно показывает "
"зависимость\n"
" <tt>root1</tt> и <tt>root2</tt> от значений\n"
"<tt>minusb</tt>, <tt>radical</tt>, и <tt>divisor</tt>.\n"
"Не менее важно, что выражения <tt>let</tt> указывают на <i>отсутствие</i> "
"зависимостей\n"
"между <tt>minusb</tt>, <tt>radical</tt>, и <tt>divisor</tt> и между\n"
"<tt>root1</tt> и <tt>root2</tt>."

#: start.html:2841
msgid ""
"</p><p>\n"
"</p><p>Assignments do have some uses in Scheme, otherwise the language\n"
"would not support them.\n"
"Consider the following version of <tt>cons</tt> that counts the number of "
"times\n"
"it is called, storing the count in a variable named <tt>cons-count</tt>.\n"
"It uses <tt>set!</tt> to increment the count; there is no way to achieve "
"the\n"
"same behavior without assignments."
msgstr ""
"</p><p>\n"
"</p><p>У присваиваний есть некотрые варианты использования в Scheme, иначе "
"язык бы\n"
"их не поддерживал.\n"
"Рассмотрим следующую версию <tt>cons</tt> которая подсчитывает какое число "
"раз  она\n"
"вызывается, сохраняя счетчик в переменной с именем <tt>cons-count</tt>.\n"
"Она использует <tt>set!</tt> чтобы увеличить счетчик; нет никакого способа "
"добиться\n"
"такого же поведения без присваиваний."

#: start.html:2843
msgctxt "start.html:2843"
msgid "</p><p>"
msgstr ""

#: start.html:2845
msgid "</p><p><tt>(define&nbsp;kons-count&nbsp;0)<br>"
msgstr ""

#: start.html:2847
msgid "(define&nbsp;kons<br>"
msgstr ""

#: start.html:2849
msgctxt "start.html:2849"
msgid "&nbsp;&nbsp;(lambda&nbsp;(x&nbsp;y)<br>"
msgstr ""

#: start.html:2851
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(set!&nbsp;kons-count&nbsp;(+&nbsp;kons-"
"count&nbsp;1))<br>"
msgstr ""

#: start.html:2856
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(cons&nbsp;x&nbsp;y)))\n"
"<br>\n"
"<br>\n"
"(kons&nbsp;'a&nbsp;'(b&nbsp;c))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;c)<br>"
msgstr ""

#: start.html:2858
msgid ""
"kons-count&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;1<br>"
msgstr ""

#: start.html:2860
msgid ""
"(kons&nbsp;'a&nbsp;(kons&nbsp;'b&nbsp;(kons&nbsp;'c&nbsp;'())))&nbsp;<img "
"src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(a&nbsp;b&nbsp;"
"c)<br>"
msgstr ""

#: start.html:2869
msgid ""
"kons-count&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;4</tt>\n"
"</p><p>Assignments are commonly used to implement procedures that must "
"maintain\n"
"some <a name=\"./start:s167\"></a>internal state.\n"
"For example, suppose we would like to define a procedure that returns\n"
"0 the first time it is called, 1 the second time, 2 the third time,\n"
"and so on indefinitely.\n"
"We could write something similar to the definition of <tt>cons-count</tt>\n"
"above:"
msgstr ""
"kons-count&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;4</tt>\n"
"</p><p>Присваивания обычно используются для реализации процедур, которые "
"должны\n"
"поддерживать некоторое <a name=\"./start:s167\"></a>внутренне состояние.\n"
"Например, предположим, что мы хотели бы определить процедуру, которая "
"возвращает 0\n"
"при первом вызове, 1 во второй раз, 2 в третий,\n"
"и т.д.\n"
"Мы могли бы написать нечто похожее на определенное выше <tt>cons-count</tt>:"

#: start.html:2871
msgctxt "start.html:2871"
msgid "</p><p>"
msgstr ""

#: start.html:2873
msgid "</p><p><tt>(define&nbsp;next&nbsp;0)<br>"
msgstr ""

#: start.html:2875
msgid "(define&nbsp;count<br>"
msgstr ""

#: start.html:2877
msgctxt "start.html:2877"
msgid "&nbsp;&nbsp;(lambda&nbsp;()<br>"
msgstr ""

#: start.html:2879
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;([v&nbsp;next])<br>"
msgstr ""

#: start.html:2881
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(set!&nbsp;next&nbsp;(+&nbsp;"
"next&nbsp;1))<br>"
msgstr ""

#: start.html:2886
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v)))\n"
"<br>\n"
"<br>\n"
"(count)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;0<br>"
msgstr ""

#: start.html:2895
msgid ""
"(count)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;1</tt>\n"
"</p><p>This solution is somewhat undesirable in that the variable <tt>next</"
"tt> is visible\n"
"at top level even though it need not be.\n"
"Since it is visible at top level, any code in the system can change its\n"
"value, perhaps inadvertently affecting the behavior of\n"
"<tt>count</tt> in a subtle way.\n"
"We can solve this problem by <tt>let</tt>-binding <tt>next</tt> outside of "
"the\n"
"<tt>lambda</tt> expression:"
msgstr ""
"(count)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;1</tt>\n"
"</p><p>Это решение немного не желательно в том смысле, что переменная "
"<tt>next</tt> видна\n"
"на верхнем уровне, хотя в этом не требуется.\n"
"Поскольку она отображается на верхнем уровне, любой код в системе может "
"изменить ее значение,\n"
"возможно, непреднамеренно влияя на поведение <tt>count</tt> незаметным "
"образом.\n"
"Мы можем решить эту проблему путем <tt>let</tt>-связывания <tt>next</tt> "
"находящейся за \n"
"пределами <tt>lambda</tt> выражения:"

#: start.html:2897
msgctxt "start.html:2897"
msgid "</p><p>"
msgstr ""

#: start.html:2899
msgid "</p><p><tt>(define&nbsp;count<br>"
msgstr ""

#: start.html:2901
msgid "&nbsp;&nbsp;(let&nbsp;([next&nbsp;0])<br>"
msgstr ""

#: start.html:2903
msgctxt "start.html:2903"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;()<br>"
msgstr ""

#: start.html:2905
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;([v&nbsp;next])<br>"
msgstr ""

#: start.html:2907
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(set!&nbsp;next&nbsp;(+&nbsp;"
"next&nbsp;1))<br>"
msgstr ""

#: start.html:2913
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v))))</tt>\n"
"</p><p>The latter solution also generalizes easily to provide multiple "
"counters,\n"
"each with its own local counter.\n"
"The procedure <a name=\"./start:s168\"></a><tt>make-counter</tt>, defined "
"below, returns a new counting\n"
"procedure each time it is called."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v))))</tt>\n"
"</p><p>Последнее решение также легко обобщается, для того чтобы предоставить "
"несколько счетчиков,\n"
"каждый из которых имеет свой собственный локальный счетчик.\n"
"Процедура <a name=\"./start:s168\"></a><tt>make-counter</tt>, определенная "
"ниже, возвращает новую\n"
"процедуру счета каждый раз, когда она вызывается."

#: start.html:2915
msgctxt "start.html:2915"
msgid "</p><p>"
msgstr ""

#: start.html:2917
msgid "</p><p><tt>(define&nbsp;make-counter<br>"
msgstr ""

#: start.html:2919
msgctxt "start.html:2919"
msgid "&nbsp;&nbsp;(lambda&nbsp;()<br>"
msgstr ""

#: start.html:2921
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;([next&nbsp;0])<br>"
msgstr ""

#: start.html:2923
msgctxt "start.html:2923"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;()<br>"
msgstr ""

#: start.html:2925
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;([v&nbsp;next])<br>"
msgstr ""

#: start.html:2927
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(set!&nbsp;"
"next&nbsp;(+&nbsp;next&nbsp;1))<br>"
msgstr ""

#: start.html:2932
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v)))))</tt>\n"
"</p><p>Since <tt>next</tt> is bound inside of <tt>make-counter</tt> but "
"outside of\n"
"the procedure returned by <tt>make-counter</tt>, each procedure it returns\n"
"maintains its own unique counter."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v)))))</tt>\n"
"</p><p>Поскольку <tt>next</tt> связывается внутри <tt>make-counter</tt>, но "
"ВНЕ\n"
"процедуры, возвращаемой <tt>make-counter</tt>, каждая процедура возвращаемая "
"им\n"
"поддерживает свой собственный уникальный счетчик."

#: start.html:2934
msgctxt "start.html:2934"
msgid "</p><p>"
msgstr ""

#: start.html:2936
msgid "</p><p><tt>(define&nbsp;count1&nbsp;(make-counter))<br>"
msgstr ""

#: start.html:2941
msgid ""
"(define&nbsp;count2&nbsp;(make-counter))\n"
"<br>\n"
"<br>\n"
"(count1)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;0<br>"
msgstr ""

#: start.html:2943
msgid ""
"(count2)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;0<br>"
msgstr ""

#: start.html:2945
msgid ""
"(count1)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;1<br>"
msgstr ""

#: start.html:2947
msgid ""
"(count1)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;2<br>"
msgstr ""

#: start.html:2954
msgid ""
"(count2)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;1</tt>\n"
"</p><p>If a state variable must be shared by more than one\n"
"procedure defined at top level, but we do not want the state\n"
"variable to be visible at top level, we can use <tt>let</tt>\n"
"to bind the variable and <tt>set!</tt> to make the procedures\n"
"visible at top level.<a name=\"./start:s169\"></a><a name=\"./start:s170\"></"
"a>"
msgstr ""
"(count2)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;1</tt>\n"
"</p><p>Если переменная состояния должна разделяться несколькими процедурами, "
"определенными\n"
"на верхнем уровне, но мы не хотим, чтобы эта переменная состояния была "
"видимой на\n"
"верхнем уровне, мы можем использовать <tt>let</tt>\n"
"для связывания этой переменной и <tt>set!</tt> чтобы сделать процедуры "
"видиммыми\n"
"на верхнем уровне.<a name=\"./start:s169\"></a><a name=\"./start:s170\"></a>"

#: start.html:2956
msgctxt "start.html:2956"
msgid "</p><p>"
msgstr ""

#: start.html:2958
msgid "</p><p><tt>(define&nbsp;shhh&nbsp;#f)<br>"
msgstr ""

#: start.html:2960
msgid "(define&nbsp;tell&nbsp;#f)<br>"
msgstr ""

#: start.html:2962
msgid "(let&nbsp;([secret&nbsp;0])<br>"
msgstr ""

#: start.html:2964
msgid "&nbsp;&nbsp;(set!&nbsp;shhh<br>"
msgstr ""

#: start.html:2966
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;(message)<br>"
msgstr ""

#: start.html:2968
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(set!&nbsp;secret&nbsp;message)))<br>"
msgstr ""

#: start.html:2970
msgid "&nbsp;&nbsp;(set!&nbsp;tell<br>"
msgstr ""

#: start.html:2972
msgctxt "start.html:2972"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;()<br>"
msgstr ""

#: start.html:2977
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;secret)))\n"
"<br>\n"
"<br>\n"
"(shhh&nbsp;\"sally&nbsp;likes&nbsp;harry\")<br>"
msgstr ""

#: start.html:2979
msgid ""
"(tell)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"\"sally&nbsp;likes&nbsp;harry\"<br>"
msgstr ""

#: start.html:2989
msgid ""
"secret&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"<i>exception:&nbsp;variable&nbsp;secret&nbsp;is&nbsp;not&nbsp;bound</i></"
"tt>\n"
"</p><p>Variables must be defined\n"
"before they can be assigned, so we define \n"
"<tt>shhh</tt> and <tt>tell</tt> to be\n"
"<tt>#f</tt> initially.\n"
"(Any initial value would do.)\n"
"We'll see this structure again in Section&nbsp;<a href=\"further."
"html#g79\">3.5</a>\n"
"and a better way to structure code like this as a library in\n"
"Section&nbsp;<a href=\"further.html#g84\">3.6</a>."
msgstr ""
"secret&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"<i>exception:&nbsp;variable&nbsp;secret&nbsp;is&nbsp;not&nbsp;bound</i></"
"tt>\n"
"</p><p>Переменные должны быть определены до того, как \n"
"им можно присваивать значения, поэтому мы определяем\n"
"<tt>shhh</tt> и <tt>tell</tt> и говорим, тобы они были\n"
"<tt>#f</tt> изначально.\n"
"(Подошло бы любое начальное значение.)\n"
"Мы увидим эту стурктуру снова в Разделе&nbsp;<a href=\"further."
"html#g79\">3.5</a>\n"
"и лучший способ структурировать такой код сделать как библиотеку в Разделе\n"
"&nbsp;<a href=\"further.html#g84\">3.6</a>."

#: start.html:3006
msgid ""
"</p><p>\n"
"<a name=\"./start:s171\"></a>Local state is sometimes useful for caching\n"
"computed values or allowing a computation to be\n"
"evaluated <i>lazily</i>, i.e., only once and only on demand.\n"
"The procedure <a name=\"./start:s172\"></a><tt>lazy</tt> below accepts a\n"
"<a name=\"./start:s173\"></a><i>thunk</i>, or\n"
"zero-argument procedure, as an argument.\n"
"Thunks are often used to \"freeze\" computations that must be\n"
"delayed for some reason, which is exactly what we need to do in\n"
"this situation.\n"
"When passed a thunk <tt><i>t</i></tt>, <tt>lazy</tt> returns a new thunk "
"that, when\n"
"invoked, returns the value of invoking <tt><i>t</i></tt>.\n"
"Once computed, the value is saved in a local variable so that the\n"
"computation need not be performed again.\n"
"A boolean flag is used to record whether <tt><i>t</i></tt> has been\n"
"invoked and its value saved."
msgstr ""
"</p><p>\n"
"<a name=\"./start:s171\"></a>Локальные состояния иногда полезны для "
"кеширования\n"
"вычисленных значений или возможности вычислять значения  <i>лениво</i>, т."
"е.,\n"
"только один раз и только по требованию.\n"
"Процедура <a name=\"./start:s172\"></a><tt>lazy</tt> ниже, принимает в \n"
"качестве аргумента <a name=\"./start:s173\"></a><i>thunk</i>, или\n"
"процедуру без аргументов.\n"
"Thunks часто используется для \"замораживания\" вычислений, которые по какой "
"то\n"
"причине должны быть отложены, и именно это нам нужно сделать в этой "
"ситуации.\n"
"Когда передано thunk <tt><i>t</i></tt>, <tt>lazy</tt> возвращает новый "
"thunk, который\n"
"при вызове возвращает значение вызова <tt><i>t</i></tt>.\n"
"После вычисления, значение сохраняется  в локальной переменной, так что "
"вычисление\n"
"не должно выполняться снова.\n"
"Булевский флаг используется для записи того, был ли <tt><i>t</i></tt> вызван "
"и\n"
"его значение сохранено."

#: start.html:3008
msgctxt "start.html:3008"
msgid "</p><p>"
msgstr ""

#: start.html:3010
msgid "</p><p><tt>(define&nbsp;lazy<br>"
msgstr ""

#: start.html:3012
msgid "&nbsp;&nbsp;(lambda&nbsp;(t)<br>"
msgstr ""

#: start.html:3014
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;([val&nbsp;#f]&nbsp;[flag&nbsp;#f])<br>"
msgstr ""

#: start.html:3016
msgctxt "start.html:3016"
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;()<br>"
msgstr ""

#: start.html:3018
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(not&nbsp;flag)<br>"
msgstr ""

#: start.html:3020
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"(begin&nbsp;(set!&nbsp;val&nbsp;(t))<br>"
msgstr ""

#: start.html:3022
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(set!&nbsp;flag&nbsp;#t)))<br>"
msgstr ""

#: start.html:3032
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val))))</tt>\n"
"</p><p>The syntactic form <a name=\"./start:s174\"></a><tt>begin</tt>, used "
"here for the first time, evaluates\n"
"its subexpressions in sequence from left to right and returns the value\n"
"of the last subexpression,\n"
"like the body of a <tt>let</tt> or <tt>lambda</tt> expression.\n"
"We also see that the <tt><i>alternative</i></tt> subexpression of an <a name="
"\"./start:s175\"></a><tt>if</tt>\n"
"expression can be omitted.\n"
"This should be done only when the value of the <tt>if</tt> is discarded, as\n"
"it is in this case."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val))))</tt>\n"
"</p><p>Синтаксическая форма <a name=\"./start:s174\"></a><tt>begin</tt>, "
"использующаяся здесь в первый раз,\n"
"вычисляет последовательность подвыражений слева на право и возвращает "
"значение\n"
"последнего подвыражения подобно телу  <tt>let</tt> или <tt>lambda</tt> "
"выражению.\n"
"Мы также видим, что <tt><i>альтернативное</i></tt> подвыражение <a name=\"./"
"start:s175\"></a><tt>if</tt>\n"
"может быть опущено.\n"
"Это нужно делать только тогда, когда значение <tt>if</tt> отбрасывается, как "
"в этом случае."

#: start.html:3039
msgid ""
"</p><p>\n"
"Lazy evaluation is especially useful for values that require\n"
"considerable time to compute.\n"
"By delaying the evaluation, we might avoid computing the value\n"
"altogether, and by saving the value, we avoid computing it\n"
"more than once."
msgstr ""
"</p><p>\n"
"Ленивые(Lazy) вычисления особенно полезны для значений, требующих\n"
"значительного времени для вычисления.\n"
"Задерживая вычисления, мы могли бы вообще не вычислять значение, и запомния "
"значение,\n"
"мы избегаем вычислений более одного раза."

#: start.html:3043
msgid ""
"</p><p>\n"
"The operation of <tt>lazy</tt> can best be illustrated by printing a\n"
"message from within a thunk passed to <tt>lazy</tt>."
msgstr ""
"</p><p>\n"
"Лучше всего проилюстрировать операцию <tt>lazy</tt> напечатав сообщение\n"
"из переданного в <tt>lazy</tt> thunk."

#: start.html:3045
msgctxt "start.html:3045"
msgid "</p><p>"
msgstr ""

#: start.html:3047
msgid "</p><p><tt>(define&nbsp;p<br>"
msgstr ""

#: start.html:3049
msgid "&nbsp;&nbsp;(lazy&nbsp;(lambda&nbsp;()<br>"
msgstr ""

#: start.html:3051
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(display&nbsp;"
"\"Ouch!\")<br>"
msgstr ""

#: start.html:3053
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(newline)<br>"
msgstr ""

#: start.html:3061
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"got&nbsp;me"
"\")))</tt>\n"
"</p><p>The first time <tt>p</tt> is invoked, the message <tt>Ouch!</tt> is "
"printed\n"
"and the string <tt>\"got&nbsp;me\"</tt> is returned.\n"
"Thereafter, <tt>\"got&nbsp;me\"</tt> is returned but the message is not "
"printed.\n"
"The procedures <tt>display</tt> and <tt>newline</tt> are the first examples\n"
"of explicit input/output we have seen; <tt>display</tt> prints the string\n"
"without quotation marks, and <tt>newline</tt> prints a newline character."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"got&nbsp;me"
"\")))</tt>\n"
"</p><p>В первый раз, вызов <tt>p</tt> печатает сообщениеe <tt>Ouch!</tt>  и\n"
"возвращает строку <tt>\"got&nbsp;me\"</tt>.\n"
"После этого, возвращается <tt>\"got&nbsp;me\"</tt>, а сообщение не "
"печатается.\n"
"Процедуры <tt>display</tt> и <tt>newline</tt> являются первыми примерами\n"
"явного ввода/вывода, которые мы видели; <tt>display</tt> печатает строку\n"
"без кавычек, и <tt>newline</tt> печатает знак перевода строки."

#: start.html:3072
msgid ""
"</p><p>\n"
"To further illustrate the use of <tt>set!</tt>,\n"
"let's consider the implementation of <a name=\"./start:s176\"></a>stack "
"objects whose\n"
"internal workings are not visible on the outside.\n"
"A stack object accepts one of four <a name=\"./start:s177\"></a><i>messages</"
"i>: <tt>empty?</tt>, which\n"
"returns <tt>#t</tt> if the stack is empty; <tt>push!</tt>, which adds an "
"object\n"
"to the top of the stack; <tt>top</tt>, which returns the object on the top "
"of\n"
"the stack; and <tt>pop!</tt>, which removes the object on top of the stack.\n"
"The procedure <a name=\"./start:s178\"></a><tt>make-stack</tt> given below "
"creates a new stack each time\n"
"it is called in a manner similar to <tt>make-counter</tt>."
msgstr ""
"</p><p>\n"
"Для дополнительной илюстрации использования <tt>set!</tt>,\n"
"рассмотрим реализацию  <a name=\"./start:s176\"></a>стековых объектов, "
"внутренняя\n"
"работа которых не видна с наружи.\n"
"Стековый объект принимает одно из четырех  \n"
"<a name=\"./start:s177\"></a><i>сообщений</i>: <tt>empty?</tt>, которое \n"
"возвращает <tt>#t</tt> если стек пустой; <tt>push!</tt>, которое добавляет\n"
"объект к вершине стека; <tt>top</tt>, которое возвращает объект в верхней\n"
"части стека; и <tt>pop!</tt>, которое удаляет объект из вершины стека.\n"
"Приведенная ниже процедура <a name=\"./start:s178\"></a><tt>make-stack</tt> "
"создает\n"
"новый стек каждый раз, когда она вызывается, способом аналогичным работе\n"
"<tt>make-counter</tt>."

#: start.html:3074
msgctxt "start.html:3074"
msgid "</p><p>"
msgstr ""

#: start.html:3076
msgid "</p><p><tt>(define&nbsp;make-stack<br>"
msgstr ""

#: start.html:3078
msgctxt "start.html:3078"
msgid "&nbsp;&nbsp;(lambda&nbsp;()<br>"
msgstr ""

#: start.html:3080
msgid "&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;([ls&nbsp;'()])<br>"
msgstr ""

#: start.html:3082
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;(msg&nbsp;.&nbsp;args)<br>"
msgstr ""

#: start.html:3084
msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cond<br>"
msgstr ""

#: start.html:3086
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(eqv?&nbsp;"
"msg&nbsp;'empty?)&nbsp;(null?&nbsp;ls)]<br>"
msgstr ""

#: start.html:3088
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(eqv?&nbsp;"
"msg&nbsp;'push!)&nbsp;(set!&nbsp;ls&nbsp;(cons&nbsp;(car&nbsp;args)&nbsp;"
"ls))]<br>"
msgstr ""

#: start.html:3090
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(eqv?&nbsp;"
"msg&nbsp;'top)&nbsp;(car&nbsp;ls)]<br>"
msgstr ""

#: start.html:3092
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(eqv?&nbsp;"
"msg&nbsp;'pop!)&nbsp;(set!&nbsp;ls&nbsp;(cdr&nbsp;ls))]<br>"
msgstr ""

#: start.html:3103
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[else&nbsp;\"oops"
"\"])))))</tt>\n"
"</p><p>Each stack is stored as a list bound to the variable <tt>ls</tt>; "
"<tt>set!</tt>\n"
"is used to change this binding for <tt>push!</tt> and <tt>pop!</tt>.\n"
"Notice that the argument list of the inner <tt>lambda</tt> expression uses "
"the\n"
"improper list syntax to bind <tt>args</tt> to a list of all arguments but "
"the\n"
"first.\n"
"This is useful here because in the case of <tt>empty?</tt>, <tt>top</tt>, "
"and\n"
"<tt>pop!</tt> there is only one argument (the message), but in the case of\n"
"<tt>push!</tt> there are two (the message and the object to push onto the\n"
"stack)."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[else&nbsp;\"oops"
"\"])))))</tt>\n"
"</p><p>Каждый стек хранится как список, связанный с переменной <tt>ls</tt>; "
"<tt>set!</tt>\n"
"используется для изменения этой привязки для <tt>push!</tt> и <tt>pop!</"
"tt>.\n"
"Обратите внимание, что список аргументов внутреннего <tt>lambda</tt> "
"выражения использует\n"
"синтаксис неправильного списка для связывания <tt>args</tt> со списком всех "
"аргументов,\n"
"кроме первого.\n"
"Это полезно здесь, потому что в случае <tt>empty?</tt>, <tt>top</tt>, и\n"
"<tt>pop!</tt> есть только один аргумент (сообщение), но в случаях\n"
"<tt>push!</tt> есть два аргумента (сообщение и объект, который нужно "
"поместить\n"
"в стек)."

#: start.html:3105
msgctxt "start.html:3105"
msgid "</p><p>"
msgstr ""

#: start.html:3107
msgid "</p><p><tt>(define&nbsp;stack1&nbsp;(make-stack))<br>"
msgstr ""

#: start.html:3109
msgid "(define&nbsp;stack2&nbsp;(make-stack))<br>"
msgstr ""

#: start.html:3114
msgid ""
"(list&nbsp;(stack1&nbsp;'empty?)&nbsp;(stack2&nbsp;'empty?))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(#t&nbsp;#t)\n"
"<br>\n"
"<br>\n"
"(stack1&nbsp;'push!&nbsp;'a)<br>"
msgstr ""

#: start.html:3119
msgid ""
"(list&nbsp;(stack1&nbsp;'empty?)&nbsp;(stack2&nbsp;'empty?))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(#f&nbsp;#t)\n"
"<br>\n"
"<br>\n"
"(stack1&nbsp;'push!&nbsp;'b)<br>"
msgstr ""

#: start.html:3121
msgid "(stack2&nbsp;'push!&nbsp;'c)<br>"
msgstr ""

#: start.html:3123
msgid ""
"(stack1&nbsp;'top)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;b<br>"
msgstr ""

#: start.html:3128
msgid ""
"(stack2&nbsp;'top)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;c\n"
"<br>\n"
"<br>\n"
"(stack1&nbsp;'pop!)<br>"
msgstr ""

#: start.html:3130
msgid ""
"(stack1&nbsp;'top)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;a<br>"
msgstr ""

#: start.html:3135
msgid ""
"(list&nbsp;(stack1&nbsp;'empty?)&nbsp;(stack2&nbsp;'empty?))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(#f&nbsp;#f)\n"
"<br>\n"
"<br>\n"
"(stack1&nbsp;'pop!)<br>"
msgstr ""

#: start.html:3148
msgid ""
"(list&nbsp;(stack1&nbsp;'empty?)&nbsp;(stack2&nbsp;'empty?))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(#t&nbsp;#f)</tt>\n"
"</p><p>As with the counters created by <tt>make-counter</tt>, the state "
"maintained\n"
"by each stack object is directly accessible only within the object.\n"
"Each reference or change to this state is made explicitly by the object\n"
"itself.\n"
"One important benefit is that we can change the internal structure\n"
"of the stack, perhaps to use a vector (see Section&nbsp;<a href=\"objects."
"html#g115\">6.9</a>) instead\n"
"of a list to hold the elements,\n"
"without changing its external behavior.\n"
"Because the behavior of the object is known abstractly (not operationally),\n"
"it is known as an <i>abstract object</i>.\n"
"See Section&nbsp;<a href=\"examples.html#g193\">12.8</a> for more about "
"creating <a name=\"./start:s179\"></a>abstract objects."
msgstr ""
"(list&nbsp;(stack1&nbsp;'empty?)&nbsp;(stack2&nbsp;'empty?))&nbsp;<img src="
"\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(#t&nbsp;#f)</tt>\n"
"</p><p>Как и для счетчиков, созданных <tt>make-counter</tt>, состояние,\n"
"поддерживаемое каждым стековым объектом, доступно напрямую только внутри\n"
"объекта.\n"
"Каждая ссылка или изменение этого состояния производиться явно самим "
"объектом.\n"
"Одним из важных преимуществ(инкапсуляции) является то, что мы можем изменить "
"внутреннюю\n"
"структуру стека, например, использовать вектор.(см. Раздел&nbsp;<a href="
"\"objects.html#g115\">6.9</a>) instead\n"
"вместо списка для хранения элементов,\n"
"без изменения его внешнего поведения.\n"
"Поскольку поведение объекта известно абстрактно (не оперативно),\n"
"он известен как <i>абстрактный объект</i>.\n"
"См. Раздел&nbsp;<a href=\"examples.html#g193\">12.8</a> для получения "
"подробной\n"
"информаии о создании <a name=\"./start:s179\"></a>абстрактных объектов."

#: start.html:3153
msgid ""
"</p><p>\n"
"In addition to changing the values of variables, we can also change\n"
"the values of the car and cdr fields of a pair, using the procedures\n"
"<tt>set-car!</tt> and <tt>set-cdr!</tt>."
msgstr ""
"</p><p>\n"
"В дополнение к изменению значений переменных мы также можем изменить\n"
"значения полей car и cdr пары, спользуя процедуры\n"
"<tt>set-car!</tt> и <tt>set-cdr!</tt>."

#: start.html:3155
msgctxt "start.html:3155"
msgid "</p><p>"
msgstr ""

#: start.html:3157
msgid "</p><p><tt>(define&nbsp;p&nbsp;(list&nbsp;1&nbsp;2&nbsp;3))<br>"
msgstr ""

#: start.html:3159
msgid "(set-car!&nbsp;(cdr&nbsp;p)&nbsp;'two)<br>"
msgstr ""

#: start.html:3161
msgid ""
"p&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;"
"(1&nbsp;two&nbsp;3)<br>"
msgstr ""

#: start.html:3163
msgid "(set-cdr!&nbsp;p&nbsp;'())<br>"
msgstr ""

#: start.html:3173
msgid ""
"p&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(1)</"
"tt>\n"
"</p><p><a name=\"queue-datatype\"></a><a name=\"./start:s180\"></a>We can "
"use these operators to define a queue\n"
"data type, which is like a stack except that new elements are added at\n"
"one end and extracted from the other.\n"
"The following queue implementation uses a <a name=\"./start:s181\"></"
"a><i>tconc</i>\n"
"structure.\n"
"A tconc consists of a nonempty list and a header.\n"
"The header is a pair whose car points to the first pair (head) of the\n"
"list and whose cdr points to the last pair (end) of the list."
msgstr ""
"p&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;(1)</"
"tt>\n"
"</p><p><a name=\"queue-datatype\"></a><a name=\"./start:s180\"></a>Мы можем "
"использовать эти\n"
"операторы для определения типа данных очередь, который похож на стек, за "
"исключением\n"
"того, что новые элементы добавляются с одного конца, и извлекаются с другого "
"конца.\n"
"В следующей реализации очереди используется структура <a name=\"./start:"
"s181\"></a><i>tconc</i>.\n"
"tconc состоит из непустого списка и заголовка.\n"
"Заголовок представляет собой пару, car которой указывает на первую "
"пару(голову)\n"
"списка и чей cdr указывает на последнюю пару(конец) списка."

#: start.html:3177
msgid ""
"</p><p>\n"
"</p><p>\n"
"<img src=\"./start_files/6.gif\" alt=\"&lt;graphic&gt;\"></p><p>"
msgstr ""

#: start.html:3182
msgid ""
"</p><p>\n"
"The last element of the list is a placeholder and not considered part\n"
"of the queue."
msgstr ""
"</p><p>\n"
"Последний элемент списка является заполнителем и считается частью очереди."

#: start.html:3192
msgid ""
"</p><p>\n"
"Four operations on queues are defined below:\n"
"<a name=\"./start:s182\"></a><tt>make-queue</tt>, which constructs a queue;\n"
"<a name=\"./start:s183\"></a><tt>putq!</tt>, which adds an element to the "
"end\n"
"of a queue;\n"
"<a name=\"./start:s184\"></a><tt>getq</tt>, which retrieves the element at "
"the\n"
"front of a queue; and\n"
"<a name=\"./start:s185\"></a><tt>delq!</tt>, which removes the element at "
"the\n"
"front of a queue."
msgstr ""
"</p><p>\n"
"Ниже приведены четыре операции над очередями:\n"
"<a name=\"./start:s182\"></a><tt>make-queue</tt>, которая создает очередь;\n"
"<a name=\"./start:s183\"></a><tt>putq!</tt>, которая добавляет элемент в \n"
"конец очереди;\n"
"<a name=\"./start:s184\"></a><tt>getq</tt>, которая извлекает элемен из "
"начала очереди; \n"
"и <a name=\"./start:s185\"></a><tt>delq!</tt>, которая удаляет элемент из \n"
"передней части очереди."

#: start.html:3194
msgctxt "start.html:3194"
msgid "</p><p>"
msgstr ""

#: start.html:3196
msgid "</p><p><tt>(define&nbsp;make-queue<br>"
msgstr ""

#: start.html:3198
msgctxt "start.html:3198"
msgid "&nbsp;&nbsp;(lambda&nbsp;()<br>"
msgstr ""

#: start.html:3200
msgctxt "start.html:3200"
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;([end&nbsp;"
"(cons&nbsp;'ignored&nbsp;'())])<br>"
msgstr ""

#: start.html:3205
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons&nbsp;end&nbsp;end))))\n"
"<br>\n"
"<br>\n"
"(define&nbsp;putq!<br>"
msgstr ""

#: start.html:3207
msgid "&nbsp;&nbsp;(lambda&nbsp;(q&nbsp;v)<br>"
msgstr ""

#: start.html:3209
msgctxt "start.html:3209"
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;([end&nbsp;"
"(cons&nbsp;'ignored&nbsp;'())])<br>"
msgstr ""

#: start.html:3211
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(set-car!&nbsp;(cdr&nbsp;q)&nbsp;v)<br>"
msgstr ""

#: start.html:3213
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(set-cdr!&nbsp;(cdr&nbsp;q)&nbsp;end)<br>"
msgstr ""

#: start.html:3218
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(set-cdr!&nbsp;q&nbsp;end))))\n"
"<br>\n"
"<br>\n"
"(define&nbsp;getq<br>"
msgstr ""

#: start.html:3220
msgctxt "start.html:3220"
msgid "&nbsp;&nbsp;(lambda&nbsp;(q)<br>"
msgstr ""

#: start.html:3225
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(car&nbsp;(car&nbsp;q))))\n"
"<br>\n"
"<br>\n"
"(define&nbsp;delq!<br>"
msgstr ""

#: start.html:3227
msgctxt "start.html:3227"
msgid "&nbsp;&nbsp;(lambda&nbsp;(q)<br>"
msgstr ""

#: start.html:3231
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;(set-car!&nbsp;q&nbsp;(cdr&nbsp;(car&nbsp;q)))))</"
"tt>\n"
"</p><p>All are simple operations except for <tt>putq!</tt>, which modifies "
"the\n"
"end pair to contain the new value and adds a new end pair."
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;(set-car!&nbsp;q&nbsp;(cdr&nbsp;(car&nbsp;q)))))</"
"tt>\n"
"</p><p>Все это простые операции, за исключением <tt>putq!</tt>, которая\n"
"изменяет конечную пару, чтобы та содержала новое значение, и добавляет\n"
"новую конечную пару."

#: start.html:3233
msgctxt "start.html:3233"
msgid "</p><p>"
msgstr ""

#: start.html:3238
msgid ""
"</p><p><tt>(define&nbsp;myq&nbsp;(make-queue))\n"
"<br>\n"
"<br>\n"
"(putq!&nbsp;myq&nbsp;'a)<br>"
msgstr ""

#: start.html:3240
msgid "(putq!&nbsp;myq&nbsp;'b)<br>"
msgstr ""

#: start.html:3242
msgid ""
"(getq&nbsp;myq)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;a<br>"
msgstr ""

#: start.html:3244
msgctxt "start.html:3244"
msgid "(delq!&nbsp;myq)<br>"
msgstr ""

#: start.html:3246
msgid ""
"(getq&nbsp;myq)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;b<br>"
msgstr ""

#: start.html:3248
msgctxt "start.html:3248"
msgid "(delq!&nbsp;myq)<br>"
msgstr ""

#: start.html:3250
msgid "(putq!&nbsp;myq&nbsp;'c)<br>"
msgstr ""

#: start.html:3252
msgid "(putq!&nbsp;myq&nbsp;'d)<br>"
msgstr ""

#: start.html:3254
msgid ""
"(getq&nbsp;myq)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;c<br>"
msgstr ""

#: start.html:3256
msgctxt "start.html:3256"
msgid "(delq!&nbsp;myq)<br>"
msgstr ""

#: start.html:3264
msgid ""
"(getq&nbsp;myq)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;d</tt>\n"
"</p><p>\n"
"</p><h4>Exercise <a name=\"g41\"></a>2.9.1</h4>\n"
"<a name=\"./start:s186\"></a>Modify <a name=\"./start:s187\"></a><tt>make-"
"counter</tt> to take two\n"
"arguments: an initial value for the\n"
"counter to use in place of 0 and an amount to increment the counter\n"
"by each time."
msgstr ""
"(getq&nbsp;myq)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;d</tt>\n"
"</p><p>\n"
"</p><h4>Упражнение <a name=\"g41\"></a>2.9.1</h4>\n"
"<a name=\"./start:s186\"></a>Измените <a name=\"./start:s187\"></a><tt>make-"
"counter</tt> чтобы она принимала\n"
"два аргумента: начальное значение для счетчика, используемого вместо 0 и "
"количество, чтобы увеличивать\n"
"счетчик каждый раз."

#: start.html:3266
msgctxt "start.html:3266"
msgid "<p>"
msgstr ""

#: start.html:3269
msgctxt "start.html:3269"
msgid "</p><p>"
msgstr ""

#: start.html:3276
msgid ""
"</p><h4>Exercise <a name=\"g42\"></a>2.9.2</h4>\n"
"<a name=\"./start:s188\"></a>Look up the description of <a name=\"./start:"
"s189\"></a><tt>case</tt> in Section&nbsp;<a href=\"control.html#g99\">5.3</"
"a>.\n"
"Replace the <tt>cond</tt> expression in\n"
"<a name=\"./start:s190\"></a><tt>make-stack</tt> with an equivalent\n"
"<tt>case</tt> expression.\n"
"Add <tt>mt?</tt> as a second name for the <tt>empty?</tt> message."
msgstr ""
"</p><h4>Упражнение <a name=\"g42\"></a>2.9.2</h4>\n"
"<a name=\"./start:s188\"></a>Посмотрите описание <a name=\"./start:s189\"></"
"a><tt>case</tt> в разделе&nbsp;<a href=\"control.html#g99\">5.3</a>.\n"
"Замените выражение <tt>cond</tt> в <a name=\"./start:s190\"></a><tt>make-"
"stack</tt> эквивалентным\n"
"выражением <tt>case</tt>.\n"
"Добавьте <tt>mt?</tt> как второе имя для сообщения <tt>empty?</tt>."

#: start.html:3278
msgctxt "start.html:3278"
msgid "<p>"
msgstr ""

#: start.html:3281
msgctxt "start.html:3281"
msgid "</p><p>"
msgstr ""

#: start.html:3290
msgid ""
"</p><h4>Exercise <a name=\"g43\"></a>2.9.3</h4>\n"
"<a name=\"./start:s191\"></a><a name=\"EXSTACKREFANDSET\"></a>Modify the "
"<tt>stack</tt> object to allow the two messages <tt>ref</tt> and\n"
"<tt>set!</tt>.\n"
"<tt>(<i>stack</i>&nbsp;'ref&nbsp;<i>i</i>)</tt> should return the <tt><i>i</"
"i></tt>th element from\n"
"the top of the stack; <tt>(<i>stack</i>&nbsp;'ref&nbsp;0)</tt> should be "
"equivalent\n"
"to <tt>(<i>stack</i>&nbsp;'top)</tt>.\n"
"<tt>(<i>stack</i>&nbsp;'set!&nbsp;<i>i</i>&nbsp;<i>v</i>)</tt> should change "
"the <tt><i>i</i></tt>th\n"
"element from the top of the stack to <tt><i>v</i></tt>."
msgstr ""
"</p><h4>Упражнение <a name=\"g43\"></a>2.9.3</h4>\n"
"<a name=\"./start:s191\"></a><a name=\"EXSTACKREFANDSET\"></a>Измените "
"объект <tt>stack</tt>, чтобы разрешить\n"
"два сообщения <tt>ref</tt> и\n"
"<tt>set!</tt>.\n"
"<tt>(<i>stack</i>&nbsp;'ref&nbsp;<i>i</i>)</tt> должен возвращать <tt><i>i</"
"i></tt>-й элемент из \n"
"вершины стека; <tt>(<i>stack</i>&nbsp;'ref&nbsp;0)</tt> должен быть "
"эвивалентен <tt>(<i>stack</i>&nbsp;'top)</tt>.\n"
"<tt>(<i>stack</i>&nbsp;'set!&nbsp;<i>i</i>&nbsp;<i>v</i>)</tt> должен "
"изменить <tt><i>i</i></tt>-й\n"
"элемент из вершины стека на <tt><i>v</i></tt>."

#: start.html:3292
msgctxt "start.html:3292"
msgid "<p>"
msgstr ""

#: start.html:3297
msgid ""
"</p><p><tt>(define&nbsp;stack&nbsp;(make-stack))\n"
"<br>\n"
"<br>\n"
"(stack&nbsp;'push!&nbsp;'a)<br>"
msgstr ""

#: start.html:3299
msgid "(stack&nbsp;'push!&nbsp;'b)<br>"
msgstr ""

#: start.html:3304
msgid ""
"(stack&nbsp;'push!&nbsp;'c)\n"
"<br>\n"
"<br>\n"
"(stack&nbsp;'ref&nbsp;0)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;c<br>"
msgstr ""

#: start.html:3306
msgid ""
"(stack&nbsp;'ref&nbsp;2)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;a<br>"
msgstr ""

#: start.html:3308
msgid "(stack&nbsp;'set!&nbsp;1&nbsp;'d)<br>"
msgstr ""

#: start.html:3310
msgid ""
"(stack&nbsp;'ref&nbsp;1)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;d<br>"
msgstr ""

#: start.html:3312
msgid ""
"(stack&nbsp;'top)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;c<br>"
msgstr ""

#: start.html:3314
msgid "(stack&nbsp;'pop!)<br>"
msgstr ""

#: start.html:3318
msgid ""
"(stack&nbsp;'top)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;d</tt>\n"
"</p><p>[<i>Hint</i>: Use <tt>list-ref</tt> to implement <tt>ref</tt> and "
"<tt>list-tail</tt>\n"
"with <tt>set-car!</tt> to implement <tt>set!</tt>.]"
msgstr ""
"(stack&nbsp;'top)&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;graphic&gt;"
"\">&nbsp;d</tt>\n"
"</p><p>[<i>Hint</i>: Используйте <tt>list-ref</tt> для реализации <tt>ref</"
"tt> и <tt>list-tail</tt>\n"
"с <tt>set-car!</tt> для реализации <tt>set!</tt>.]"

#: start.html:3320
msgctxt "start.html:3320"
msgid "</p><p>"
msgstr ""

#: start.html:3323
msgctxt "start.html:3323"
msgid "</p><p>"
msgstr ""

#: start.html:3331
msgid ""
"</p><h4>Exercise <a name=\"g44\"></a>2.9.4</h4>\n"
"<a name=\"./start:s192\"></a><a name=\"./start:s193\"></a>Scheme supports "
"<i>vectors</i> as well as lists.\n"
"Like lists, vectors are aggregate objects that contain other\n"
"objects.\n"
"Unlike lists, vectors have a fixed size and are laid out\n"
"in one flat block of memory, typically with a header containing\n"
"the length of the vector, as in the ten-element vector below."
msgstr ""
"</p><h4>Упражнение <a name=\"g44\"></a>2.9.4</h4>\n"
"<a name=\"./start:s192\"></a><a name=\"./start:s193\"></a>Scheme "
"поддерживает <i>вектора</i> также как и списки.\n"
"Подобно спискам, вектора представляют собой контейнерные объекты, которые "
"содержат другие объекты.\n"
"В отличии от списков, вектора имеют фиксированный размер и размещаются в "
"одном плоском блоке памяти, как правило, с заголовком, содержащим длину "
"вектора, как десяти-элементном векторе ниже."

#: start.html:3335
msgid ""
"<p>\n"
"</p><p>\n"
"<img src=\"./start_files/7.gif\" alt=\"&lt;graphic&gt;\"></p><p>"
msgstr ""

#: start.html:3342
msgid ""
"</p><p>\n"
"This makes vectors more suitable for applications needing\n"
"fast access to any element of the aggregate but less suitable for\n"
"applications needing data structures that grow and shrink\n"
"as needed."
msgstr ""
"</p><p>\n"
"Это делает вектора более подходящими для приложений, которым\n"
"необходим быстрый доступ к любому элементу контейнера, но менее\n"
"подходит для приложений, трубующих структуры данных которые растут\n"
"и сжимаются по мере необходимости."

#: start.html:3353
msgid ""
"</p><p>\n"
"Look up the basic vector operations in\n"
"Section&nbsp;<a href=\"objects.html#g115\">6.9</a> and reimplement the\n"
"<tt>stack</tt> object to use a vector instead of a list to hold\n"
"the stack contents.\n"
"Include the <tt>ref</tt> and <tt>set!</tt> messages of\n"
"Exercise&nbsp;<a href=\"start.html#g43\">2.9.3</a>.\n"
"Have the new <tt>make-stack</tt> accept a size argument <i>n</i>\n"
"and make the vector length <i>n</i>, but do not otherwise change\n"
"the external (abstract) interface."
msgstr ""
"</p><p>\n"
"Посмотрите основные векторные операции в разделе\n"
"&nbsp;<a href=\"objects.html#g115\">6.9</a> и реализуйте объект\n"
"<tt>stack</tt> чтобы использовать вектор вместо списка для\n"
"хранения содержимого стека.\n"
"Включите сообщения <tt>ref</tt> и <tt>set!</tt> упражнения&nbsp;<a href="
"\"start.html#g43\">2.9.3</a>.\n"
"Сделайте новый <tt>make-stack</tt> принимающий аргумент размера <i>n</i>\n"
"и создающий вектор длины <i>n</i>, но иначе не изменить "
"внешний(абстрактный)\n"
"интерфейс."

#: start.html:3355
msgctxt "start.html:3355"
msgid "</p><p>"
msgstr ""

#: start.html:3358
msgctxt "start.html:3358"
msgid "</p><p>"
msgstr ""

#: start.html:3363
msgid ""
"</p><h4>Exercise <a name=\"g45\"></a>2.9.5</h4>\n"
"<a name=\"./start:s194\"></a>Define a predicate, <tt>emptyq?</tt>, for "
"determining if a queue is empty.\n"
"Modify <tt>getq</tt> and <tt>delq!</tt> to raise an exception when an empty\n"
"queue is found, using <tt>assertion-violation</tt>."
msgstr ""
"</p><h4>Упражнение <a name=\"g45\"></a>2.9.5</h4>\n"
"<a name=\"./start:s194\"></a>Определите предикат, <tt>emptyq?</tt>, для "
"определения, является ли очередь\n"
"устой.\n"
"Измените <tt>getq</tt> и <tt>delq!</tt> чтобы вызывалось исключение, когда "
"найдена пустая очередь,\n"
"используйте <tt>assertion-violation</tt>."

#: start.html:3365
msgctxt "start.html:3365"
msgid "<p>"
msgstr ""

#: start.html:3369
msgctxt "start.html:3369"
msgid "</p><p>"
msgstr ""

#: start.html:3377
msgid ""
"</p><h4>Exercise <a name=\"g46\"></a>2.9.6</h4>\n"
"<a name=\"./start:s195\"></a>In the queue implementation, the last pair in "
"the encapsulated\n"
"list is a placeholder, i.e., it never holds anything useful.\n"
"Recode the queue operators to avoid this wasted pair.\n"
"Make sure that the series of queue operations given earlier\n"
"works with the new implementation.\n"
"Which implementation do you prefer?"
msgstr ""
"</p><h4>Упражнение <a name=\"g46\"></a>2.9.6</h4>\n"
"<a name=\"./start:s195\"></a>В реализации очереди, последняя пара во "
"внутреннем списке\n"
"является заполнителем, т.е никогда не содержит ничего полезного.\n"
"Перекодируйте операторы очереди, чтобы избежать этой пустой пары.\n"
"Убедитесь, что серия операций с очередями, приведенная ранее, работает с "
"новой раализацией.\n"
"Какую реализацию предпочтете вы?"

#: start.html:3379
msgctxt "start.html:3379"
msgid "<p>"
msgstr ""

#: start.html:3382
msgctxt "start.html:3382"
msgid "</p><p>"
msgstr ""

#: start.html:3387
msgid ""
"</p><h4>Exercise <a name=\"g47\"></a>2.9.7</h4>\n"
"<a name=\"./start:s196\"></a>Using <a name=\"./start:s197\"></a><tt>set-cdr!"
"</tt>, it is possible to create <a name=\"./start:s198\"></a><i>cyclic "
"lists</i>.\n"
"For example, the following expression evaluates to a list whose\n"
"car is the symbol <tt>a</tt> and whose cdr is the list itself."
msgstr ""
"</p><h4>Упражнение <a name=\"g47\"></a>2.9.7</h4>\n"
"<a name=\"./start:s196\"></a>Используя <a name=\"./start:s197\"></a><tt>set-"
"cdr!</tt>, можно создавать <a name=\"./start:s198\"></a><i>циклические "
"списки</i>.\n"
"Например, следующее выражение вычисляет список, чей car это символ <tt>a</"
"tt> и чей cdr является самим списком."

#: start.html:3389
msgctxt "start.html:3389"
msgid "<p>"
msgstr ""

#: start.html:3391
msgid "</p><p><tt>(let&nbsp;([ls&nbsp;(cons&nbsp;'a&nbsp;'())])<br>"
msgstr ""

#: start.html:3393
msgid "&nbsp;&nbsp;(set-cdr!&nbsp;ls&nbsp;ls)<br>"
msgstr ""

#: start.html:3400
msgid ""
"&nbsp;&nbsp;ls)</tt>\n"
"</p><p>What happens when you enter the above expression during an "
"interactive\n"
"Scheme session?\n"
"What will the implementation of <tt>length</tt> on page&nbsp;<a href=\"start."
"html#defn:simplelength\">42</a>\n"
"do when given a cyclic list?\n"
"What does the built-in <tt>length</tt> primitive do?"
msgstr ""
"&nbsp;&nbsp;ls)</tt>\n"
"</p><p>Что произойдет, когда вы введете указанное выражение во время "
"интерактивной сессии\n"
"Scheme?\n"
"Какова будет реализация <tt>length</tt> на странице&nbsp;<a href=\"start."
"html#defn:simplelength\">42</a>\n"
"при предоставлении циклического списка?\n"
"Что делает встроенный примитив <tt>length</tt>?"

#: start.html:3402
msgctxt "start.html:3402"
msgid "</p><p>"
msgstr ""

#: start.html:3406
msgctxt "start.html:3406"
msgid "</p><p>"
msgstr ""

#: start.html:3413
msgid ""
"</p><h4>Exercise <a name=\"g48\"></a>2.9.8</h4>\n"
"<a name=\"./start:s199\"></a><a name=\"EXLIST?\"></a>Define the predicate <a "
"name=\"./start:s200\"></a><tt>list?</tt>, which returns\n"
"<tt>#t</tt> if its argument is a <a name=\"./start:s201\"></a>proper list "
"and <tt>#f</tt> otherwise\n"
"(see Section&nbsp;<a href=\"objects.html#g109\">6.3</a>).\n"
"It should return <tt>#f</tt> for cyclic lists as well as for lists\n"
"terminated by objects other than <tt>()</tt>."
msgstr ""
"</p><h4>Упражнение <a name=\"g48\"></a>2.9.8</h4>\n"
"<a name=\"./start:s199\"></a><a name=\"EXLIST?\"></a>Определите предикат <a "
"name=\"./start:s200\"></a><tt>list?</tt>, который возвращает\n"
"<tt>#t</tt> если аргумент является <a name=\"./start:s201\"></a>правильным "
"списком и <tt>#f</tt> иначе\n"
"(см раздел&nbsp;<a href=\"objects.html#g109\">6.3</a>).\n"
"Он должен возвращать <tt>#f</tt> для циклических списков, заканчивающихся "
"объектами, отличными от <tt>()</tt>."

#: start.html:3415
msgctxt "start.html:3415"
msgid "<p>"
msgstr ""

#: start.html:3417
msgid ""
"</p><p><tt>(list?&nbsp;'())&nbsp;<img src=\"./start_files/0.gif\" alt=\"&lt;"
"graphic&gt;\">&nbsp;#t<br>"
msgstr ""

#: start.html:3419
msgid ""
"(list?&nbsp;'(1&nbsp;2&nbsp;3))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;#t<br>"
msgstr ""

#: start.html:3421
msgid ""
"(list?&nbsp;'(a&nbsp;.&nbsp;b))&nbsp;<img src=\"./start_files/0.gif\" alt="
"\"&lt;graphic&gt;\">&nbsp;#f<br>"
msgstr ""

#: start.html:3423
msgid "(list?&nbsp;(let&nbsp;([ls&nbsp;(cons&nbsp;'a&nbsp;'())])<br>"
msgstr ""

#: start.html:3425
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(set-cdr!&nbsp;ls&nbsp;"
"ls)<br>"
msgstr ""

#: start.html:3438
msgid ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ls))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;#f</tt>\n"
"</p><p>First write a simplified version of <tt>list?</tt> that does not "
"handle\n"
"cyclic lists, then extend this to handle cyclic lists correctly.\n"
"Revise your definition until you are satisfied that it is as clear\n"
"and concise as possible.\n"
"[<i>Hint</i>: Use the following \"<a name=\"./start:s202\"></a>hare and "
"tortoise\" algorithm to\n"
"detect cycles.\n"
"Define a recursive help procedure of two arguments, the hare and the "
"tortoise.\n"
"Start both the hare and the tortoise at the beginning of the list.\n"
"Have the hare advance by two cdrs each time the tortoise\n"
"advances by one cdr.\n"
"If the hare catches the tortoise, there must be a cycle.]"
msgstr ""
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ls))&nbsp;<img src=\"./"
"start_files/0.gif\" alt=\"&lt;graphic&gt;\">&nbsp;#f</tt>\n"
"</p><p>Снача напишите упрощенную версию <tt>list?</tt> которая не "
"обрабатывает\n"
"циклические списки, а затем расширьте ее чтобы правильно обрабатывались "
"циклические списки.\n"
"Пересмотрите свое определение пока не убедитесь, что оно максимально ясное и "
"краткое.\n"
"[<i>Подсказка</i>: Используйте алгоритм \"<a name=\"./start:s202\"></a>заяц "
"и черепаха\" для\n"
"обнаружения циклов.\n"
"Определите рекурсивную процедуру при помощи двух аргументов, зайца и "
"черепахи.\n"
"Оба и заяц и черепаха начинают с начала списка. Попросите зайца продвигаться "
"на два cdr каждый раз,\n"
"как черепаха продвинется на один cdr.\n"
"Если заяц поймает черепаху, здесь должен быть цикл.]"

#: start.html:3440
msgctxt "start.html:3440"
msgid "</p><p>"
msgstr ""

#: start.html:3443
msgctxt "start.html:3443"
msgid "</p><p>"
msgstr ""

#: start.html:3456
msgid ""
"</p><hr class=\"copyright\" align=\"left\">\n"
"<p>\n"
"R. Kent Dybvig / <it>The Scheme Programming Language, Fourth Edition</"
"it><br>\n"
"Copyright © 2009 <a class=\"plain\" href=\"http://mitpress.mit.edu/catalog/"
"item/default.asp?ttype=2&amp;tid=11984\">The MIT Press</a>.  Electronically "
"reproduced by permission.<br>\n"
"Illustrations © 2009 <a class=\"plain\" href=\"http://hebert.kitp.ucsb.edu/"
"\">Jean-Pierre Hébert</a><br>\n"
"ISBN 978-0-262-51298-5 / LOC QA76.73.S34D93<br>\n"
"<a class=\"plain\" href=\"http://mitpress.mit.edu/catalog/item/default.asp?"
"ttype=2&amp;tid=11984\">to order this book</a> / <a class=\"plain\" href="
"\"canned/about.html\">about this book</a>\n"
"</p>\n"
"<p><a class=\"plain\" href=\"http://www.scheme.com/\">http://www.scheme.com</"
"a></p>"
msgstr ""

#: start.html:3458
msgid "</body></html>"
msgstr ""
